cset: moving following pidspec: 11237
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348553039 seconds)
loading group "string"... done (took 0.646078655 seconds)
loading group "linalg"... done (took 7.780317738 seconds)
loading group "parallel"... done (took 0.164929537 seconds)
loading group "find"... done (took 1.157855616 seconds)
loading group "tuple"... done (took 1.89584385 seconds)
loading group "dates"... done (took 1.291535261 seconds)
loading group "micro"... done (took 0.225803723 seconds)
loading group "io"... done (took 0.91629118 seconds)
loading group "scalar"... done (took 38.809507418 seconds)
loading group "sparse"... done (took 12.482465269 seconds)
loading group "broadcast"... done (took 0.957669306 seconds)
loading group "union"... done (took 12.771326982 seconds)
loading group "simd"... done (took 4.564767886 seconds)
loading group "random"... done (took 9.117582191 seconds)
loading group "problem"... done (took 1.860992882 seconds)
loading group "array"... done (took 21.090035057 seconds)
loading group "misc"... done (took 1.73427753 seconds)
loading group "sort"... done (took 3.315617117 seconds)
loading group "collection"... done (took 17.39096891 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539256673 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129179034 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136596798 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123119359 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150700197 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118624496 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128835691 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088933052 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.835698949 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150592411 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119664409 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42146994 seconds)
done (took 5.394382567 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176114921 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086367213 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087709456 seconds)
  done (took 1.295514291 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070081303 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130176657 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070675716 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071449405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071132088 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070848944 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070834633 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070678206 seconds)
  done (took 1.677653018 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076564791 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072883364 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070040828 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072395851 seconds)
  done (took 1.411764573 seconds)
done (took 5.765546066 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775425009 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214735421 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189997057 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.403343025 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133822343 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179642954 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653524017 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316368598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194158707 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082554271 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112737566 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351510359 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126297529 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646478629 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081341012 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094891266 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141120012 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.46167983 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071502502 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086973171 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092977535 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133081006 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092197247 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078441826 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148100781 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071983682 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137563294 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084150097 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071138858 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221688772 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176858103 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662487975 seconds)
  done (took 10.444558327 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104456569 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103482178 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073429579 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130136497 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106618736 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075413369 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079362864 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071836599 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094308645 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135514553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.098412539 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110796208 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070688004 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073731093 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088803191 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213901186 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087259482 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087469056 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074683379 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082416209 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113142706 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081820597 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085249485 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085512384 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132599834 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186231161 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100777469 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.102435521 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073506042 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.091158369 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121076666 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136015871 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072719858 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071408834 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13438741 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100924214 seconds)
  done (took 4.815298898 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.002327205 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145916967 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092903842 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137196545 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069054792 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111930929 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069865743 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085299331 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212065645 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.461327408 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091591479 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.601131556 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115354455 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110192006 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072232037 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073094373 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071202988 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.497284834 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103293031 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109428689 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085482962 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074618976 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072893403 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36250754 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071171172 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067642297 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072197011 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061119759 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1247097 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072005615 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.960161802 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.173620775 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070374802 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104596154 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.294999236 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097263891 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144919371 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073317781 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068483321 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161144581 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074637708 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070342989 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088854953 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107547653 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123551623 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070721431 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070472391 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171806196 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069494953 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083357754 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.17526284 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159077254 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084542877 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071602947 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276987455 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094043482 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074589569 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069720445 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209835893 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133519175 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073866576 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071303711 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072788657 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073759851 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382397881 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070379715 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.220419018 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072058002 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081595144 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07438764 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073237429 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095343011 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079140256 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077102793 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092292239 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071015523 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078994999 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070275452 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070602195 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071837181 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087553816 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.37201566 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071179064 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071587165 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068966921 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093512222 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.20345135 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071890748 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069834913 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06859815 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103454245 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072102847 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070613048 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113870467 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070791612 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087578042 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0733776 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116843221 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074124063 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.109391918 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072810203 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102857575 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076555789 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104554899 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087501902 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074820229 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.41679307 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072319291 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069437334 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071711671 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073759208 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068262952 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070232145 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071901944 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083120016 seconds)
  done (took 22.58076054 seconds)
done (took 39.962595115 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255169103 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081822657 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07931463 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078911994 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078966777 seconds)
  done (took 1.787859255 seconds)
done (took 2.986972412 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124951919 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103419237 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06847808 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102937398 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069588453 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104632027 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104177743 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081763487 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103318995 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068874593 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100214191 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068634124 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069527975 seconds)
  done (took 2.385051063 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087114549 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088550965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074256172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088062117 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068363513 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087409726 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085957327 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093190435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087855265 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077085743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068668148 seconds)
  done (took 2.096811035 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086224906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088418881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073937154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086330351 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068020703 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086640729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085708455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090438934 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086642365 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079231957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068642741 seconds)
  done (took 2.084389611 seconds)
done (took 7.752372362 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082134322 seconds)
  done (took 1.257869305 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.575156751 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.942395515 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086444308 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114079187 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194427281 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122050844 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27116656 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091058883 seconds)
  done (took 8.748152865 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107033888 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075334344 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072535259 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072651186 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074552879 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076200503 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073567613 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074337519 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07676109 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073246998 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073290101 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075046371 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077085197 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075668665 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074042135 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075623142 seconds)
  done (took 2.481989369 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096198032 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.0948757 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077214337 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079359318 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077122981 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075846585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078326838 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078098585 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075374922 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07677694 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079229231 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077659594 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07564778 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06886907 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078393408 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080020095 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075224922 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078823253 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078914781 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079517212 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07912792 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068394853 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075777032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078840111 seconds)
  done (took 3.166212804 seconds)
done (took 16.839739455 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108444305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072465059 seconds)
  done (took 1.366423403 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084363694 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086124605 seconds)
  done (took 1.361855007 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086250391 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069254329 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09276116 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082003518 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070254016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070636784 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091152664 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070873549 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07054425 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070268968 seconds)
  done (took 1.965033011 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072225164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080500251 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07420836 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085053154 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077600878 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068641218 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076066393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071903591 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081944984 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067280597 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075342939 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087021462 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075932014 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088518286 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076357907 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.073398723 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074687809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071999271 seconds)
  done (took 2.575604095 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069876837 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071461924 seconds)
  done (took 1.34189692 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070546669 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067659642 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070711223 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070242265 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067682337 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067060775 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068371852 seconds)
  done (took 1.679309014 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377129032 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120150906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.314436262 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075806642 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085791764 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25742569 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070223577 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075526801 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076205124 seconds)
  done (took 2.691690688 seconds)
done (took 14.183592688 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08460147 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089834049 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100006278 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386065018 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095782165 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070811593 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117714594 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191030521 seconds)
done (took 2.346273994 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214445157 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.674194477 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.429226172 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.21202456 seconds)
  done (took 2.516286838 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339743738 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092652603 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063733116 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071164463 seconds)
  done (took 1.776387055 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070348959 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07336808 seconds)
  done (took 1.35063983 seconds)
done (took 7.067444749 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07135744 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070179923 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068733871 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07024632 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.068863358 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068130811 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088882166 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070432788 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070624532 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07120509 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070637202 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067832662 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.070849498 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070600947 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068822225 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068449463 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071011542 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.183466992 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068260635 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068017951 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070155544 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06816413 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068531999 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070594645 seconds)
  done (took 3.043406688 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088537607 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070653362 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077248998 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074929775 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074334392 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07604625 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075480896 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070862104 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075896285 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073048051 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073792845 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074828849 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072943323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075148725 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072525573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074291274 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075565788 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070291931 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072648558 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074304981 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076005886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0705504 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074472078 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075822807 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074034345 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074679083 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072854113 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071045466 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076241831 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074551921 seconds)
  done (took 3.449713811 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073925554 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067539435 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068352899 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074345023 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067854107 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068582423 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067492146 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068531343 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069447502 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068383593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069248318 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067767095 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067621419 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068697677 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069097586 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071573061 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083339402 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067963972 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067833842 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06865852 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070925058 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07042088 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068407403 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067547572 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068247449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067375842 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068591904 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068082537 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068696076 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067522516 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071396078 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072099394 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06808902 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075119925 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071404169 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067736127 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071739112 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067928966 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068395244 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067660423 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067591657 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06792693 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067551764 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074884282 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06836868 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069187282 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067780488 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069232319 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068521971 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070641944 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068173481 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067686788 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070153602 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068850894 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072207935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067792928 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069022682 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067501307 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069034433 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067707524 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067745702 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067531326 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071534664 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068618332 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082967634 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075599342 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068033254 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069732697 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068982498 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071820725 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070346534 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082797225 seconds)
  done (took 6.24866215 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092606308 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090664584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070322655 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069805367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066529495 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068561248 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074839977 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068422292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070268388 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086257863 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06885623 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069851773 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069846692 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072252526 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068857532 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070362796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076963594 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066840635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068846172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072783898 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068558385 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074580633 seconds)
  done (took 2.839050231 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152384588 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074277738 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108957057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079460871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074935444 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080036408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074491076 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07408889 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074716314 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071842623 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072583094 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074407622 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074791856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071850613 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071980878 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07178148 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073967825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072326027 seconds)
  done (took 2.673686347 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080017744 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070680458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091717932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071312633 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070441928 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072808383 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075273733 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078273929 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073270546 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070286268 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078081277 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072636239 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072850102 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070277599 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072383936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070518326 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072826365 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070697433 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078492222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075402581 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075328209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078088101 seconds)
  done (took 2.868261419 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083216684 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072019939 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085151505 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072296543 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066194504 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068707854 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073861391 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070271154 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074168086 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071948687 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070379505 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068390773 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073175499 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070098814 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073127257 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070443616 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072386878 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07086276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072056049 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066819895 seconds)
  done (took 2.672514972 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089441503 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072134605 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071610249 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079091927 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07174573 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072408133 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078518387 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07180825 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071463485 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091650909 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071811541 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071950558 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078394833 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076723381 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07416424 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078745933 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078770647 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078764227 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07172135 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071787115 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092612903 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071920318 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079005186 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072272205 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07211369 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072263602 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072070718 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077197988 seconds)
  done (took 3.360845108 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070798389 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07058821 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068018431 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068199577 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067706357 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067500085 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068197169 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068127554 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070668867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068007816 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070656578 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07045594 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070957249 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070348727 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070548594 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070278359 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070301265 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068660263 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068045577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068335826 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07059639 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071054939 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070016916 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067837075 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068955412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070258886 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068012977 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067864321 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070616262 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067903704 seconds)
  done (took 3.31299358 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078679622 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076450696 seconds)
  done (took 1.388319769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067405784 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084133718 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06730819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075096266 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073267124 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071224019 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07722606 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074074424 seconds)
  done (took 1.818951713 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085807934 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081103644 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070972567 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081640143 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080679098 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087626946 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138833164 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070762381 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076371597 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069006992 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083546471 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069681417 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076636516 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071027314 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076268239 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077006567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067742942 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075299299 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07192146 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068654934 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071543441 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079333412 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073530022 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066627361 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072482966 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093300004 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082214357 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069952806 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07367741 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078312113 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077203345 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065535141 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070664763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070861462 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06918264 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080233363 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085319409 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07404222 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079350821 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07168505 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080426647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066679023 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075541114 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.0774733 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081027332 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071290532 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070882787 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065628105 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069122881 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07350178 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066662831 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070824274 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065979806 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077676796 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074527286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081268252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.070653832 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073069191 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074453033 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07441765 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077852547 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072838592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073514142 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070314285 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081225186 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075802086 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079320869 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065902781 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064926795 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069009294 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080627026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093585864 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076905195 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071521117 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071576901 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069263457 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073976844 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071689081 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076014725 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077447176 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070731159 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076314648 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078130885 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0714941 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073804043 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077887025 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068662035 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072749077 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068305548 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086164541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06967462 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068756853 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068975412 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083192865 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074224523 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069506888 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068714037 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077494166 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064230435 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070197327 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06976936 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07039488 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080188072 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073509264 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073538318 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077988693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077584586 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06993448 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072310618 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066567876 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196234416 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071220239 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078344114 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066068797 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074299078 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071804529 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071313358 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079817003 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070260546 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070655845 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07826623 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076598294 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069548013 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067775579 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075382105 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070007291 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072914189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079042356 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06923466 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065470435 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066422492 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074016145 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070123095 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074512481 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074788511 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073607523 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065485692 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068197224 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075358396 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080058947 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07073082 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070979901 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076411439 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071666977 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069512736 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07763019 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073508219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070259876 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076047857 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072151365 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066264225 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07280976 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073099267 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069813255 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07431675 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072820281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072952716 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070982225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068748478 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076534977 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070764052 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069912923 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070886554 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06935572 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080773227 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072866065 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065820819 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067910125 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077706238 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069567571 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070275463 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070007022 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073178665 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07085887 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068622442 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070549408 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073594032 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080206907 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073733247 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071182592 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075763947 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082635035 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070617381 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073614557 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07014877 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071030666 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071525247 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079443042 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076550005 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074706749 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073858023 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067635976 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076238665 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07825616 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070253481 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068287323 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070039857 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07440953 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076943478 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075163218 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07081701 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068602398 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07116768 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07360779 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072768034 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069450192 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069714012 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075856718 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068796556 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076824624 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070542809 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080418557 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073038834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064746519 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071495555 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067471736 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075771146 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065010009 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068296959 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070188776 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069659567 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068166306 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071740062 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064574515 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.205093999 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078688943 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072200325 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07122779 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070662211 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077763774 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072972495 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074567363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074391205 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076951157 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080968771 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070348406 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074342604 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081250234 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070277319 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064794466 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07866241 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069258485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069632162 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070068175 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069429903 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074224986 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077883561 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077447797 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064608822 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074370634 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06869812 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069960498 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065687478 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074762909 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073240419 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071142787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077946421 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071456268 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070437313 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073946316 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07096453 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070281444 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071608787 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073308396 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070677338 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072571091 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070005297 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074175717 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070640939 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068492401 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072489404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070229684 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071589117 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076485533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069808669 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071140802 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073472374 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071134251 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071874055 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071464711 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070256759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073758127 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07185398 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071365875 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07356308 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066693993 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077960571 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070691352 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078205686 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071883536 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068445367 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076853223 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073176785 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075525264 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070793213 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070941239 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072068304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070110159 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073584143 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07745545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068743862 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082169166 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078484935 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071793441 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074100236 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071879573 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072526247 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069988031 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072201388 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070797442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07151865 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071431482 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075512656 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073697465 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071132054 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072306197 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071389243 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071188511 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071007307 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065037303 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069584673 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070712289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070461868 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080163255 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071586682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070495352 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069316647 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070557979 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069433442 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066892122 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076851084 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07755756 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069563923 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076181657 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069464852 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071283141 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079895325 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063960714 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067556174 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067627935 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.199854124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078623798 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071332585 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080735571 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071970895 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071156372 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067826522 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071772615 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069404341 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065375363 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0691637 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073871079 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07003738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070824498 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070082754 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073022203 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071627478 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080608881 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070010356 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072295508 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071259562 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068206336 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069765073 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070326233 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07335632 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070816303 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069210537 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068522215 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06989161 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072367893 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07220403 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070851061 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072335522 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078006214 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07026699 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073533241 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073175055 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065267585 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073604979 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070929325 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070829622 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069689644 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073665959 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075468131 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071175406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079001055 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069914598 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07396627 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070237953 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068462799 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069773487 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070068387 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070867453 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070372506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071335718 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078101167 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06858874 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074145142 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070945885 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071849791 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07696786 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071517267 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074145203 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076468901 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071185717 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072510596 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079440174 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074086395 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074210127 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071612794 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072663708 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076578888 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070773445 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077145073 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072000715 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070913798 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072761729 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069142856 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070253744 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070911914 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070219221 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07704194 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071495848 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070502964 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069935198 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068654985 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072196428 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073720614 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078611994 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073723601 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074024795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065822215 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068057246 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071027306 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069251613 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071772785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072666866 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076606466 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07236962 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070728007 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069825112 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079318239 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076681483 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073923172 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068594883 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074315605 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070441884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072327558 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071397711 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070312104 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070723514 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074065357 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070758156 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069619104 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075859842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072949708 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069915592 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.202179061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073004199 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071653223 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066592558 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071268808 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074091424 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075239539 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073642103 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07062792 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081068388 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068673914 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070993463 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072844337 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069845991 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075459694 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066361712 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072943577 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071095742 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07138164 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065730364 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070465254 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068610445 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073352064 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069752331 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065533615 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080955942 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079979209 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074008748 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070078003 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06901055 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066468019 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065462329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070102004 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071579827 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073132452 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081142176 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069737052 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069494599 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065281725 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070359498 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073452273 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074354438 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067502885 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065958964 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070320134 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073583819 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076088173 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069398941 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069860657 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073520864 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073084145 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068617294 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073384088 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067653853 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074789878 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083820356 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070735571 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072166026 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076805112 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078232228 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07075979 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065847632 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071125697 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073747173 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071314845 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071171986 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071607972 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086387675 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074777751 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070520012 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069974557 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073709503 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071093543 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079104671 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072274051 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071227099 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078734876 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073085841 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078609323 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07371021 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078430871 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074177411 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074433374 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070026562 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071782446 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068571295 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069966393 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071587197 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071628736 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07570285 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077807431 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070287575 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081930912 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079750274 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072951629 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067880841 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069571859 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06992728 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065586861 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07133295 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068596855 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069194384 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068651288 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069005183 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071675435 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075759955 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071346636 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070669776 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069882783 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06507746 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072752762 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072117262 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070918878 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066944572 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069828887 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070130827 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.204889174 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074158656 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069647649 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073587451 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074135346 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072780346 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066414371 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077565229 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070184331 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073050347 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070696893 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07124922 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071347823 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073916086 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074574938 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071360764 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073438237 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074321902 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072609977 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068768167 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068328796 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076849054 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068339865 seconds)
  done (took 45.211313814 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103252438 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066825301 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065715798 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065893156 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076812387 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067029027 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066068338 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067697936 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06758465 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069355867 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065911426 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066181925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074141035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081396784 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076782714 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070609854 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066267254 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067140439 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066097858 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067312697 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074328509 seconds)
  done (took 2.809479013 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077155272 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080845118 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079015417 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085494139 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075441249 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073885632 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079727225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0739991 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082012454 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076504261 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082224346 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074331917 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076562799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076882348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076723594 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074377078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082740366 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075142391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074242519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07963336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075483465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080111667 seconds)
  done (took 3.021073446 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070596254 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069447065 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072315429 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065356516 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069837812 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065495622 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073194721 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067926583 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073987651 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069523483 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069896172 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069239773 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071810006 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065590881 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070755486 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068476831 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11176332 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073593518 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.07079232 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070812254 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066333172 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071760541 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065751122 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066926324 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069408348 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073294692 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070742614 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068398249 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069794461 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070481185 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069553295 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068009719 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07160175 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070851047 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069468354 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069869556 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070203751 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069672571 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065784458 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068237249 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070646171 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068771111 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071177993 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071627609 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.069646026 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068552647 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071897694 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070688093 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066104075 seconds)
  done (took 4.767047849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080997141 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112205184 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071130821 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09348141 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083697745 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07605829 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073854705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093723933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067299885 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068119038 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085210196 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083487448 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069315937 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074020971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076693477 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069638681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070879965 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0687389 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073190584 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06910331 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073426507 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077462318 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.0844073 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08267434 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07303591 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068852988 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069219522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073414555 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082029263 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074252066 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074355238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074631231 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08426039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072072805 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068918083 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071616065 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085475288 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069857622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071471108 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06753699 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071978133 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073890501 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076686027 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08531847 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069660593 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075419622 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069583853 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06702026 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081985741 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071629008 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076642819 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083619508 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073202652 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070260465 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074141444 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085009853 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0698458 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069007867 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072627476 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082069376 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067460204 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07341088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083488027 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071592819 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077205282 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083933105 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075882311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073287165 seconds)
  done (took 6.613985917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079484626 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099004783 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085986567 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086016045 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079154196 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079763632 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079843254 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079623687 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07963738 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083548895 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079956624 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118737472 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074987586 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081765007 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087448658 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079591822 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07942398 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079063222 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079840857 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079096897 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079264485 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086365226 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079553722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085993143 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083317433 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074702407 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079543352 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079495899 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085967484 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079681286 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082978722 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07927146 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079740093 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08624297 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083182853 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079196908 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069463046 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079231396 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079151775 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079460279 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074693782 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086264487 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079654873 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075013716 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079821166 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079961651 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086114555 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082808383 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081496617 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083482975 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079226579 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08723837 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079923117 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079413279 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086176471 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088933447 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08680361 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086457898 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079597682 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086141286 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086267199 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089390454 seconds)
  done (took 6.447765764 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085670501 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077499118 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085270765 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065986979 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068621053 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076070909 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068224223 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068479011 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077564389 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080508355 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080326927 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07584697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078624046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080579925 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075859445 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078691715 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075833481 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076240515 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078252017 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075912926 seconds)
  done (took 2.870683588 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078765259 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086249967 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070286483 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075652579 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073715358 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075865498 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072448995 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073303521 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071258133 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07345928 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079374893 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080317293 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071514578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075638747 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079603138 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075390642 seconds)
  done (took 2.540428853 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08788882 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077172548 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084253675 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069949679 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070994564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066420381 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069981249 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065519021 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066520699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082058915 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069854181 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079824299 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069792322 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068940562 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066699284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075683378 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066605833 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06747639 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0696268 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082384178 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074798689 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068912705 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073290078 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070318936 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073183012 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075288839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069575901 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070394131 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067548169 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070638915 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073501688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074197895 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067902114 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068245136 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069035988 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067879363 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069943849 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070573979 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075557174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070661792 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068468796 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072360492 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070313308 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071658174 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066673955 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070297361 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066699243 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07299372 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067962619 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072884553 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069646632 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072481631 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07041749 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076606271 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073037823 seconds)
  done (took 5.269863074 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083216137 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073468496 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06578303 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068073261 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07311078 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07126528 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073698381 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07150923 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072085594 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068148281 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071889409 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073037776 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071934807 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074091776 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072011162 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073670083 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066023947 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071603524 seconds)
  done (took 2.636999521 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075787557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069557309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076783208 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069820827 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069993572 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072667666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06609378 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068789601 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069149466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07061179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070377906 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072370853 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06917758 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072285576 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070433755 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070666886 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07275327 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068835022 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070149188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066397128 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072222081 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069563119 seconds)
  done (took 2.891077601 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096976529 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085484496 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144336661 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083249185 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089851162 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075982527 seconds)
  done (took 1.913496932 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094807457 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104073875 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070583936 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073232883 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079604396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074147854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07439598 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074411972 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081928125 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079561503 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075115582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082069873 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082114545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081142547 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079421733 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079607069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074243504 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077081438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071306669 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087314736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074120128 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08206615 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0743161 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073922934 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074145533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081508343 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081749952 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07948779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074156743 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082084163 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079654142 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075311985 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082577597 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079687444 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073571851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081867529 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074306544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087276017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079678844 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08128478 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074187713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07979111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082630254 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078560676 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082506286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074986163 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078894575 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075135544 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074291095 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089422728 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079711678 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081342174 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079874856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082321777 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082363937 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08923451 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079697555 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081405703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079590952 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080519245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081237534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080286063 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081099978 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079989834 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079941603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081974001 seconds)
  done (took 6.599450399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106951127 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071212183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073827881 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079606524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08093974 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07469582 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074837896 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074680766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074823209 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071358231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111922913 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074961069 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081475441 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081405698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074787235 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074324297 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074913495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081320825 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071558883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088841924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074395075 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081260118 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081506925 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08162521 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079746536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079480643 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074792359 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07455012 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074324386 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074521292 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078879237 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075049046 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081664922 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071176 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081286107 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074779124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074441488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07844264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074863509 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079459886 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081846489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087017782 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074590052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074538923 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079951172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074843892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074241441 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071651013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074106328 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071871468 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079764121 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0802861 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080091508 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081131216 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074529457 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074323134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074142594 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074602027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074345432 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079905875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081037322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074127238 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088992143 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074559251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075107507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081946858 seconds)
  done (took 6.516886976 seconds)
done (took 134.995313235 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196666411 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173971563 seconds)
  done (took 1.700466354 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072818985 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101153869 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081583975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132514588 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070161248 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104691791 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103350429 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082500442 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071268723 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071090778 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071173522 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072865826 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136373583 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070678246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07081114 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072731347 seconds)
  done (took 2.73166251 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101481706 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162595218 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104782308 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06941577 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101279017 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076969737 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069751355 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079031441 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074934037 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070269034 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077299227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074567645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070272939 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074668921 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07779758 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076626091 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069278703 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07703249 seconds)
  done (took 2.857030901 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101166274 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095104058 seconds)
  done (took 1.546702997 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154856407 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136359466 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203499301 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345645864 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162909501 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150937813 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147185848 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146462545 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117702534 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141059863 seconds)
  done (took 3.05179546 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102159188 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155811202 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272756715 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120424447 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077318256 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09723697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121902282 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083486287 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084589571 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084507964 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083938816 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080782574 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103889176 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07744529 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078149987 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08038622 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106609847 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077208104 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078543497 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080079107 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103922137 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.07043337 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077646306 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077462415 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081360879 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081315141 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070189972 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070082705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08010061 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079170844 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081444659 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096931083 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081439347 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109504792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075459466 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110527061 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081421326 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077688398 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079032131 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077297059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082510797 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081995493 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076674401 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082644191 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070019651 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081084236 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070468176 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070871039 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081799288 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071213976 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081659687 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080594963 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.11014539 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071977781 seconds)
  done (took 6.193076708 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110392455 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110346073 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074150999 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117359972 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106986705 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074056033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109928078 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101352223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111706386 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074064482 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071945119 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074758337 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084143704 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085984995 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119647684 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112508179 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076587025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073791495 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111972871 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1110408 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072930629 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105003321 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10057346 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110483191 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071860758 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07398857 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072295482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073741848 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080491887 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081723529 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072370221 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083161401 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087945035 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081046291 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072023798 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072032878 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072935039 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082865206 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082911159 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082424261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081542286 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071559315 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072466687 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073457575 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073942832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071940632 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082220544 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082933885 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081452107 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072888016 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073981297 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072636254 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07353936 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083986448 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080351375 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083353688 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08298951 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072403258 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072961148 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076039644 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083345852 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083305337 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083327452 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073336547 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083553976 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072383667 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084604231 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087232024 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072746676 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073785505 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072886143 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072551652 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076480541 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080978164 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08096495 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074302554 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072693441 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073395082 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083134742 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082635453 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073027979 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080262719 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07105609 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07174136 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073756159 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073867865 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08071551 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082897234 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073499081 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072015652 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072037989 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071112587 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070917913 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07890298 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081449166 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080568094 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080589627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072035402 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080310116 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.209912855 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074456783 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082936595 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073362249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074267242 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074257945 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0816496 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081130699 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082800769 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073210382 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073582328 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082848967 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084250525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073162617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080723826 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08271311 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081163238 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072147571 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084628258 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073087609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082962788 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072215863 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082775869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073243559 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081936853 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072644101 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071176489 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071757634 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082250043 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073453264 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072957193 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073126841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071844612 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081052861 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084389097 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073534111 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081390782 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081423352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073365145 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08162776 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072388931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081971656 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072472874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073537007 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071289537 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084735835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073429621 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072464775 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072570814 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083234397 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072973454 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083558138 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080900219 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071450928 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085512395 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083019399 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080011314 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082989806 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073718803 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073198001 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072259326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072777499 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081149756 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082167553 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073926713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072092435 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081132124 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082486945 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071864416 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081433022 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081102562 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082383457 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072708407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072276139 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083879986 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083616312 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081441838 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081376494 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081455316 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07266326 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08153993 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081354607 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072999358 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087006486 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072473692 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085443541 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081067996 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079642979 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081138342 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082819446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082542505 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083565655 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085221214 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070970635 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071065162 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081004803 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071148299 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071176212 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079199069 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072218926 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072514659 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084321288 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.204651832 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084437302 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072507237 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082745622 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072786907 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074051726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086492129 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072599188 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074405511 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082573478 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073148617 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081284868 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08353247 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081688601 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072949736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073870638 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083509159 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082733402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075165298 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072594369 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074861775 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081750776 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080813389 seconds)
  done (took 19.46750642 seconds)
done (took 38.912196151 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.206084191 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152749395 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.173250962 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119077451 seconds)
  done (took 2.096902856 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118899482 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103117863 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095159167 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069773734 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101099555 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069690616 seconds)
  done (took 1.942323242 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297759858 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203732608 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183562407 seconds)
  done (took 2.072166387 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203882108 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190710983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.431023942 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267869235 seconds)
  done (took 2.582603475 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144786866 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090226331 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071596419 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08763997 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133614747 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162305314 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102994307 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127849366 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083918262 seconds)
  done (took 2.442160825 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14976687 seconds)
done (took 12.675700947 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.106832649 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.259131815 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19291572 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.20173489 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.232074743 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088023083 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082543934 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088150808 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116143872 seconds)
    (10/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078314156 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09495977 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078208768 seconds)
    (13/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.1826803 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.176803931 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.203985991 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112483638 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.217944239 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221509823 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1572618 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09275578 seconds)
    (21/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.176218242 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110051439 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078707464 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.082802845 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.143322237 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078830811 seconds)
    (27/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084242882 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067595261 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183889071 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076244413 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.116908719 seconds)
    (32/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075995993 seconds)
    (33/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.100387782 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077591389 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107318087 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.416931392 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104569416 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070696814 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151730422 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087309111 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.186734951 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.210253241 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12707281 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098770655 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175380562 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077599489 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089576079 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10308603 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081453779 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070090267 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085532997 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069778849 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.121208261 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081040841 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092951273 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057184246 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198452565 seconds)
    (58/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193944129 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202514578 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12856047 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071953889 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10292028 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054983037 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078019601 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095358758 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08093548 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 0.131140997 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134648373 seconds)
    (69/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.115344776 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.14730615 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077116778 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076087842 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.216476236 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057300504 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055689154 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079497298 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079526715 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171164778 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077385155 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080855607 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056079441 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.070284644 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.209532168 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150933973 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069550805 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102495263 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092243892 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092365539 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07586461 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079237548 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111515539 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055944872 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078032894 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056221785 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079987209 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076781578 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078185102 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056175271 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102726875 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17275142 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.060259824 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.143899081 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.178421388 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140120151 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071203206 seconds)
    (106/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056453603 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09360109 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073144858 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076268437 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073829499 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092275766 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160659444 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071962429 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058591913 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076529882 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076974225 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093560339 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069408927 seconds)
    (119/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124958951 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055996514 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147053358 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.206050499 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067236044 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069384841 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070301143 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077965141 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.144978128 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116484585 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093107352 seconds)
    (130/309) benchmarking ("sort", Int8, false)...
    done (took 0.150193675 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.148929712 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078190808 seconds)
    (133/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.164546469 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089074513 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.190381068 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07614706 seconds)
    (137/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083315567 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088923582 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118518817 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20724173 seconds)
    (141/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.057231596 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10067513 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072728936 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056272239 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099251124 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.14964616 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077202341 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069107066 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055810111 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056906258 seconds)
    (151/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056585206 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.148877916 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070155364 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077486894 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078605238 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096668955 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055850343 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140548591 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096921854 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095444555 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.057348056 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.080954475 seconds)
    (163/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.103345407 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080722658 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095408542 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.140329349 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080257282 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078193363 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056094163 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077789131 seconds)
    (171/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.102146795 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06940214 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074154651 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.144083475 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.152585742 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146852707 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139498311 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069162187 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055030264 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136862169 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09568134 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070635321 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176739178 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054978743 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070472999 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090969674 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.230625114 seconds)
    (188/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.072208825 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05973309 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057022866 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078867735 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058374496 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079830926 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071524903 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068095433 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095517504 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143637566 seconds)
    (198/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069140067 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07206694 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070622684 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078058942 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068831883 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056490097 seconds)
    (204/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071671581 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055401259 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180186632 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09567836 seconds)
    (208/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057019798 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.145996738 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112637006 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05741882 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07906541 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07735873 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07065302 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084183777 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072194295 seconds)
    (217/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102885116 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073568166 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092413847 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056846058 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.056034158 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07018914 seconds)
    (223/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078994139 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076120804 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123924139 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070110847 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069674238 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055913005 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.07191146 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068419746 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181108799 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083004473 seconds)
    (233/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067277329 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056909005 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181988029 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142081914 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067553821 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104007371 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077096369 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05708999 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070236724 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056454594 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057699008 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.0711562 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134415368 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.114337754 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079553478 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078480705 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076320934 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070811233 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072485386 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.057281577 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09422272 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082370278 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.124238314 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070093887 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072835741 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057227326 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077425737 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06989744 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057235938 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.0559978 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083839586 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076910369 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085819364 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078493635 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.104646879 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056230783 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057191817 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070815601 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056178031 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05639786 seconds)
    (273/309) benchmarking ("sort", Float32, false)...
    done (took 0.133476793 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078202989 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070318167 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055867254 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071443994 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.0557437 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093134373 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094546526 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058191721 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057164959 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076823652 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068932374 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070428082 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056143003 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06601878 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069190831 seconds)
    (289/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069417595 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068597793 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072129401 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082258471 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105325577 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071464406 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076140296 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092024947 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078984396 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070873434 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075905677 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057350819 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057117643 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067703424 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074816805 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075285785 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.055475157 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069032205 seconds)
    (307/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067723478 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088705273 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072801715 seconds)
  done (took 31.805504453 seconds)
done (took 33.207299672 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091344215 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096677854 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079622114 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097375742 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084550483 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080215069 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077617943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083092925 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084696604 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086155933 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083323569 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059849477 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078907883 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080099105 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079791869 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096458821 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083751384 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078090724 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077694663 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06912195 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077818005 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070581576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07159057 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059380629 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082797885 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076306683 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079804789 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079149841 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070052649 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070163815 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074438759 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078601437 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069996822 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083883723 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077952544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077967682 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079343842 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081777139 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071765831 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070808826 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079517986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.0705425 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077277721 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078154717 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076713277 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075276545 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077800042 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081950018 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09526466 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072290207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078926147 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080303066 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081712044 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077363128 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074089549 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077403291 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075021493 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09543737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078535177 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072183217 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079049755 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07839141 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075085726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077579011 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078398287 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080510012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08205642 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07517533 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079715123 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076081254 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069855502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07769507 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074340647 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070289765 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080880408 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081785631 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068988125 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076518342 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077697972 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078165054 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06942121 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07181544 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071622658 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076377873 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071723281 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061479046 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073943191 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077193427 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069175223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07862453 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076768057 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077786122 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072182115 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08156319 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069565082 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074857818 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070317817 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070916053 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071357361 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074041777 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069374193 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071361015 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079431879 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070819364 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076254812 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082852551 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069357481 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076177605 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068271763 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069011878 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082530027 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078718096 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069605077 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071325165 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068526628 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075697672 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067910488 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069241251 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068368859 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068553761 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074518982 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068795715 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070636186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075727538 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.219399935 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070224661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074581081 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072562873 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070383989 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07612818 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070518386 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069916072 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071932096 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067028283 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071993249 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069589392 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076784496 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071718678 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077735117 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071147848 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078406134 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075157764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076234839 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074996342 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068547672 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063755 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072240448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072822657 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071880659 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069697177 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070982865 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069418384 seconds)
done (took 13.169785898 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071883049 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139024101 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098949947 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098109371 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088657339 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070719703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079386215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102006026 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07202163 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103731413 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090846679 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08855042 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115910668 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068729353 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069964573 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074100825 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071631004 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084685265 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102000422 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089690266 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116528112 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070406683 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095861846 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092477325 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091458706 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096893432 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071225455 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074067411 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074365896 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104876311 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091099869 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074748911 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071612012 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101024013 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096768412 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086851238 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07134905 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086406141 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071311924 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07004764 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071842112 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10106338 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084336478 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084285463 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074942251 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080405703 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071925996 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086913156 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093053858 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082545565 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089160524 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10366865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073065188 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088143024 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068874351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089189114 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080959691 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072782477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070740482 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078134443 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071122589 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073812961 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084459023 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08446598 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074457545 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087504089 seconds)
  done (took 7.063235108 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088502712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096006973 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086952886 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086615037 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069997317 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071205969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070444358 seconds)
  done (took 2.069301921 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072053428 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091508846 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092731982 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092906351 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084789802 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092258432 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082510796 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070985539 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092357845 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071915429 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091280596 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10359488 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074384707 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077741439 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094151242 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070871195 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094779092 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070851809 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073676484 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094128646 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072954618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100054967 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07456693 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07152403 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085005329 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071215439 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116678986 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0749704 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072676967 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073945368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069347383 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109702324 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0848931 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078911425 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071323253 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086835069 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085541601 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069792784 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088519706 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079570692 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084684243 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071141453 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071929751 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069198014 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074943568 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081346235 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072053103 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07235657 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073757102 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090810201 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072379858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084486755 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074189976 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077146622 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073134688 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077952388 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080791075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072385564 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090786882 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072817148 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087607859 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086960824 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084709633 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086615762 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073683934 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084124116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085133835 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074369153 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072673177 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074447069 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087427526 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069837362 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072459776 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081579501 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073681578 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093644566 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093819397 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072930087 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085115745 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071449855 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071847644 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0713492 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093166752 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07703721 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071260136 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075137957 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073941795 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070004276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070035321 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075171831 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069634554 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072527368 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07416418 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074077113 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073876698 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087485922 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073155094 seconds)
  done (took 9.237794147 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074134199 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071914511 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073168263 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071797544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071847863 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072998845 seconds)
  done (took 1.955744902 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096722879 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072128743 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08334681 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074867103 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107157673 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090497548 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090908522 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082089367 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086810293 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082785951 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090512154 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092489566 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095576933 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075924978 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090641944 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075511943 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091092849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078917955 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082170715 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076499821 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089854972 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076227089 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076823481 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086069919 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079655812 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075735271 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08273438 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082515416 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081678571 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082719154 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076218911 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079352437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0747092 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08262321 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090752878 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074796968 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075567467 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080941415 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076543491 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07938962 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091269168 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076416808 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077828844 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080632324 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082064221 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074818707 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081119136 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08268929 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091536985 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081741312 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083353007 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075549038 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079072148 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080764597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075052745 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082360686 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081637699 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090580426 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076415964 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074888624 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072708152 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079628175 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08200497 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079857601 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.0825307 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081294462 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074815984 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076319745 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076477724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075821455 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080976373 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072756839 seconds)
  done (took 7.369201325 seconds)
done (took 29.175586022 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537961357 seconds)
  done (took 2.013714077 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.620799585 seconds)
  done (took 2.126314636 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.939283675 seconds)
  done (took 8.442481929 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402331675 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.503243937 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.738869236 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140515561 seconds)
  done (took 3.333110348 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.720552045 seconds)
  done (took 2.234582999 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242231062 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227901224 seconds)
  done (took 1.992303043 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.3875274 seconds)
  done (took 1.892819753 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.113763779 seconds)
  done (took 2.62086047 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.252496641 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18034839 seconds)
  done (took 1.944409826 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471033963 seconds)
  done (took 1.980221783 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.870280998 seconds)
  done (took 6.380143411 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223774085 seconds)
  done (took 1.777448949 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241319837 seconds)
  done (took 1.754170379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.754866171 seconds)
  done (took 3.268437585 seconds)
done (took 43.276880933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088056597 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088628132 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089264688 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084978642 seconds)
  done (took 1.847093874 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082412391 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077055616 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080160259 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076644331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080817974 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077155353 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078240154 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080709662 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076721555 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07771861 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076751386 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076935643 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079544387 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077980208 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075179025 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079066029 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079780064 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076443575 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080456534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077829888 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075075529 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079211818 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0796125 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076036019 seconds)
  done (took 3.392863995 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083205208 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076975582 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07868094 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075864106 seconds)
  done (took 1.835290775 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082561848 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096573136 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093328968 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082480736 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097069613 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091217645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073420451 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073754553 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074895542 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081412496 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072873849 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099595905 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092985342 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081896011 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084024119 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070380371 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073096211 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092574085 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083284422 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082762561 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074668002 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082604933 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073125096 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092874641 seconds)
  done (took 3.518920087 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091425782 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104762356 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085156852 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094497403 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096967954 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070050548 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091772068 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096948681 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12890309 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069776604 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076149813 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070021325 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078313222 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07019758 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085943867 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111167429 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114394838 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073418401 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102703985 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070042893 seconds)
  done (took 3.31057143 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07768359 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073880284 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074601221 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0699595 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081073981 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076469843 seconds)
  done (took 1.98260126 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073101662 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07486886 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072229432 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071133338 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075348168 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072164793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069905449 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071632845 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071522951 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071238464 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071122878 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070086723 seconds)
  done (took 2.386995763 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203401596 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073580406 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073180718 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070599593 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075314576 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070838708 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086150502 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072882299 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096744832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071009274 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071831035 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073098427 seconds)
  done (took 2.563667928 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211470965 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08021136 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238896059 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156004233 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116992647 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121187106 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117168539 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117508143 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147191388 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105570812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169766711 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17009981 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112692306 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141353073 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094162852 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104405733 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161387387 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168602484 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110159095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168231761 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150748188 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130726765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149507701 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106793189 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109998563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125937058 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076322758 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08484276 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172756838 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13801081 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149898082 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121266912 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098640409 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179733609 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170505361 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145242212 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152337372 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088915387 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108958572 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13487424 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199358117 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093799618 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166058924 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256368841 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086350339 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136436124 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12176607 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123148725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108634342 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093834628 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149427558 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18577453 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140718573 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091436056 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126820023 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119367105 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119099119 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115979999 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180208855 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1617662 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130938543 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076348765 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114405413 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153181791 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134951033 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112770027 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129369623 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096614019 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140108876 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156610641 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129436473 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149041505 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1206563 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093143271 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122260871 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145173656 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135119925 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163590572 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127647959 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077191701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130250792 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10753629 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084001076 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147455156 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078946705 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176438426 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103102692 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109876483 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127198444 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11204955 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113296581 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164114259 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291829704 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108498631 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070420186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108922247 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122636561 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150506025 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090870426 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111528291 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120184849 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081267433 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143150856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079564013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125385477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079944758 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127082369 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13296699 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082059728 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125506494 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107241563 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103995732 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135172552 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160418619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091425587 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085908624 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165396229 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125134109 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106839728 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147085874 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157629639 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104033292 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105801591 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151502992 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174419731 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093689495 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164483224 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11061814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087808444 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091830499 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126315378 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115650553 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129293722 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085591439 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121733865 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170319893 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078494843 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099885593 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136527738 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082723431 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084372468 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109468088 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109086406 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100425134 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103531048 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106109709 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141876529 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125565958 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254555082 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128640333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102532633 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167681554 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091364367 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105272345 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108566809 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074017495 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138126507 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15883497 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083368283 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164039614 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125765235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118762669 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121094603 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088161483 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141626485 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082698319 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07466629 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144533561 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113548743 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113660825 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151092795 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119732093 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130078118 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122031223 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139121576 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135357292 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131501557 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110069161 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092224592 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115295204 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13247361 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077042287 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094602604 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08436175 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109031562 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100776099 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088130068 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147022845 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128326729 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116073052 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11532864 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101368577 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147972358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080548103 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130871074 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122314711 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098963233 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152723042 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151722136 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134091397 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102519177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284360616 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074574882 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078281144 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093954326 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125781774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087579502 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087485263 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120282062 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14761321 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130786111 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140828157 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125201528 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123650085 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155707191 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074505779 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119928306 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146799924 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1237408 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109331447 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093805624 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103188279 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142602996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110451009 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179965112 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116379083 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126800842 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156279118 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104579927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083792679 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105852321 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139565494 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108376486 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145306426 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102434233 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091706094 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112154006 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078996232 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103078855 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131421508 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123871473 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138291066 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117736655 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137997299 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082046039 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120103419 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127626621 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127773357 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067810019 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121568321 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161046334 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09800148 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120057208 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15284011 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228997678 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139271154 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177009362 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146733362 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088653384 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112794844 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12173127 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128455103 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121880288 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141227118 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111473689 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137664969 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11244003 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088753545 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090699024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100139815 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107374317 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09881963 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107925117 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116843221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100017641 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134772226 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107942584 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113014309 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120264491 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102750068 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096244027 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100513247 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174979098 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12174548 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172873694 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10319531 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145002853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164516653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078733622 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08405103 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081909622 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142125863 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088292204 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133733756 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11396946 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120919176 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126414065 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146575988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10267747 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072517247 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111422519 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138410698 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12779234 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10156693 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107334269 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163453596 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103096368 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083029576 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11594561 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26319946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108692474 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171911596 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06660296 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109940367 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080636209 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08470883 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128697713 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153414769 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083614046 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103740886 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121591794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11743155 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1294127 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105161925 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115056764 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127409597 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151378769 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131955295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093621388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115299344 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130964779 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156863991 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105064821 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102019178 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175653035 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153140577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161991229 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093374614 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117105394 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117251851 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114182986 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141685713 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087587844 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165351486 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086138319 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138340942 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108930744 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093440702 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13578255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114991197 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092110626 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148219094 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120294404 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086435113 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081435875 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120557175 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12148137 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108563604 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078904758 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142192368 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077423841 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282267304 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160313628 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084453728 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108171451 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098696982 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083520634 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111254091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105028226 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091354657 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103052733 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173052419 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090477437 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149550124 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135395556 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116318504 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137946118 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105550949 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64693958 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081214525 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151442143 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120458734 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172745825 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104304374 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120471089 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112788619 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128583688 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146619923 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108476711 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178502208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133766463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119834611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084232164 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106902579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108540049 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092598093 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111630396 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116392702 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120948096 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097738918 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120442829 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128665101 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086696977 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100771461 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157245014 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120810554 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148137191 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141588141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088628888 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119488236 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140020227 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08410681 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122820826 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301514315 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109701018 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102760027 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084104147 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105188676 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16008364 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077230259 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165216525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122498905 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111991618 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115242515 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114661868 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13566656 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110660261 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123841204 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096502486 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111840515 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115561287 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084466881 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08081554 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108609605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113739303 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099928773 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101250219 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102690917 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152184897 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076318516 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103523079 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11829097 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149938388 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175336381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091829552 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08693925 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124158138 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120508575 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116615855 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124881816 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082854286 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085478269 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084106699 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083567087 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110564236 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11704925 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118328605 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114079423 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165619066 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087643207 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226704244 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099559059 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10744564 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07364035 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081667814 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099529221 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101667604 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109002979 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114717289 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306116872 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098305327 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093689898 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095735925 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078842702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087011407 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128845281 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11310172 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120018323 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106006718 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066524064 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112102293 seconds)
  done (took 60.644020011 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108599559 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086063518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100648937 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146831434 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125589363 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204568461 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159703746 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19347969 seconds)
  done (took 2.762468803 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072986161 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098048619 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106709655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086023245 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07051828 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072704567 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232149785 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084339189 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070608672 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099027696 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081669059 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073455074 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438141644 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071296458 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071814006 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066469791 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071361217 seconds)
  done (took 3.494195449 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.396965521 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61722641 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348627605 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080409629 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.973767867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094424184 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.14987238 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137667518 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082283739 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529532568 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409115002 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133969202 seconds)
  done (took 18.592604454 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086462533 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079231318 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093337203 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092532167 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081426236 seconds)
  done (took 2.059439978 seconds)
done (took 109.933015645 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087532746 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.61996885 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058195732 seconds)
  done (took 2.339896753 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092227875 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089374359 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089564004 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087772264 seconds)
  done (took 1.998389862 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079110541 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080185458 seconds)
  done (took 1.789704703 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237487626 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17407852 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100019837 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088279669 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083063353 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082859651 seconds)
  done (took 1.891849428 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077639373 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079144701 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07718241 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080325633 seconds)
  done (took 1.94585268 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082121566 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056795306 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05945795 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06213382 seconds)
  done (took 1.895575169 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091546155 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086156019 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081836216 seconds)
  done (took 1.892591051 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105817308 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089934461 seconds)
  done (took 1.829416548 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086430822 seconds)
  done (took 1.721953538 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099881894 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103387952 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133940712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114001308 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141990646 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112154939 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088356155 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089529027 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081269889 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090465158 seconds)
  done (took 2.689681789 seconds)
done (took 22.221787919 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08339943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371266816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363624235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09338404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672021702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360866221 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.972984656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096865832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118319896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071517666 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088866911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653839767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962598132 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.328640407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949293134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333851595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654814624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072382648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072079125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072188602 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958720643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071745667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071850119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072699211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653004641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375621264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073064136 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334557047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072114155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074532333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35932845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072783905 seconds)
  done (took 16.201307921 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076207702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139250492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077192123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088051565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074757853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073121143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075865872 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072948868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124205506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072286329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089321145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072285809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076198572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073442584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091847733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072499393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072856861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073523959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073006884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072702846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09072426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072176192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073502785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072976966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073011464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08454099 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073103262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072666281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0732607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074445458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075305149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074075374 seconds)
  done (took 4.201488313 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122450187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127801401 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077566977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107550764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115482861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074537771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14510595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097204147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13157741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07282851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088849892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07243777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105669945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072928544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092272282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073469399 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073370173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073627936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072805417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073588088 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09146708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07247314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073062803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073509058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072962333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086529413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073472142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07320062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072755606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074856807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076559852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073890521 seconds)
  done (took 4.438587045 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077004384 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078566938 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087135243 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087863245 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07343923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075888991 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077542525 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.0736883 seconds)
  done (took 2.283982529 seconds)
done (took 28.770603102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083693004 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072433088 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076790271 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092437897 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077020392 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082319601 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07109367 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079133757 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077353874 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077431489 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078624335 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071218725 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075256779 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07101587 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077647497 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072700627 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083494207 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076588662 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083648281 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083783237 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074308892 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077085867 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07991526 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08417759 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083883553 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084285125 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081430542 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07719423 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073572717 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075418721 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082265031 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088578318 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072967711 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08406791 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072248513 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071758839 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075585585 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072159236 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083624279 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080435135 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073955014 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081353275 seconds)
  done (took 4.920112429 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094680056 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095233254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089074658 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065508745 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070280994 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068558654 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093397046 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063958205 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064316227 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092307406 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060250166 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063915974 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067358251 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058362375 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063831976 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061349017 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066436566 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060152394 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063816897 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063632639 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09293697 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05846223 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082141924 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067125895 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061380523 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066857457 seconds)
  done (took 3.523222131 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079365641 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086135769 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093236868 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145155997 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114454533 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082080847 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08310412 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097284484 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097889567 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071527195 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07485946 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095960199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092112456 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078335395 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072199682 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088712347 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089074454 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073330039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078406668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095000972 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089126821 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088836745 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095446927 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085651763 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071448996 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074819076 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076401574 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097072222 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07449905 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081071546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074632848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075260716 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074022207 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083484765 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075581351 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073563532 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098340501 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084783479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081990086 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072584882 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079709243 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073448886 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095356971 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127045827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071303276 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078326139 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075550466 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082200719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071775194 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096427575 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084118102 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071971218 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074698119 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071927584 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071410724 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075267708 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074116736 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074189187 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081376128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077643487 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095450468 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076896102 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087861452 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071430527 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079438801 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070970618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072537084 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071558211 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096896243 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073621133 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112872385 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073214216 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07292993 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081109932 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079538658 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078548178 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071832564 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087610277 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084653918 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075219596 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080802669 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075602314 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075253603 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099560805 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074201999 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074017195 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072971286 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077622177 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074471757 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073281384 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085146207 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071732011 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074998006 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088654333 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072129869 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073851234 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078584139 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.0765166 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071733339 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083078869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075749384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073195482 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082225231 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072144517 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074212983 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083414637 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077905791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070624055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076418973 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077433307 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073018756 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073020377 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074032841 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074070125 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079436656 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078068621 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076435833 seconds)
  done (took 11.155620524 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168719177 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15758889 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076271912 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14946141 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081863541 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084764992 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152505793 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099498396 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073301301 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073844514 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073844454 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1160518 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110964297 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12147812 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084422342 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073476238 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095259657 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120005247 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155134824 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148623565 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095497772 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082035949 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075835734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074654896 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075501548 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083817118 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090808731 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082479405 seconds)
  done (took 4.665653355 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086396594 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105933246 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079608328 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09457745 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094062814 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072885921 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075764847 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074461168 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089059205 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083275458 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07329561 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078137073 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079585065 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076405643 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073719081 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079605614 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080076094 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074051459 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07631469 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077963398 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083249861 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096636412 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076908313 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072084592 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078106165 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072389109 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.0686718 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089353621 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073697418 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097921072 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070966966 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077802102 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086753894 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073692858 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073079415 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072893093 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073285875 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073191222 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074622111 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074155157 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071398718 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062658509 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072221104 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083682937 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085708162 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061755705 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077269634 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078043702 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077688825 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070308606 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075882351 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07543397 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075945146 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080360973 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076824125 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078385589 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074409199 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079059647 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081098735 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072788471 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070240614 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071719189 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077329099 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070491192 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087515115 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077558113 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071508189 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072969882 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074773031 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08568496 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072716867 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077400384 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070585428 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075132066 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077670041 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075002475 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074032605 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071257841 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073159011 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073541327 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060568968 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072897548 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058681112 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075580209 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070866852 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071096705 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072805539 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07752857 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08412857 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07396191 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078464492 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074010169 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071892719 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075973179 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0653261 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075352333 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08359553 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087451076 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072759427 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070812124 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085775535 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077633789 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071792643 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061209495 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076877036 seconds)
  done (took 9.737028651 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.0979119 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074561898 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087173082 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094034169 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090585466 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080132329 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082606252 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074405683 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088147825 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07905776 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081712248 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072797896 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08284259 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081844079 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074383565 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083105362 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076756251 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088205122 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087210639 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073532851 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08109719 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085783374 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094741378 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085090779 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08353645 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085647395 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094980462 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081862626 seconds)
  done (took 4.054269334 seconds)
done (took 39.706009998 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.759803348 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.917934599 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.737604693 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.096724875 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.810009957 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.93402357 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.835470038 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.731938687 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.933063024 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.771947033 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051232262 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.812760339 seconds)
done (took 65.192843916 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.784964067 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.884603153 seconds)
    (2/2) benchmarking "String"...
    done (took 1.979679529 seconds)
  done (took 5.528900208 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.963164134 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.3176966 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.981743662 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.733124711 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.739161982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.048965136 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.552707367 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.253379325 seconds)
  done (took 30.295076448 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.914391023 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.956996695 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.453703426 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.478243944 seconds)
  done (took 15.524443798 seconds)
done (took 62.856943838 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.775026894 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.759053484 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.765826567 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.718507571 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.792254262 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.74638886 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.880924323 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.758388855 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.739374192 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.724256477 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.735098317 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.165319998 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.743169153 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.932090287 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.738885377 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.745973375 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.767719195 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.231905033 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.897537076 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.745719274 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.741079408 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.786242038 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.739882046 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.872389913 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.756589492 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.733399827 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.145771728 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.745376109 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.359391619 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.735045612 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.764688727 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.035482865 seconds)
  done (took 202.443771434 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.738886628 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.77599832 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.810995356 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.742415039 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.142116142 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.919959755 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.841114213 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.186535561 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.740397067 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752136987 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.009683625 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.735073219 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.022316542 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.687740417 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769897694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.742935777 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.963213407 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.051627438 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.770823615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.893342011 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.757497718 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.949654783 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.896881108 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.023403294 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.780213647 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.844758831 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.743210683 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.76301761 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.932726541 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.931410703 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.774767692 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.761031208 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.94446046 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.612579974 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757548166 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.747497976 seconds)
  done (took 169.186786672 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.941825469 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.742301705 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740263451 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740699222 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.746442445 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.737248581 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869318715 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864400613 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.359641333 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.372722888 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.740696744 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.792672733 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555735331 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.737424731 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810274363 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.74696838 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.737936725 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.754585341 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.767624459 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740223528 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73967139 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.870821998 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.749256785 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.945017431 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748800592 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.741658486 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747225083 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.11264249 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.736531712 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746669586 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.983093489 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.738577547 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742773186 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.595167655 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.283194079 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824683745 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73964153 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74811177 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.739021151 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.960425183 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73850196 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.741748619 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.743881405 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880046103 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.740665072 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.862543794 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.743797012 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22599305 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.743931055 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741864782 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.377581602 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.614375955 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.743236874 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.742386186 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.745195453 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.742829634 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743134181 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.755316718 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.342581897 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.820344772 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.741676532 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.74583533 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748963398 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.741394634 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.880864464 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743487587 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.738173994 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.799768799 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.975798806 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.867147273 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743080404 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742693871 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810794435 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.8356621 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.741149805 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.741121292 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.743328273 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.744076691 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.824278645 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.739373035 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.910138044 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749492395 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.745511149 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797000375 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.813907509 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.740634745 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586007274 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.743406642 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.744638783 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.742836182 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04714481 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812475377 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741846618 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.743585181 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74521748 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.887008886 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86539084 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.462913111 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.746576955 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.340362166 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.749918274 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.896138748 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743316386 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896928108 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.746679699 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827570133 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748190248 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.745980333 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.743832855 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776322813 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.74411885 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.74456421 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.744219848 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.79927663 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.116122656 seconds)
  done (took 398.168593924 seconds)
done (took 773.466816015 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.40353258 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.367569325 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.466008299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.381656362 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.361808575 seconds)
  done (took 13.655077184 seconds)
done (took 15.332086018 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.83880865 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.840993084 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769923599 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.842781604 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768346673 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.840203248 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82168611 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.771856862 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.805751154 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.770533243 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.807703013 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769431708 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758766975 seconds)
  done (took 25.083006581 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985644669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.987345025 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.816595912 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.990575864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.792502491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982428411 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.910852649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.901517315 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898092106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.764157736 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.758878396 seconds)
  done (took 22.466325844 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.990611747 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.988054487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825036586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.9969035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.794685405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985832272 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913729178 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.900872701 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.900152544 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.763195909 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.762387625 seconds)
  done (took 22.497932178 seconds)
done (took 71.725770618 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.755979676 seconds)
  done (took 3.431976829 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.784639009 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.952915481 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.763321442 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.763802203 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.755138402 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.756426171 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758246082 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754116208 seconds)
  done (took 15.966802476 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.754461413 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.752555489 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.750552935 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.751122143 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.751651874 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.754826434 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.751009093 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750783098 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.754279959 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.74982765 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.751963716 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.752679661 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754635279 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.752792533 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.752000427 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.7546069 seconds)
  done (took 29.718275429 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.753692344 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.75194043 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.75347914 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.754659653 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753682446 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.75561381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75604423 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.753422449 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.753662982 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752080667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.753749123 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.753551033 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.754255755 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.752580194 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.755702479 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.754198174 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.754208384 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752717002 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.758863558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.753692847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.755585403 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.755427544 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752975617 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.754869966 seconds)
  done (took 43.782088392 seconds)
done (took 94.577814937 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.490095903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.393864769 seconds)
  done (took 9.563770202 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.759195935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.75644427 seconds)
  done (took 5.262062461 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757155873 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.755808693 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756933262 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.756279347 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.756435009 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.756344529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.754867267 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.75691046 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755586637 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.757446542 seconds)
  done (took 19.244659947 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.757247294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.758264924 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.754591923 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755584872 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.757498451 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.752868883 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.755136424 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.757108245 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758449236 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.753935215 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.757038327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.753470853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.756829868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.755532343 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.757265169 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.754837826 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.754416728 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.7561357 seconds)
  done (took 33.286778364 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.75739979 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.758068219 seconds)
  done (took 5.195606473 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.755864536 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755017161 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754916026 seconds)
    (4/7) benchmarking "year"...
    done (took 1.755362982 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.753634335 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.754899187 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.755983492 seconds)
  done (took 13.967384236 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.757979275 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.917192085 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.987893594 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.405743617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.759657448 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.761810325 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.713046626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.761728186 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.763482279 seconds)
  done (took 19.51027174 seconds)
done (took 107.710619015 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.607965705 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752150251 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.979705332 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813681443 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.801910618 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.097717305 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.758864943 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.065358765 seconds)
done (took 42.560724703 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.847401447 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.530135191 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.546921974 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.774558624 seconds)
  done (took 15.533453684 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.743018623 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.269056771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789541162 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.344249092 seconds)
  done (took 19.882597427 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.122061907 seconds)
    (2/2) benchmarking "read"...
    done (took 2.102343649 seconds)
  done (took 5.91418892 seconds)
done (took 49.862663389 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75927039 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.761413653 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.758003502 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.761424467 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.758744548 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.760569922 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.757905395 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.759617112 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.759804697 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.761918383 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.759038663 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.75822382 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.760667641 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760850996 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758322111 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757688059 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762864599 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.759067631 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755429144 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.756871448 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760452109 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.757342553 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757988089 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.75978745 seconds)
  done (took 43.905673634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.761915987 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.759622601 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.761958359 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.762324452 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758724915 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.761902997 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.761650133 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.760086132 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.761644308 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.760852258 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758354548 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.760083836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762567965 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.76094548 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761054421 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.760143667 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.762028506 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761058477 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763645356 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.760612976 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761390763 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759055783 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.759704978 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761984115 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.760837302 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759429815 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.762359231 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.761292604 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763959452 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.760742246 seconds)
  done (took 54.518834798 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.768007055 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.771789223 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.764627144 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.766045829 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.764856732 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.764065059 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.765006186 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.764633038 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764544403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.764504759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.764065433 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.765081625 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.766092257 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.76349156 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.763774521 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.765335878 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.764964104 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.763792445 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.764414862 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.764404878 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.763774445 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765106815 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.765059373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765295318 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.766243421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.765188109 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.764713131 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.7656901 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.765404627 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.766257979 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765694346 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.764859811 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.765738053 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765544378 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.765407195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.766863239 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.771109564 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.77588544 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.765668688 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.766256441 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.767593255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.766449146 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76605288 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.76664381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.768413969 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.767977079 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.768150858 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.763876435 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.769002099 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.765754012 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.767657723 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.76545024 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.766342201 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.76577223 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.767331449 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.76683726 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.765522923 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.76576715 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.766145681 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.765927204 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.765649908 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766431432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.765603128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.766329919 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.765497019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.767186515 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.767916854 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.767169512 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.766717039 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.768049555 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766834395 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767741679 seconds)
  done (took 128.852529469 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.766498065 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764102477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.763777132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763824485 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764522727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76660172 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.764162838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766923027 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764043584 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.767321392 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765578317 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765773914 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763733838 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767041832 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766710629 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765053363 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.766463388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76503723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.766473505 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.767200864 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.766787959 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763527501 seconds)
  done (took 40.532996342 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767773706 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76821363 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766883296 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.765328089 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.76474783 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768175281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.766817803 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768012185 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767936896 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765920837 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766647049 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766540013 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765292467 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765048675 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766291724 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764716425 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769265924 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76549218 seconds)
  done (took 33.490101751 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.765155603 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.76506395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.767960476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763475378 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.764493189 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.768586453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764638894 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768861389 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.769311373 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.768271631 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.769668956 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767963881 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.768228397 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767342403 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767785539 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767736874 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.768409018 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766652254 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769377659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765393283 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.765604707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.768057715 seconds)
  done (took 40.571400661 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768293052 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768477313 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.766799918 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.76551974 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.766436042 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.767813199 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.767911773 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767069578 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769318566 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.767639081 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768100557 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.769190117 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.76658477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766958986 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.764829297 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766885396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770310005 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.76804509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769531713 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.766629017 seconds)
  done (took 37.044106724 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771094409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772989489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770554437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771330817 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7717874 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.773082347 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770355956 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.77156834 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771235704 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.771480588 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772844874 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772513151 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772776479 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.772408718 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772136465 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772396341 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771701053 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770951142 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.77244277 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772572733 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772305533 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771479703 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769918829 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772202161 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772012447 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.773478247 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772237006 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772421122 seconds)
  done (took 51.307221555 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770699482 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77003811 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.768597837 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.767776151 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.766609379 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.768376432 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.769158246 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.766827696 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771229007 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767618469 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.77034487 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.769931557 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.770558021 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.770884999 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769700971 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.77197555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773228556 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.769629296 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768460311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769207487 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.771875773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771130363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.773719564 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769023215 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769126674 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771962236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769531612 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76870389 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772271244 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.770059258 seconds)
  done (took 54.792811566 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.790533543 seconds)
    (2/2) benchmarking "in"...
    done (took 1.789676595 seconds)
  done (took 5.275222354 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.770723682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772674808 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.772234925 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771195548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770600911 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772950339 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774423455 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771247982 seconds)
  done (took 15.870938577 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772571008 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.773558918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774612005 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.772579184 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773590525 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774506961 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779058485 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.774076407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.774461785 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.775447481 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.781578861 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.781741723 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.774902625 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.772654596 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.772576396 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774841004 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.776410751 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.773556674 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.775353601 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.773158104 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777174007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.776672435 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774928013 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.772843251 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.775997445 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.782456444 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.776882592 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.774005741 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775280639 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.778519663 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777819177 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.772579419 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775296148 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.776724899 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.775205472 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.776622259 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783912238 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774606257 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.780466478 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.774805114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777706241 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.773825305 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.775422277 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776165331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776920781 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.776703487 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.775079864 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.773862108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.775775697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.778255448 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.784187638 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775773984 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773010734 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779283943 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.776570765 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783869343 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.776897503 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.778367494 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.785734226 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.786086266 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.789516491 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.78383655 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778585411 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.778425308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.78657434 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.80421441 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783839782 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774098434 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.774778358 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776302549 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.78273423 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.787847246 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.78639742 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777654963 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779304176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.777224528 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777159717 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777961132 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784194073 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.779325175 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.779308868 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778951836 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787323698 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802647724 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779276914 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.778776589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.781660219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.776783758 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.778004932 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786883835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.779829882 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.777542962 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.778329176 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.777156952 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.778589056 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778127746 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.778726795 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780732995 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776890337 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.778292098 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781209319 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78229746 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.788528639 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778258487 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780176597 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.783499022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.7792552 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776849679 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.784888085 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779758765 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779779853 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780359528 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.784318379 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.776516895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783631212 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.790371079 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.779007693 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.78266401 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.780248627 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.779673874 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790036718 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.808436553 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.778988164 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.778630086 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.785898328 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794791465 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780331016 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.782173032 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.780589875 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.777386856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.776330793 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.782229852 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.780112227 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.780331584 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780137086 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783026213 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.778143243 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.780756069 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.780868568 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.781371073 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782043793 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.780788497 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.782106921 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.783969023 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.782640805 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.785356957 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.788240996 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.781821872 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.782409734 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.783840785 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.780766764 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781036994 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.782764823 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.782656629 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.78137822 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782151371 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.782022013 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.784547711 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78238415 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.784435541 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.782571424 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.782202382 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788962469 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.78405862 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.785590809 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.783917417 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.781295634 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.784150848 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.783674399 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.783910677 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.784344387 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781857189 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.788414663 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.794176048 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.785213791 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.785366662 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.787196871 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785746455 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785994833 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785966639 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.788888074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79461132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.784968813 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.791467872 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.782455092 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786353378 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78721811 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786003631 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783902425 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785562086 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.790267319 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.793559586 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799419696 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79259524 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786570201 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788415344 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.785011624 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789347377 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.789759341 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.788339997 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.786474923 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787779613 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784600408 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786162036 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.785788227 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.785162162 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.783508362 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.786314772 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.786926421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.784718479 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785761301 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.787074205 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786959079 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.782135183 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785491234 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787783137 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.783594902 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.783005092 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785253058 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.785327688 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786916661 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.788380157 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794125671 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.782847456 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786805875 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789444893 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.785151686 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.787101273 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.78686911 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788182519 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786051794 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.7901282 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.785401784 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.788227907 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792289346 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.7847578 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.786040684 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.790260821 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.789240312 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.785345564 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.787944824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795324108 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.787501543 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788604694 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.787676085 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787524911 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787674224 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.793326649 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.784976652 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.787714398 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.78703679 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.789320214 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.786876668 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.790368385 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.789367737 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.788799993 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791520977 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787163689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.787665075 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79037294 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.790038736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.790420721 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.789805084 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792821491 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.797237983 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.792207481 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.786901133 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.79157168 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.789837884 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.791115971 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.788982753 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.791973674 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.790411786 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802404904 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.800369877 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794708049 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791041133 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.792547145 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795895862 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.790662775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.796804961 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790166805 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79206009 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.790481204 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.790321234 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.788194774 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792220697 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.789715913 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790522572 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791785806 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.794537467 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.790732316 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.791458399 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.79131682 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.791278579 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.792036361 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790305424 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.791222589 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.792796909 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792370284 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790917929 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.79019981 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79823905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790938827 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.791746853 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.791569655 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.791458443 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.790233685 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.792342446 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.794426256 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.795975096 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.801650478 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.795273245 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.803588026 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.794257298 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800656818 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.791334373 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.795644772 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.801065738 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.78758575 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.79030793 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.792613438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792879361 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798010469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.792580067 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.793403057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.797113102 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792129756 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793453507 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.79320928 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.793063044 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792729236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.794545665 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800697008 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.791727997 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.797333781 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794203462 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.790097231 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.794280249 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.793253456 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.793927826 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796888879 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.794069115 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.793565944 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.790835231 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.792335788 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793380074 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.794421559 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.794946715 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.791792042 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.795037385 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800027246 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.793405077 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.799183228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792735017 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.800625002 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793079171 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.800768348 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794258433 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794634084 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795979537 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794032352 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.796009778 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.794421266 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.794904219 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.797352101 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.79415242 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.800455956 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.797003921 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.796936786 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794933081 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796716361 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794668657 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803743677 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822013914 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.79544955 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798877627 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.792932567 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796339939 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.800053233 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79587673 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.794166349 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.797963405 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807171834 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806355839 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.796737392 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.795821604 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795869335 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796636638 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.794824265 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.796323934 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.796753092 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.796997693 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.798466859 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796065473 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799153234 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.796444903 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.796737882 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79600909 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.798932462 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.806715113 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.796287469 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.796426716 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798454752 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.796658414 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.797398078 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79786417 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.795607702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79731146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794423138 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.796231436 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804132333 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.802113412 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.797556409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.793570664 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.797574921 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.795310712 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.795161853 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79626246 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.796194738 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795897591 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.795734459 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.795730231 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.79570125 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.794714364 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.794330897 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.797797872 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796897614 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79975833 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.803345752 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796597768 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.792990058 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796969533 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795761608 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795283454 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.796249929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.80398386 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798392237 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808127067 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.805661892 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802210486 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.7968153 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797756937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.805341146 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.797835469 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.79758388 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.797012957 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.797431046 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.79848015 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.801152309 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799382618 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.805263359 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.797032039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.797253264 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805422368 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.798541868 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799553515 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79848434 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804507934 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799446738 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.79779811 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.799707019 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.797402179 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805066297 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.796729304 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799016207 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799376948 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.79673077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.800911938 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803768066 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799285745 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.800362571 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.795889718 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.797790194 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799346415 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797180636 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.795247085 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.797606441 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.798509846 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.80219179 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.807059971 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.796684248 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80104166 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.79976998 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.801874252 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80125052 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.800952804 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.796766089 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.797577525 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.800301188 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800357029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.799328179 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.801915623 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.800857894 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.799217082 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.800973171 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801910686 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802799305 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.813734919 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.809233634 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.797050093 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800878566 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.802047048 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.803399965 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802706263 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.801892153 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803035463 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803636619 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.799727058 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802989837 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.800599435 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803258822 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817390092 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.799793438 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802694666 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.8000994 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805170481 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.800981965 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.799041781 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.80190458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.802875485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.804490146 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.810322336 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.801808853 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807498971 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79891947 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.80169249 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80591693 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.804054384 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.809598165 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.804127456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801206753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.803497904 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.806689285 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.817542562 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80142344 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810561961 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833352442 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.801216064 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.802480513 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.802150406 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802083537 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802292927 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.803331413 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.801772102 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.800864166 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802572752 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.804044068 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.801877196 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808469228 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.80481296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801357851 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.803210966 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.803129006 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.804385393 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.800751039 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.802140618 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.801253793 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804212477 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.803046549 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.803062325 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.803779573 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815735002 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.812051635 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.801427642 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.803627018 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.802448055 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807672456 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807946954 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81627059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812074473 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.804557553 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.803990416 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804109091 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803822836 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.800625579 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803172641 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.802465493 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803831216 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.799108881 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.815058249 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813132451 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.808467954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.802362028 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806626879 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.803644001 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805909017 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804304065 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.804716107 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.804397813 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804491473 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810050444 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.803619626 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803191227 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.80803899 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.813350628 seconds)
  done (took 1069.675477652 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803292753 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801264823 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.801906538 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.802893433 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803284926 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803233554 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804169729 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802694835 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802614293 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802198164 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803568251 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80225347 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8024494 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803542516 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801804072 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802334632 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803529084 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803757303 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80268438 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804376762 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804429589 seconds)
  done (took 39.588881919 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.807021308 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.803234528 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803422513 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806222349 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804155801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806466626 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802859573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806831246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805737415 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805261475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806322479 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804629246 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.802719386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.803958462 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804299228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806140022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.805310487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804834268 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.805574993 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.80386075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807082383 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.803414106 seconds)
  done (took 41.437194885 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.808242329 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.807113186 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.805609003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.804494769 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806238401 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.80463081 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.808190329 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.807335151 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.807006718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.80704568 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.80573271 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.807915786 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.817733675 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.814385484 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.810434175 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.810576542 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.952403611 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.808829475 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.810697411 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808848695 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.805833853 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.811952823 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.803679362 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.805667826 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.808183215 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.809616774 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.809315234 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.808412781 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.810855201 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810048497 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.814318478 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.809330577 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.8081972 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.811857718 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.807354596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.810045971 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.814429118 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.810795874 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.808337294 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.810766101 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.820951878 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.834746132 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.810403281 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.81580092 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.810090377 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.809603393 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.813726135 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.820009657 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.806891362 seconds)
  done (took 90.573961362 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809551403 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.811072388 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806927963 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808960957 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.808507659 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811142595 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.80886663 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811318829 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.807717097 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.808493332 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.810183803 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.810439971 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.809027657 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.811451876 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.81030902 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807622124 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80860518 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.807944334 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.807038405 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.809347244 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.807821005 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.810128878 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.811143721 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.807638004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.811260777 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809949724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807751188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.810556126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.809653647 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.80908999 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.811288442 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81161098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.811909532 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.809742841 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.808507423 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.810965279 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.811520976 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.810703275 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810547363 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.810446635 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.811842974 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812370759 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.814666406 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.812021992 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.811768622 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.810400992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.8098946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.810740448 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.809512475 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.812116649 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.812636877 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.81134971 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813077349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.810358212 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810946239 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.813156069 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.808522249 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.80890484 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.810866523 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.811485293 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.811726427 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.811231669 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.810142233 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.812583077 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.812933983 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.81132497 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.809630906 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812651032 seconds)
  done (took 124.838345591 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813695157 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.815878839 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81543181 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815237864 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815134829 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.815914839 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816501934 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.815491111 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814748727 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815054909 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815704715 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813685084 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.815108209 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.813375384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.814850293 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815640425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.815782026 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814398599 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815837229 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816025778 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.815652438 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.816149823 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815613296 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815458036 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815293982 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814997506 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81620115 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.815864285 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816534493 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815793444 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.816913112 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.814617079 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816380589 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.815911665 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.817737464 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.815751934 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81628524 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816851898 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.815623449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.815555891 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.816140976 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816941804 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817133975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.816811848 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816281145 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817358124 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816962763 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.818348115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817328445 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817648533 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.818046553 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816822175 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816005525 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.816907346 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.817412365 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.816840249 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81935686 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818171734 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820440615 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.819659743 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816634463 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.819055948 seconds)
  done (took 114.345169289 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817850247 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.817050551 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.814274297 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.815283891 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.817070724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813688078 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816764801 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.816828424 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816922152 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.81647411 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819028282 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814788335 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816977934 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817181809 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814628182 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817166138 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814342362 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814363509 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817644552 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814671733 seconds)
  done (took 38.061797871 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.816169877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818811434 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.816332508 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.816018096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.819115044 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.81812535 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.817546378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817711235 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81558598 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816755503 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818352296 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.817250257 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815527277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816671197 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.817554725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.814998514 seconds)
  done (took 30.811934679 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814464226 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.818463848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.819171958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.818148779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.815248547 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.816288134 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.818855458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.815373519 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.814597655 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.819338232 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.818175151 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.818421742 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.819249421 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.819646035 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.816604231 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.820418303 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.818240085 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.815018686 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.819181795 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.823107238 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.817368651 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.817783134 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.820372113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.819920433 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.818894038 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.817694555 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.817580345 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.8171941 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.817828674 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.819979258 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.81825851 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.820041319 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.817062211 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.817168684 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.820240884 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.818548942 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.82058121 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820202667 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.820547383 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.821182866 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.820837744 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.817589566 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.819693483 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.820546521 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.81925266 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.820133832 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.81781467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.817180354 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.817328666 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.81753363 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822473605 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.822489329 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.82110392 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.820740408 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.820421951 seconds)
  done (took 101.772904754 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821733948 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823482159 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.818196001 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.823089034 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821635994 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.819712169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822405912 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.8202016 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819107146 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821996525 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821007632 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822141139 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820298636 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.822464252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82255489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824237333 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.821373136 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.8219966 seconds)
  done (took 34.5309567 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820257602 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820784891 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823489756 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822165991 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.820923734 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822390344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818696835 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.824529471 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822581514 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.820744383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820088071 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.8228525 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822573598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823392448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822162361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819811494 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.823323378 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824647312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.821824432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820563008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824534302 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823684385 seconds)
  done (took 41.830380668 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.824547537 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.825076557 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.84223699 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848208991 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.846709033 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.862643254 seconds)
  done (took 12.793948412 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820309568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826545 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821385874 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824930257 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824592636 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822394224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822554639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822314876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82519271 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823794145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823106061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827361225 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82663104 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823663403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825244049 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825873899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824547956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82508249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823616781 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826089214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822259756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825346904 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823365471 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827379305 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822965306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822073281 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824360746 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821114843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824705041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825629243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825919352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82103169 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825181818 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822640044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826222783 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823562068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821959707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825096035 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825895174 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825448537 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824520305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823593052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823838199 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822176434 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825481744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822543883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822031989 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822130235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822226833 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825491594 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823724148 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820896762 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823088213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823072499 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823380552 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823778048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821663417 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82072493 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823694902 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820686024 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82057808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823969446 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815916745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817315371 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818014931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816390778 seconds)
  done (took 122.084880079 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819759079 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815652782 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816204918 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816419364 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815193756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817790952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813784357 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814253103 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81337305 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814018143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815395859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813246437 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81020919 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809633189 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811799836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809444222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810964402 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810985182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81203405 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813707687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811855163 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812364299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814400937 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812078675 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813005725 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814495935 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811760204 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812561738 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810867825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811962624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811819758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811744167 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811367787 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811812089 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8124544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812255951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812469652 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812042514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812689787 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814335038 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81207206 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816113048 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812402175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811738273 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813855114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811728455 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812097086 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811492156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812888783 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813614474 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812213084 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812929837 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812589867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81233889 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813427481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81451064 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81304739 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812466909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813023776 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815879207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813836259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811653419 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81493161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812905665 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812951602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812839105 seconds)
  done (took 121.403393383 seconds)
done (took 2491.600503817 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.840685771 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.820807953 seconds)
  done (took 15.396061498 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.978398971 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.928619016 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.811937198 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.838623199 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.811327704 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.831552398 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.831307574 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.810586562 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.813074394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.815454991 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.811856536 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.998641445 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.86914639 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.80872468 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.810321585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.906167604 seconds)
  done (took 51.415525361 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.816793635 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.816076298 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.826990781 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.816716949 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.813759932 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.826088684 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.850108652 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.817613788 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.849039719 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.829377728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.885180789 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.82882344 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.81303842 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.863779094 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.828573653 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.829685643 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.913969437 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892650994 seconds)
  done (took 34.851576139 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.893845386 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.815028591 seconds)
  done (took 10.450480261 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.812908614 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.810390023 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.826651827 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.819139717 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.806175442 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.832706997 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846590282 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84903412 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.813577724 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.843260154 seconds)
  done (took 70.000130395 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.817717964 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.812977307 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.8166976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.810736084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.802235024 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.805073492 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.809808042 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.802929101 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.470823844 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.840825315 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816557618 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.811092154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.805539176 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.808769248 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.80483912 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.831439639 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.901186203 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.802802187 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.803605369 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.811041259 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.806440863 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.863241725 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.819615631 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.808288837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.837075058 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.47066378 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.812177936 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.810362447 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.895582741 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.80202518 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.803566091 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.803827796 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.807371412 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.176695566 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.085036389 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.805311336 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.814885203 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.809710355 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.800082715 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.895459694 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.804582005 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.807324301 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.476622771 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.061517246 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.891550681 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.846360924 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.123126918 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.819889447 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.802821251 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.829619805 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.805615856 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.803902916 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.815504174 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.289076135 seconds)
  done (took 128.631311087 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.796456763 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.147613822 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.968493169 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.796995659 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085497988 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004703785 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.795460905 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846165192 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796719203 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.032597406 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.051214519 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906258874 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794375662 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.794910989 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793401278 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.791376137 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955383341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.871780646 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795627059 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.791757567 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825903574 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043065133 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.919627449 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.795157991 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.825156712 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009820423 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.918594448 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.899466398 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.579600227 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.792667007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860708619 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791607198 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.791073442 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.789264537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953163542 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.888790271 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876756322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.790193739 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792620957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.789168286 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.558380794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996162344 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889676136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935542263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.941505683 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997087358 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572781773 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.79131788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.543612581 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.95847854 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.022894057 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.029660811 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.913960662 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.789866908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.129661689 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789354435 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.789475893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042020051 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.933506116 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.890581859 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789341202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.789940146 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.788556438 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089879851 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.790876408 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886838031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.789053651 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.78554321 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889340492 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891565365 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.929260095 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003329141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822588667 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.515108157 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.000114089 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.042995211 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856495576 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041501932 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788281576 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786601833 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873381932 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.631915412 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.048289237 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.080601935 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043481099 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827428661 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.526726216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.78907977 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021046169 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013319764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.050986512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940950774 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.033963262 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.128749046 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.790816221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.788955011 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.010372112 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.927391695 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.79151428 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.144740097 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021873826 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.334685689 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.813811645 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101078829 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.923802615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791502368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.441432558 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793116119 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02651971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835593361 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.79218018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793186804 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.012390767 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.783554633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79382523 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.69055444 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.855721714 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.792449557 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028220214 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.794195896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064321049 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793400337 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037607998 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.195243574 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826734284 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.970347418 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.942124416 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.794533029 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04090447 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041122564 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9109566 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.068159663 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.676450952 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.793622631 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084988475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.796891759 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.791785959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.964789508 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.795168806 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945653055 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.794146282 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094950508 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818915706 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028777558 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796259432 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056120883 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.828050224 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.845864364 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.796734 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.920037837 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795470153 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.61496165 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.955456817 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795544587 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.791428227 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.339908378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.790799916 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947026388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.029114218 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817255476 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871710872 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.466963301 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790613516 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879562409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.81823395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.187672343 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.794387783 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.050410646 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.794676732 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.795071472 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.795269057 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.093442534 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.029716071 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.796911256 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.790012278 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.71080304 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.793721961 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794048704 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.981900986 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.111251822 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792911986 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001846304 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794325403 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9218384 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797848482 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.870242138 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134447226 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.793143362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.794509473 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.79425107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.798094026 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795419319 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007670339 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.821130436 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.315303517 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938258468 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074674197 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.108035048 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047989892 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839512364 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798877828 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053834972 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.79418791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.858752521 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.795076975 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.820177749 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028755154 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795388682 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007254284 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075587605 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.649357659 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846937565 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.795519548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797283537 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.79294644 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.945462324 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879443068 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.794364099 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796655207 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.91248362 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.916621763 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008990204 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.796819904 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.841655202 seconds)
  done (took 885.142782153 seconds)
done (took 1197.626685254 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.796256619 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796872438 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.782484751 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795367034 seconds)
  done (took 28.895461438 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.806028835 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.801305909 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.802657211 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801525918 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.803248739 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.804045314 seconds)
  done (took 12.541119437 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.832482223 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.20616006 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795778075 seconds)
  done (took 21.557028797 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.8697141 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.184466194 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.905743719 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.222982691 seconds)
  done (took 9.906859558 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.80565268 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.804460788 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.803530205 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.808282711 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.805112009 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.806285188 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.802713567 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.803421017 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.806928964 seconds)
  done (took 17.971024237 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.81660086 seconds)
done (took 96.411110113 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.817675436 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.475167072 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.050653623 seconds)
    (4/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.000235696 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.406623818 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.961379908 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.829590528 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.132443909 seconds)
    (9/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.106237499 seconds)
    (10/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.880888811 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.843735529 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.834260198 seconds)
    (13/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.792833401 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.499630777 seconds)
    (15/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.814396762 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.736253969 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.19630495 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.797842451 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.896350758 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.974875954 seconds)
    (21/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.046647306 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.083852845 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.890607962 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.818078815 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.911903472 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.836607706 seconds)
    (27/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.94552268 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.228827545 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.808835966 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.909634842 seconds)
    (31/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.920489616 seconds)
    (32/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.893052539 seconds)
    (33/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.850798646 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.89075645 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.497712345 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.101170937 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.328372603 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.815850409 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.869836138 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.037442007 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.744836956 seconds)
    (42/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.212530513 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.892934295 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.808541297 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.040743968 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.986498168 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.05475535 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.886119293 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.110295583 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.054814612 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.398938031 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.093448815 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.798315848 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.837568774 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.928904773 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.143695262 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.799751009 seconds)
    (58/309) benchmarking ("sort", BigInt, false)...
    done (took 6.897989217 seconds)
    (59/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.797795615 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.921576444 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.211749897 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.924906679 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.151645804 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.835943976 seconds)
    (65/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.717140219 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.824372856 seconds)
    (67/309) benchmarking ("sort", Float64, false)...
    done (took 5.596543921 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.840988666 seconds)
    (69/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.982264141 seconds)
    (70/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.058577364 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.830526992 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.127607215 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.777515417 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.796357676 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.996920086 seconds)
    (76/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.810906827 seconds)
    (77/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.010969868 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.886206627 seconds)
    (79/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.841363967 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.830046789 seconds)
    (81/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.257541364 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.526559973 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.169451797 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.994791267 seconds)
    (85/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.921544738 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.016576513 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.749402271 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.950281956 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.036819875 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.812019312 seconds)
    (91/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.134617722 seconds)
    (92/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.997298656 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.896024778 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.822617419 seconds)
    (95/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.967817808 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.837343767 seconds)
    (97/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.820372345 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.115555979 seconds)
    (99/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.093488284 seconds)
    (100/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.944339402 seconds)
    (101/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.220681596 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.274270741 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.290206834 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.049342981 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.914594134 seconds)
    (106/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.910880435 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197076791 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.881666201 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.205111582 seconds)
    (110/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.914867528 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.742812391 seconds)
    (112/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.964624517 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.955311504 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.798546654 seconds)
    (115/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.05726811 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.007872267 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.765302575 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041950084 seconds)
    (119/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.881316437 seconds)
    (120/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.822021324 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.812182042 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.240835503 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.981879326 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.963052475 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.143890213 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.843248323 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.918328302 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.907469197 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.740305897 seconds)
    (130/309) benchmarking ("sort", Int8, false)...
    done (took 4.69034808 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.03936885 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.836448046 seconds)
    (133/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.298385201 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.070853614 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.282268668 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.141837915 seconds)
    (137/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.998049822 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.06673041 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.342314986 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.05771095 seconds)
    (141/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.097349533 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.809623933 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.985737263 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.168588017 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.827995444 seconds)
    (146/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.929582297 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.920786256 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.956183358 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.080163271 seconds)
    (150/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.904962551 seconds)
    (151/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.998288534 seconds)
    (152/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.004418787 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.037198629 seconds)
    (154/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.84406883 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.844052611 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.631315718 seconds)
    (157/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.109832811 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.821493569 seconds)
    (159/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.848844488 seconds)
    (160/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.820003985 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.875295312 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.110397932 seconds)
    (163/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.888576264 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211688684 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.817426218 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.10325346 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.979968585 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.839122741 seconds)
    (169/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.124195626 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.99821415 seconds)
    (171/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.910117919 seconds)
    (172/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.203905766 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.802462901 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.116168585 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.023007631 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.818970667 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.819885333 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.91481691 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.96533348 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.912733567 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.938601733 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.905805553 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.25431288 seconds)
    (184/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.023222614 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.992358653 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.83090261 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.872621851 seconds)
    (188/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.056388352 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.130090011 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.271997378 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.852030877 seconds)
    (192/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.198846706 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.86071409 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.821541115 seconds)
    (195/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.059802661 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.656714966 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.821365029 seconds)
    (198/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.046871223 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.823025592 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.159628348 seconds)
    (201/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.82049806 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.204919191 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.420512168 seconds)
    (204/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.924199215 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.924931744 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.822877056 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.474288894 seconds)
    (208/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.349171616 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.916882402 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.289380754 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.106240736 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.676004493 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.041900607 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.114046084 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.662087915 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.00447964 seconds)
    (217/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.939726025 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.886116523 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.966376249 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.808295278 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.943837554 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.151942159 seconds)
    (223/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.83749998 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.839948445 seconds)
    (225/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.821657299 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.81869998 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.222888208 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.067432466 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.151019832 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.94427909 seconds)
    (231/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.822106355 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.333631221 seconds)
    (233/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.957625694 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.813534583 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.85473537 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.675824603 seconds)
    (237/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.959071937 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.904473966 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.847433992 seconds)
    (240/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.122361942 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.455042578 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.115931705 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.812700354 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.895881765 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.243758983 seconds)
    (246/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.007223821 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.830609444 seconds)
    (248/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.029775189 seconds)
    (249/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.845625923 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.066688983 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.964524145 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.117254554 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.539829359 seconds)
    (254/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.548614134 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.846099721 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.916481939 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.039877099 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.567911044 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.854357927 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14837983 seconds)
    (261/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.918898926 seconds)
    (262/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.016559753 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.558405439 seconds)
    (264/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.855913001 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.683237479 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.173910857 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.897571944 seconds)
    (268/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.069727781 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.812512118 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.358054383 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.973688705 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.918109594 seconds)
    (273/309) benchmarking ("sort", Float32, false)...
    done (took 5.572659795 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.843922612 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.161643039 seconds)
    (276/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.458339885 seconds)
    (277/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.921464681 seconds)
    (278/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.741183988 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.177680863 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.4884265 seconds)
    (281/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.820106269 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.724621199 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.936214122 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.917869921 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.210297005 seconds)
    (286/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.178432713 seconds)
    (287/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.276437949 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.510511116 seconds)
    (289/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.826933484 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.094297374 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.889629197 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.835471464 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.900043203 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.272458766 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.646729652 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.924079751 seconds)
    (297/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.91223079 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.835243163 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.859894566 seconds)
    (300/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.811091911 seconds)
    (301/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.345116227 seconds)
    (302/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.987201026 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.858238089 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.960155948 seconds)
    (305/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.958227188 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.217044133 seconds)
    (307/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.069874679 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.786284423 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.862101447 seconds)
  done (took 992.266387363 seconds)
done (took 994.279926101 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.859891654 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853683683 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.83769319 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.85981103 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.949797792 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.86599809 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.849608411 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.842122599 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.886648392 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.887508622 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.836300029 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.865500099 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.839723783 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838969018 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.83727322 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.852550772 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.15575379 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.867688162 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.855037914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.84847196 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.85486808 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.837331383 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.887776127 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.865314645 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.842608697 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.841204975 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.841232671 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.859962179 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.950388528 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.841612032 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843064127 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.853064479 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.155260538 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.867703669 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.835020764 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.859764744 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.852587429 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.849794242 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.846160333 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.874490181 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.249873719 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.877769226 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.842070868 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.84087551 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.841361663 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.846361557 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.841332881 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.848297639 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.854748277 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855402587 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.238976961 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.895046225 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.843031533 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.842524844 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.852325753 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.842590455 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.846799527 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858408178 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.861044611 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856331286 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142787064 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.873318177 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.844703845 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.858507836 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.849256507 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.274589906 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876623178 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.845309878 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.250413951 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.886876358 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.276188138 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.889393659 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.844669658 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.857492494 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.873033317 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.156913415 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867340465 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.842334942 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.848928411 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.840610946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.852145266 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85536306 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846777005 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.845217209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858730184 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.871326118 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.852896153 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.844474585 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.8524772 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862654589 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.851811353 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.853995593 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.846052501 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.839150976 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.853018339 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847839579 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.845145786 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.843851193 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.849301892 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.855780797 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.250375368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898111025 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.840752286 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.841078956 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.843688908 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.856880126 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.248025059 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.883813648 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.866092326 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.892410752 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.847980137 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.14570299 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.876101581 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860285129 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.856021624 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847240918 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.84021687 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.14505348 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.272626213 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.898537202 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.847039409 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.843434089 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859487579 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.848556722 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.841346723 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.157864813 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.877730002 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858867219 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.965316055 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.860861824 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.876738711 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.842438652 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.849967354 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874099523 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862016965 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.877171411 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.849505164 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.862220204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.863142295 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.841933249 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857322248 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858799414 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.849066328 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.853065708 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.842056066 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.875797907 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.859484705 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859244163 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.870971044 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.967877001 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.84385825 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146480238 seconds)
done (took 289.826466488 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.916173263 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.836868542 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.942199163 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.84353372 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.926034922 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.930937892 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.841005269 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.841882643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.842667723 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.217492792 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.84166866 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.842612569 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.840593198 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.841441947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.926295848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.844458908 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.841216497 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.183124548 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.847462742 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.915392153 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.846087643 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.842320491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.84584552 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.220579088 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.844164911 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.839737944 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.917632348 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.845142043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.184228942 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.841406606 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.838066824 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184329628 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.936079527 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.874073312 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.84645021 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.853368592 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.926959668 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.859575811 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.927031855 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.925654969 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.945010497 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.877293148 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844232611 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.842189929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.850272023 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848087517 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.844192414 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.873668955 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.844402458 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.845013669 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184819878 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.858370055 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.853943034 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.844681866 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.844111195 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.868426241 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.845355209 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.848399128 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.938542899 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.848617015 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.908799934 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.220613396 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.222381419 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.848049533 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.842613557 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.845407418 seconds)
  done (took 182.66242741 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.912884187 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.925121652 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913356988 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.851857041 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.8969573 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.91536349 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.850879749 seconds)
  done (took 15.03285833 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.85525077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.84825042 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.901060886 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.898801089 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.847971592 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.995304973 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.847490675 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.85884869 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.845812356 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.900871867 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.848356814 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.848260691 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.857520872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.84909124 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.899043229 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.859354338 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966095997 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.849269944 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.851031228 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.001361671 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846056186 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.856105422 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.90343363 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.859130673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849119845 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.85496258 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.440759313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849425207 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848284132 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.850545823 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847125523 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.8899813 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.849535035 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.843989181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.848934217 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.96483447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.851853913 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.847630438 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.852109604 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.845931121 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.851792823 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.851308123 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.850037865 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.847932976 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.848767485 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.872689448 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.850640493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.849923359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849970005 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.851152762 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.901168114 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.85218649 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.848555937 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.847160172 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.905732532 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.858603433 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.852307444 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.848942226 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.850168867 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847831296 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.001498998 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.901904587 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.849586664 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899914815 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.851301409 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.852145621 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.852315586 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.852430706 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.948919035 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850970626 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.902839887 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.848662615 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.012808991 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.874981768 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.852420686 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.855147395 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.853379239 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852761617 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.844768624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.858482444 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.849457491 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.853044574 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.857936191 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8502727 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849384221 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.964534909 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95991811 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.849379853 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.865465899 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.860638624 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.850205848 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.908638682 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.853290241 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.850728576 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90895877 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.969006874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.907804949 seconds)
  done (took 203.961148087 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.857591093 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860094017 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.853990012 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.870811743 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.85146617 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.852312742 seconds)
  done (took 12.917144188 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.855298618 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.853826554 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.852184513 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852809241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.853863062 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.853505015 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.854166403 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856209903 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.859277272 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.852778252 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.854344479 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.853331795 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854033662 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854218126 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853976931 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.853065353 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.854049474 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.850168334 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.853444855 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853191674 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.010748159 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.854254846 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.854997016 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.855541084 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.858058237 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.853574977 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.862150315 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.854416526 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.855519647 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.863108178 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.857982279 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.855445173 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.853948938 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860724055 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.860041392 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.855178072 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.858475581 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.856232477 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853087587 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.857267196 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.855978512 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855762067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.852580033 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.85532685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.856397295 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.860566884 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.860971662 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.862909879 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.856410038 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.856580958 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.859013851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854709324 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.854557351 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.856816924 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.859099197 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864033428 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860288681 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.856223256 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.855757156 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.856958803 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.856873272 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.856502883 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.857234346 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.861898225 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.853410226 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.858070964 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.859569655 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860524016 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.857380178 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.856957035 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.857469013 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.85632237 seconds)
  done (took 136.585511382 seconds)
done (took 552.940026055 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.031738398 seconds)
  done (took 8.804351491 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.945308167 seconds)
  done (took 8.761905057 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.290981694 seconds)
  done (took 10.071813932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.919603638 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.862335763 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.856920911 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.851046907 seconds)
  done (took 29.286292629 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974231808 seconds)
  done (took 8.74776758 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.873327663 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.846967287 seconds)
  done (took 15.528981822 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.984943863 seconds)
  done (took 8.760346714 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985540347 seconds)
  done (took 8.790170521 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.86613049 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.893538655 seconds)
  done (took 15.550187513 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.838029108 seconds)
  done (took 8.613269786 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.56511994 seconds)
  done (took 11.436744557 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.873941755 seconds)
  done (took 8.753585838 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.87893455 seconds)
  done (took 8.654519734 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.923291393 seconds)
  done (took 8.698547342 seconds)
done (took 162.234386271 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.855191282 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.847044336 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.849679172 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.848827145 seconds)
  done (took 29.175266187 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.890054785 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890320011 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.892568244 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.901658004 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.893408473 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.890130235 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.882468855 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.883851541 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.900852354 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.893785535 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.892076187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.892007061 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.891331787 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881723599 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.893805217 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.894179064 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.902251022 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.893222027 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.883010036 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.894223294 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.857157514 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.901745245 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.894708414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.857409205 seconds)
  done (took 47.124374548 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.054998425 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.928170072 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.010010422 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.910580494 seconds)
  done (took 9.679160635 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.908425983 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.91067276 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922814939 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.95993482 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.986250622 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.920468485 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.884256318 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.878096447 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.865143378 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.911178444 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.986203127 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.905642913 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.996280652 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.857945763 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.048707491 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.858137773 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.858058121 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.91047964 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.963176687 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.978386497 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.858579742 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.911378891 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.913220083 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.908417428 seconds)
  done (took 47.879166042 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.856934597 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.865377449 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.864883343 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.858141568 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858573753 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.859255255 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.864069028 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.860496891 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.878624461 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.859720376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.858966068 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.858485894 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.857311081 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.858881464 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.858188675 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.872689744 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.87342381 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.858733248 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.86263688 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.865818271 seconds)
  done (took 39.031373402 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.854532947 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.708082616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205641439 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.109422414 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.853343928 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.854362049 seconds)
  done (took 31.364017989 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.874246919 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.865748309 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.859723868 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.91589743 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001895857 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.865991057 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.860497412 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.871443928 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.907367888 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925193006 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.880146602 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.890023323 seconds)
  done (took 24.499330249 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.856403782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.855684599 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.855959683 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.871886255 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.871505122 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.870334286 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.867336937 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.855059793 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.874023837 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.879643279 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.870131258 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.872058636 seconds)
  done (took 44.1844534 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950289545 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.743130495 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.935686994 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58470913 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391267155 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066505763 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380561527 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.205175816 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857272201 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131558014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881242719 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100722745 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111203844 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85703543 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.925995119 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.327596927 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158120435 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09225939 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88586369 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618242402 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978301393 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398638683 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.640537791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985714068 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067872522 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.990928522 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.258819411 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.823423889 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996851711 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896460152 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868669256 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859754498 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133250176 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242254175 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987328642 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870560394 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514201272 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.576464087 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.849008928 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.609260024 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.767281512 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.989982357 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867702884 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859207017 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79332704 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39813706 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207470466 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.862948893 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.560758732 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86312742 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871283753 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950387796 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.863354264 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.676366135 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814052184 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138654114 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.857004265 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86582188 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428328824 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964912303 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519761288 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.795785297 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.953896856 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616903574 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337517918 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.017133005 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.863481308 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863107837 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79502166 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.609827912 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984497766 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.006077675 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.878028576 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51098048 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168159605 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.916996582 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941756877 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161016182 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.532150805 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.920623434 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088531052 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817466181 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794851714 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.702517406 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795206395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13913301 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901691025 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.553125058 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906386229 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.207716945 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869915173 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881953515 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870468102 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088566433 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.743327081 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861118074 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.632990674 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1457373 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882307072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217315101 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79599433 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.863906757 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118241277 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.074243554 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983565641 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.436292403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026346126 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860633757 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.946583346 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.674616624 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976949878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.145878651 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93048131 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965188616 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994837997 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.825737257 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175851775 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891620313 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.036150302 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.857476282 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126659733 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202730321 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11826711 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945258728 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869725694 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863220184 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.620894533 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489327757 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.087674028 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.863739879 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.246300714 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97709548 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.864197152 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799862564 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.484313911 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881091311 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.97056025 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088774751 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.706255772 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243666961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801051111 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009339928 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975261684 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.085593014 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.521405116 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.943178066 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124698058 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24002092 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.09110307 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979314026 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882958762 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982333196 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886288713 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.163926946 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223335647 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.868896038 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.869282034 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.626606833 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.935730646 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868293489 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.87139448 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660943954 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157196049 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899092303 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.864541233 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.800831553 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.878692695 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949127247 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871490848 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875010986 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.393185024 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616034086 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.874830534 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.526261452 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089586954 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876651686 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.612194867 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054595737 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.949044707 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147602199 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934466713 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.800748856 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.569103414 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.570046534 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866358562 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802032658 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867186508 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875137451 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876582888 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.091759365 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154850006 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920027441 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.616948224 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.983746761 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876792776 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.870613742 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867829343 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.391682968 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974070994 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377022426 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980056056 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003650007 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.881807781 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801636056 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870807624 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87194462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868641412 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.823723672 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918844431 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.573608696 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331276051 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125035336 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.520367725 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883062207 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.589032418 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.998865058 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.890174077 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.648596661 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844665538 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.968232222 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938178553 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.87991319 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.62679979 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.650015163 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436078975 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187248443 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201433039 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335599985 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.249429294 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.193070305 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211666336 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102182853 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397161241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929202831 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218781356 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812495754 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95408232 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.523200881 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226924598 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882742031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098247582 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276119539 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.71768932 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031192699 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081206823 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904483653 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.684085401 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899571375 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.392770983 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027303757 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.672446111 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097521891 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211777766 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642000596 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.972178625 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.869433904 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.600697607 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956727953 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.581867797 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.233359754 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419780922 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89782965 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372837365 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868619818 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.316512886 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232845201 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.225086261 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.956883519 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803459082 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881605112 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881690938 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.872484965 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.852652833 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.72028249 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.128529459 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885739561 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1084334 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.019858683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268702468 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.78401169 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.877861962 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872770955 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182501125 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.544425944 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113676655 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.194535326 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451904074 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880622488 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808408267 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806741386 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.575899405 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88091059 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.850219284 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104962275 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.985713026 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825099568 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293996546 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185265204 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.12807941 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.886868937 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161284253 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157097782 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.607451598 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89986317 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.975115222 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658326687 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.579692439 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.095575499 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109651924 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670622683 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101031215 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.957795153 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.852706897 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871280286 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087097018 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.094837591 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.913831549 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124136536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.597689825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.8818329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253900379 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939002359 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.9005647 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.090237122 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.9675918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883255235 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951428441 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881005669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.885105911 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884583756 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920038375 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.901796329 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007639969 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.886445096 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964692345 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984642137 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.462449429 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.880274971 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163874748 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253240144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219476138 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942442068 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.872769003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880927608 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809794916 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011115133 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.320113202 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148962229 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005134576 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.015612328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898546616 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658401981 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.153717157 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188462306 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150264802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.770568615 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875065676 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965647123 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.097562449 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887411877 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.086163392 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115744909 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204297447 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350262556 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.003361397 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324101745 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148794798 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.241367401 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877656081 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464842947 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.888559056 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671480368 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.920332498 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920750745 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163524033 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883811834 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267046782 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897207022 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.070285902 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.331078521 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582616272 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239529694 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.877542778 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942033553 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164804225 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.290433336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195868588 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958006203 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886646087 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.580970415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014126642 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.763429336 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.124570659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876818989 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089430681 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.589867181 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887231208 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166585863 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195763121 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.872927148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.802520583 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919840476 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.886898235 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101359243 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158695068 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134373621 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886131461 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885058284 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.695511475 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162284519 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944982827 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811535477 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.877981919 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978088935 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123855015 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896717664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.393543966 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.581285383 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190263615 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.799516973 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900244549 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299563206 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32687174 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222997524 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.413882157 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11691719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441285556 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.716500815 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251627799 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.88365709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277310635 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254437016 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.882947659 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376296181 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989751751 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.163706974 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211993716 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.891476802 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694201986 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.924720554 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099982014 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469324455 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821524389 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881160332 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.940950161 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.877490309 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.012648569 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890603035 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.838438622 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.746123522 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.717856657 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37365376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.88070951 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.91126482 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.658174588 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447911164 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983806605 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03511574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889123154 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.589758393 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.169916222 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13512044 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378921281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.947890811 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.882932578 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877875534 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80764349 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074566482 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076748352 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191959853 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.208584386 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.987937646 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883731916 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.097741234 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092025011 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.925666779 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03964986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302478942 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990741667 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.809883267 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.595160444 seconds)
  done (took 1687.736600916 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.903186748 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.934369256 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.894000428 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.9425296 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942461864 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902426004 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.957031073 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908676959 seconds)
  done (took 57.19139481 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.879331274 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.097810161 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.888965811 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.879918809 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897835519 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.879526501 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.102019958 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.896415637 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.940200076 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.88938312 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.881560785 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.903939367 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.24548396 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.901788069 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.879029948 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.881754901 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.376921852 seconds)
  done (took 75.306146181 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.893766028 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.908595132 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.900944661 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901600575 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.926440285 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.893287305 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.979948506 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.917488494 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.88605336 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.064543938 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.220651819 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.888655821 seconds)
  done (took 90.188829607 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.899406994 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.888576805 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.889673557 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.889724571 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.88824606 seconds)
  done (took 11.269490342 seconds)
done (took 2196.422321627 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.120116421 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.109019542 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.108693278 seconds)
  done (took 6.022608754 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.027649223 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.075430136 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.196611065 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.217077007 seconds)
  done (took 10.325580341 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.172146943 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.252203664 seconds)
  done (took 6.230911791 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.222952495 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.9035636 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.300053439 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.88227873 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.878397777 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.881497952 seconds)
  done (took 22.451502967 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.88468067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.884911733 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.886016209 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.88525463 seconds)
  done (took 9.344579227 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.865959977 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.60924003 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.866654195 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.88161773 seconds)
  done (took 21.031867827 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.633577792 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.008707817 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.628214144 seconds)
  done (took 9.079526132 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.457606768 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.798988177 seconds)
  done (took 9.063708724 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.127471607 seconds)
  done (took 3.930407475 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.913044661 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.154239073 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.412386608 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.420660408 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.502740306 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.710793411 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.207504171 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.116396933 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.331921125 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.343538795 seconds)
  done (took 24.918283606 seconds)
done (took 137.755784616 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.234990764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903941384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.085119824 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.253640453 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.118124979 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.086286768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.101997073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.250931049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.777361829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.768005308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.245818066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.114827188 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.04972543 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.902184312 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.052858266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.897343987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.114351345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.262128213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.93263514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.150241293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.107563325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.89469918 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.085318725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.908833797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.112462062 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.032754564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.441162221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.901144016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.070070471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.451548245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.03449655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.29163406 seconds)
  done (took 168.440724393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88355133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.882073842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.882305297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.879402923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.431981701 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881634883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883696289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.881177127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.172702635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.15312817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.883495942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.422220325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884633294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880986823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.883746184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.882961534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.34885569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.8842132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.882209816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.882769239 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.88290239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.258255284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884817895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.264401631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.307896162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.884920273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882982914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.883030993 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.883251556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.883997108 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.884315847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.882801424 seconds)
  done (took 209.361151222 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.875927753 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884935971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886275197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882181104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.885207128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881474275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884315649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.882152616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.485672421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457388964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.884318604 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.886056231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.881978776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.883020651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885924472 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.884592023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.903508999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882682015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885851374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885293803 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.888523495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.517278997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884255723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.523829783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.88690519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.883863134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.884633115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8854582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.883571935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.886671367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888649882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.883259132 seconds)
  done (took 220.574435306 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.0781667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.892757765 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.895081969 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.81124939 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.892465914 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.891808912 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.886690246 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.07752826 seconds)
  done (took 19.246452717 seconds)
done (took 619.437078853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.368483699 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.216318472 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.067231189 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.916802659 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.146592051 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.947698281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.913041715 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.978361101 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.653959302 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.983009892 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.565390845 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.934703041 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.647473175 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.941040048 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.039437385 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.968555834 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.489845807 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.576979545 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.094635204 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.960158703 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.084306847 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.876796649 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.998098695 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.680323824 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.670687322 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.927057609 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091607285 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.494725998 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.923571958 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.081027854 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.669349046 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292374708 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.928377167 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.911228461 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.971080977 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.947584748 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257574304 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.92553357 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.036535093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680686183 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.982311465 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.532829411 seconds)
  done (took 104.184429746 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.885897851 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.883796883 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.882841507 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.884902335 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.883958153 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.884473977 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.882402138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.883295451 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.884897322 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.883113987 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.884917135 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.883809425 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.882066239 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.884255992 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.883297713 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.883395527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.884841781 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.885579313 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.881733034 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.882192415 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886455474 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.885156155 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.898249954 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.882987348 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.886296741 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.88478148 seconds)
  done (took 50.823183223 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.897461925 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.059516018 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.140607856 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919009236 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.895609933 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.900673453 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.915452835 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.902264344 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.90097722 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.899985202 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.991756539 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.904373347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915852402 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.140110989 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.917087253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.896783306 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.898788379 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.897704011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.067806747 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.915095525 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.91779545 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.903095596 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.917599806 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.909336141 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.899505317 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.898648536 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.901955771 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.411377807 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.907820769 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.99192973 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.944629988 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.922737041 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.309361184 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.147580583 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.956105053 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.90836487 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.900404049 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.994532279 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.906871242 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.900215993 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.916979279 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.905389397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.137144495 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.399002037 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.915220958 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.901083371 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.409811252 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.005771956 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.941614321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.910074016 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.139690771 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.916895236 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.900569921 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.901524665 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.937514508 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.904283215 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.899610583 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.248242363 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.914486524 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.918549924 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.905575836 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.901160799 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072911416 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.910366744 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.060866285 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.91012085 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.907314266 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.901270599 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.138554351 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917757225 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.400383726 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.913882703 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.901534898 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.995386902 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.066108126 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.438782785 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.914426289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072899617 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.324502046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.926464009 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.908965218 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.388513483 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.930767805 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.908921923 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.903210949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.903969537 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.901081183 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.946000491 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.91874283 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.335044695 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.405514704 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.270327788 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.929529262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.916910272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.902558514 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.250449836 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.911364654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.901793023 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.134491125 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.417388586 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.916737193 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.909325842 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.391393615 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.918111439 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.92109862 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.910204553 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142533171 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.918932093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.947981319 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.903423134 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.908935718 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.905654479 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.920918937 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.908760873 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.90311339 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.378502187 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.01670062 seconds)
  done (took 235.957688589 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.90004249 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.898052962 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.89596097 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.906719802 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.89706369 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.903868578 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.89641182 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.896743963 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.902162772 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.897612154 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.898827672 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.898984916 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.898688985 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.999242374 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.906321029 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.904164692 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.506147786 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.897817768 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.899569145 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.898222889 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.556626876 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.904663575 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.898985527 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.9025248 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.903803864 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.898764663 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.973983138 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.902794513 seconds)
  done (took 168.468387003 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.904152622 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.019733235 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.922978342 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.932656045 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.911976212 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.903800075 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.92866755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.918621232 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.909936949 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.903169232 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.904488104 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.966822315 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.914349273 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.004329438 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.934523611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935280125 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.006175045 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.911564491 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.903304809 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.90340632 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.933806189 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.898592045 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.967262128 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.03236548 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.920413314 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021673865 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.909029248 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.907007076 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.905149127 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025577287 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.920245641 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.966305133 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.933618861 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.922676841 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.029759777 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.019233273 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.009190379 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.934199199 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.909707416 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.903491435 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.905614376 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.895349896 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024225108 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.924004196 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.907626403 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.014742283 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.922915362 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.908634372 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.917015862 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.906614818 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.918094641 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.926051967 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.972409674 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.035785426 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.938952884 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.930849703 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.931533884 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.191263547 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913466535 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003824957 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.899711118 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.025207563 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.923668686 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.895741626 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.906523356 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.91247579 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.935054279 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.935310313 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.007861311 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.91319272 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.004919696 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.940415319 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.910732242 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.905027573 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.909641568 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.026643106 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.022324137 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.939888957 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.942808984 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.93562727 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.899876564 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.907598867 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.89711424 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.925015641 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.911533316 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02254843 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.021806773 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.914965984 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.910843081 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.910826922 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.911653733 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.933796883 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031959554 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.940759155 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003276912 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.976193029 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.982004399 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.922071609 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.920291275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.912460447 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.971116626 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.920515259 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.917256081 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.243541088 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975273607 seconds)
  done (took 206.402299466 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.35383747 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.959749929 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.96403467 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.230968022 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.335007262 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.688320023 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.951106129 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.958846111 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.982600181 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.145338922 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025955829 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.975060758 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.941663894 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.930453522 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.957316048 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.978361616 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.965681712 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.287737496 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080256382 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.04377572 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.936571393 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250335799 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.272763535 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.342665171 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.991714058 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.293273159 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632037024 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.09997546 seconds)
  done (took 62.409051896 seconds)
done (took 830.05757237 seconds)
SAVING RESULT...
DONE!
