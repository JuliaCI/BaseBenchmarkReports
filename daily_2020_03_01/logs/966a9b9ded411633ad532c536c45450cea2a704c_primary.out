cset: moving following pidspec: 8143
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.406560124 seconds)
loading group "string"... done (took 0.602220684 seconds)
loading group "linalg"... done (took 7.830762065 seconds)
loading group "parallel"... done (took 0.16782323 seconds)
loading group "find"... done (took 1.16825976 seconds)
loading group "tuple"... done (took 1.905402396 seconds)
loading group "dates"... done (took 1.310849263 seconds)
loading group "micro"... done (took 0.227547592 seconds)
loading group "io"... done (took 0.966637297 seconds)
loading group "scalar"... done (took 38.933297542 seconds)
loading group "sparse"... done (took 12.297644013 seconds)
loading group "broadcast"... done (took 0.991195989 seconds)
loading group "union"... done (took 12.692511502 seconds)
loading group "simd"... done (took 4.68346875 seconds)
loading group "random"... done (took 9.403559402 seconds)
loading group "problem"... done (took 1.852212022 seconds)
loading group "array"... done (took 21.684822293 seconds)
loading group "misc"... done (took 1.765436329 seconds)
loading group "sort"... done (took 3.431563614 seconds)
loading group "collection"... done (took 17.97528436 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.561867079 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134480712 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135791254 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127745746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157277443 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12250827 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134090152 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094164667 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.853996173 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160588977 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125388091 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429015428 seconds)
done (took 5.540127672 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182186886 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089390407 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090518721 seconds)
  done (took 1.324894504 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072734725 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132755138 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074104578 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074913479 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075138351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073767712 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074450233 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074192269 seconds)
  done (took 1.722956046 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080408986 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076888477 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073567207 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074957127 seconds)
  done (took 1.452313085 seconds)
done (took 5.909895617 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.806431151 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219303807 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195973392 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416230456 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136601667 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180514071 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647863027 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322453654 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196670849 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083594281 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11616034 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.350384056 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131495856 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642655783 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085171145 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097912251 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145607267 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420575073 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075187934 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089458632 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096562126 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136500639 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.095523828 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081876589 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153847181 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075213869 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142886203 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086995852 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.073935494 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226472652 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179725011 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673744464 seconds)
  done (took 10.567637786 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106589043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106760641 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07610596 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132859091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106329496 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076537481 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082646432 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074661152 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097418584 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.140100577 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.099638417 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.11044552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072796075 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076041271 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092428059 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211981862 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088241323 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08924759 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077845555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086233308 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115022658 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085136851 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087360875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087512492 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136242508 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186920098 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105286062 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.1049428 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074740559 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089794463 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122465058 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.138267662 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073685491 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074437433 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134386041 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10164395 seconds)
  done (took 4.905286629 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.01794024 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150594057 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097465941 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.120786191 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141222092 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072523593 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115287282 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.075842934 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088524566 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217114534 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.36231353 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628707711 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1190489 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.072221434 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111921279 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075069734 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075271306 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074033643 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.536034146 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103838267 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113555836 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088741993 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077628328 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075786565 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364997733 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074084532 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071150877 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075401503 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064005014 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129237178 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076020335 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.063509751 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.076661816 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16669665 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.20204312 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073126414 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108535412 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096801105 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.146804538 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075951567 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071719713 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160582761 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07283403 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077526989 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073678152 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09090645 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109970671 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122908316 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072668186 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073031227 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171569966 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07274053 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086868 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.107121388 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161041579 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08574964 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072537319 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283893219 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097241482 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077527337 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.072584451 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187040411 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129245745 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074473009 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073779493 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075950393 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076177778 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38240947 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074956622 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.890327261 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07770698 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083732817 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076477466 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076511575 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080235703 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079697854 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095865247 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0735115 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081369792 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073926741 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073513695 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076083586 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089124273 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.399602196 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073611126 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074296556 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.175370587 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097893513 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103330688 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073772968 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072621443 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10660023 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075158133 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073447923 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119718953 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073307768 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089819314 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077121239 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119809165 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073385785 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100026981 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073702259 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10254634 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077300633 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110338838 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.086498285 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076240918 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.44696027 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07644654 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073040972 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074687057 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073213725 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074289164 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073834105 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0861307 seconds)
  done (took 22.479176948 seconds)
done (took 40.11609184 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.262169749 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082693233 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080148113 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080127711 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07977561 seconds)
  done (took 1.823796867 seconds)
done (took 3.045914754 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13126174 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107591159 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072467984 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104522575 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071915359 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108978076 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108530738 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085267314 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108043206 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07152093 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105390017 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072229304 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071650881 seconds)
  done (took 2.460275214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091812911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091953945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077496287 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091145262 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071153064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091705326 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089746158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096801136 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089709328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080252521 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070973051 seconds)
  done (took 2.157408886 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090356207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091888375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077267349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090544706 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070774482 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090441401 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092167225 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09397297 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090240063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081501862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071178859 seconds)
  done (took 2.151563248 seconds)
done (took 7.979158211 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.0850727 seconds)
  done (took 1.288104475 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.577360556 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.905008646 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089193086 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116658868 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200629707 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122541687 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26490241 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094018112 seconds)
  done (took 8.753389653 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111886039 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079556984 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079972234 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075349919 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075747818 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077940088 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078702122 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076657959 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07797338 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076991923 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076046809 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076702735 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07866567 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076190022 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07772397 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07535972 seconds)
  done (took 2.546631881 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099148867 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098896132 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080763987 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.082058209 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079758297 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078687985 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081339007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079964018 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077352365 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079337415 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081263757 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080869925 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078295911 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071963867 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081142997 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082110165 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077400485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080428723 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081384094 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083005687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08165897 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071340846 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078839251 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080410671 seconds)
  done (took 3.257463839 seconds)
done (took 17.057307817 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11304564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074784046 seconds)
  done (took 1.39837194 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087476601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088826133 seconds)
  done (took 1.39454442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088390943 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07222418 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.095210793 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084319646 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073411739 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07321603 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093404459 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073785354 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07273057 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073432563 seconds)
  done (took 2.018418901 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074413224 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.083692727 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.077461365 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.087787561 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080221738 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070864837 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078552514 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.075528635 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083742746 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06974133 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077766118 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.089436321 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077593409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090914934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078632236 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075405828 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077357939 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074840713 seconds)
  done (took 2.645829969 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072375042 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073407441 seconds)
  done (took 1.371376098 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072827579 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070465587 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073902624 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073790722 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07029664 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069383822 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07082003 seconds)
  done (took 1.722972654 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393678003 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125455234 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327509782 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07909716 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089120072 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.271036151 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073556512 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078574715 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078270003 seconds)
  done (took 2.782317776 seconds)
done (took 14.558745327 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.087419797 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09458974 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.1048832 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385861161 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098669406 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0741268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120158348 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192239862 seconds)
done (took 2.391395745 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220810644 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.699167948 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.444736131 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218982487 seconds)
  done (took 2.591175467 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358083551 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095822901 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066280838 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074541235 seconds)
  done (took 1.829989728 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073260539 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076848361 seconds)
  done (took 1.384317179 seconds)
done (took 7.260566171 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091858488 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074226025 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072999303 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073481995 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070753011 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.071257615 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074394771 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.070475001 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070858683 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073362701 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073066586 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.073481543 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073284064 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07336022 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070602436 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070474452 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07289998 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070999586 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070735123 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183874246 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073022465 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070393595 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07174048 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073371859 seconds)
  done (took 3.133688504 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091757457 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073669994 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079146028 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078306695 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077116761 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078512089 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079223537 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073058443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078284624 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075193136 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076792482 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076518333 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075532915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07655876 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075045629 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077155177 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078764529 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072797096 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075547133 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.076780364 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078226483 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073244124 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077335165 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07777699 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.076358816 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07638774 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075479282 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073090893 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078479052 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.076398765 seconds)
  done (took 3.552529662 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077177928 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070755708 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071132776 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078552013 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.070526922 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071217191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07072885 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071053876 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.071128176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07073141 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07213356 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070623379 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070719533 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071166718 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071070438 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074199036 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086691153 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070789772 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070332928 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071161201 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074874603 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072969058 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.071264698 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070656803 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070232069 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070418695 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07071013 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070611272 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071361538 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070661408 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073861358 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074205553 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070127645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078229817 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074537417 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070063695 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.076212996 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070105389 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07121786 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069921286 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070091892 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070235172 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070364576 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078031123 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070901793 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0720378 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070609932 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07179205 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.071282017 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073095365 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070505198 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070474656 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072745899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072331813 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074943466 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071611895 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071961988 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070442659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071428378 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070619922 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070511812 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070964662 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073412308 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071618486 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086006809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078423362 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070993472 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071725388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072095065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073984699 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072282211 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085470089 seconds)
  done (took 6.472715246 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0948969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09394222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072993016 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072501333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068852588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07098083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076641214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070955207 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072616114 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089206667 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071577469 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072760544 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072478333 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074660769 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072109234 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072226018 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078856231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069116276 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070898804 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074700472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071510976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076563212 seconds)
  done (took 2.917160164 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159685222 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076979187 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112319715 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081734544 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076565574 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081170154 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076357875 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077184776 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077246955 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07456467 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074434525 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077095141 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07664348 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074180606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074240834 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074472277 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076576507 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074420336 seconds)
  done (took 2.746582758 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083251886 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072791345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094573415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073623412 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072511078 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075587138 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077262304 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08057813 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075162105 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073544619 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080369684 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076200534 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075226836 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072882509 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075545268 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073073624 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075255906 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073031863 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080329196 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076614471 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076815585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080746447 seconds)
  done (took 2.946468315 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086308346 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075558946 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088286214 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076010879 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068615517 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071193795 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076964328 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.072703903 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076976697 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074612732 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072854457 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071421969 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075418468 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072613827 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075267081 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072394494 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075803871 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072678944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074404257 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068741951 seconds)
  done (took 2.752552973 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09304334 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075013561 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075466922 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081772519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074377245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076249998 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081473431 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074899228 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074844646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095622702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075548841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075606091 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081167172 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078674826 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077562028 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081074323 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081187268 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081260024 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074572333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074831332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095414898 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075821137 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081714813 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074923987 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074789211 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074686578 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07532281 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078649246 seconds)
  done (took 3.473743944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07348278 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072734875 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07092546 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070557803 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070671503 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070737646 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.070357359 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.070853205 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073165507 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070673959 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073514522 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073817206 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072969523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.073255361 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072868988 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073169922 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073509508 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070584279 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070710456 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070727968 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072931184 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073113588 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072715698 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07045961 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070518355 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073456232 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070831478 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070376986 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073454925 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070744371 seconds)
  done (took 3.41528027 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082415088 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079928566 seconds)
  done (took 1.420680679 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070128906 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08664497 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.070362155 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077415965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07611074 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074246745 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079825733 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076069585 seconds)
  done (took 1.865312353 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088733692 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.084409964 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074644994 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085467921 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084010006 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090740279 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144055664 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073811467 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079515812 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071530987 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087261943 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072711879 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080267565 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073745355 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079681019 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080753972 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.071521488 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079236923 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075076692 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071624889 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073995365 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082012528 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076211929 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068893117 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074462775 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095870971 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084721594 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072135941 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07649772 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081464338 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07883371 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067487097 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073638657 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073969827 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071308709 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083213012 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087575872 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076348356 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082062894 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073941504 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08242964 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06877117 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077802003 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079902643 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084525506 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07431258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073679873 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069060112 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071176775 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077793363 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068260178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074042054 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068102399 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080292294 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077199822 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0840696 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072195066 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075407865 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076206466 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076877674 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.080236478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075813658 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076659331 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07336623 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083900914 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.078296468 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082066861 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068509177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067780895 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071597695 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083061246 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09770597 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079357915 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073835927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074800077 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071819799 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07632105 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074209303 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078993854 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079756782 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073136501 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078341925 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08092094 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074152758 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.075974444 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080235318 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071857075 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075500177 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071258767 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088703475 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072920014 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071256811 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071220233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.085891667 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076435924 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07227596 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071044247 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080143459 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066917228 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.07241709 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072703623 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073524112 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082605699 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076591131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077068379 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080585901 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079963767 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072715237 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07501035 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069189275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.198496402 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073332016 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081760477 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068218139 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077153076 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076244998 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074639129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.082892924 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0726336 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073984887 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081593122 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079781852 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07203291 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071120324 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077030083 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074093429 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076409493 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08210011 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072741363 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069804282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0685332 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.077543872 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073195853 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077802736 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078762954 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076269837 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06832685 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071481097 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079237252 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082704868 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074053795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075327598 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080991073 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.076040397 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073035178 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080221808 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076517857 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07328397 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079761312 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07499597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069136875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076152008 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076095341 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072334134 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078313519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076453412 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.0760143 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073937999 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072958748 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080255082 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074071098 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072816487 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074838227 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072607468 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084043935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075605766 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068992452 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070421949 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081160654 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071758162 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07297361 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073329215 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076470857 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07399511 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071991279 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.073217561 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076879823 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082714281 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076655686 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074503189 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078615164 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085306968 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.074188811 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076352076 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.073672052 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074835611 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.074094726 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083140308 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079249958 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078296817 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076509627 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.071332392 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07921531 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081514808 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073350425 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071324356 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073386742 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077633045 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079206155 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07756552 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073912676 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071812529 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074188319 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075642642 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075617356 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073171934 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072384918 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.079310313 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.071162716 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078617295 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072991486 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082518772 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07578679 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066984402 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074242074 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070753104 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078500779 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06839126 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070983614 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071592124 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072639096 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071772711 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074548538 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06657021 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.208159746 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082441806 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074719524 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073229649 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074661393 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08068416 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076519865 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077419546 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077516741 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0805271 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084272171 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07306945 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076998269 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084006399 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074275002 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067927049 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08175219 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072941102 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.073160878 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073303661 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.072353792 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077547977 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081598241 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080921424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068312901 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077143101 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072076064 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073570609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.069165421 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078979895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.078242477 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074484497 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080326865 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07455644 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073896251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077928376 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073742836 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074796435 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074754475 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076670663 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074032565 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075503048 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073715068 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077647332 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073250458 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071606272 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075857665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074422862 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073901626 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078815192 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074164879 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074324445 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076097169 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07390521 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075311083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074310317 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072952197 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076812243 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074456254 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074469426 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07569815 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068773886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080698443 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072989328 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081076807 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074473609 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070176188 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079545763 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076560521 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078692921 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07420649 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073778875 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075896494 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072847616 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076669079 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081256015 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.071857399 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084078801 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080581778 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074542353 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076745216 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.074934424 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075251516 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073134135 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075305705 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073729432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074655787 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.073816683 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078329883 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076532103 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074081056 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075371059 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074172706 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07451208 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074381386 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067494359 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072735465 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073086881 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072727626 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083097733 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073746722 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072943384 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072848528 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073780282 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.07279138 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070090254 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079365756 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080123986 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072946597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078746882 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07217605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07404642 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082672643 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067005617 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070967164 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07049893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.202579948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082483166 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.074877888 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085059416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07450127 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074387361 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.072046224 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07450063 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072723709 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068093675 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.072239502 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077721688 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073721229 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073072435 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073506501 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076781651 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075313058 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083109168 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073659895 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075809324 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073751516 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07168398 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073437001 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073844755 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076697027 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074777097 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072245612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072236664 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073173469 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075111944 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076528233 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073515082 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07576984 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081276913 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073595444 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077143087 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076011742 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.069433461 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076655224 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073669241 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073480166 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073025971 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077191923 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076957071 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074204894 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082517918 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073999725 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077747691 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0739155 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071251514 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073013049 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073234896 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07352481 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073326057 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074942308 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082106112 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071475541 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076983516 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074314961 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074343403 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080436317 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074069961 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.076716045 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079463327 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075069831 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075610644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082515075 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077828671 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078114011 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074420909 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075599456 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079077599 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073206232 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080024456 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073932672 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073854129 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0754921 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072766508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073087029 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073247501 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073229882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079902337 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073927817 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.072781243 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073096407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071829152 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.074489852 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07562292 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081376947 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075907023 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077517846 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068581226 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070877991 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073959563 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.072025723 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074578887 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076070288 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079059478 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075355163 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073835382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072564377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082491518 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078900572 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076663243 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071836578 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076667965 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.075282593 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075698588 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07380337 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072773354 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073970109 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076310877 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074279639 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072762347 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078799399 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075993487 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073329627 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.205606631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.076667324 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.075330939 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070142832 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074436599 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.076928373 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078989196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.076543085 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074401656 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085555644 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.072181985 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074832177 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076214773 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072942851 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078514444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069085901 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.075848766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075241529 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074765426 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068808918 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0747272 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.072644344 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076342598 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07317178 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068850336 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084528831 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083457663 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07671248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073478409 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071898051 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069425453 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.069340829 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072769992 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074734582 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075630591 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08427221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.073904808 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.074049333 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068523978 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073365631 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076918795 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077246863 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070365063 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068936429 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073375387 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077045838 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079213068 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072386117 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073503087 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076387687 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07598358 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.07174529 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077532302 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070100574 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077211985 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086381638 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073479677 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075587935 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079666724 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080446448 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073742156 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068786571 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073921375 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077097935 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074578062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074804867 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.075134721 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088312068 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077134659 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072896786 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072559112 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076045734 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073404576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081921692 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074529221 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073900925 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07816159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.078039818 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081056828 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077014807 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080889677 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07687488 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076963838 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072940146 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074761825 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072040597 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073236701 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074181964 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.074042443 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077817627 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08117053 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07316837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085042491 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08265667 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07555178 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070341925 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07271851 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073314823 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068332491 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073571068 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071086913 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.072162939 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071762609 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072766284 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074198989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078037034 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074310363 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073438468 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072734357 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.066712038 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075605098 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074302949 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073212069 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069395092 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072722004 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072903967 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076324046 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.207352366 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072912971 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07612316 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076585602 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074801681 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069221809 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.081296663 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073547893 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076626215 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0735067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074038537 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074175561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077389705 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077830731 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075129696 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076159043 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077234245 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076458675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.070721156 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070561784 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079899222 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072132121 seconds)
  done (took 47.025338863 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105937936 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070754481 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068173906 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068924777 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078607411 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069490244 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069259895 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07008771 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07039896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071615098 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068891033 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068807824 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077031492 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083686953 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079387207 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073092846 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069087993 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069554304 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069074672 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069569396 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076173354 seconds)
  done (took 2.892828597 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079264876 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08476021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082377371 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087690084 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077005678 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076520739 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081617399 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076416728 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083927386 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078996372 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083974498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076589109 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078762644 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078987186 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078777023 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076748008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083910743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077210885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076269466 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081541183 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076715901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081644334 seconds)
  done (took 3.09654611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074128125 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073148467 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074229634 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067974324 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072625294 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067871073 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075827 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070856127 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075447629 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072083751 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072505926 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072228357 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074882296 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068184193 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073671865 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07048145 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113926496 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075660721 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073017724 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073525304 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068122347 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074703517 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068518566 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068649114 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072143774 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076571666 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073530377 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.071190221 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072578826 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.072645567 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072889608 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070446301 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074233982 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072870579 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071935848 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072483588 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07215039 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.072762186 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06831428 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.07104775 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073481039 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.070926558 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073417911 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07428329 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070879862 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070603594 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074379866 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072633941 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.067902214 seconds)
  done (took 4.919515432 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084455997 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115645873 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074645206 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096195704 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086368243 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078769248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076491653 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096847883 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.07069944 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070783631 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087481069 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086088691 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071961281 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076384356 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078947839 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072178573 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073186064 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071264016 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07556771 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071292439 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075547307 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079302302 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086270801 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08450781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075519242 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070957691 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071406771 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076151598 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084524302 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076267527 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076326373 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076822201 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086789165 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.078166944 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071439403 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074416947 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087978657 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07252227 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074875101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070116789 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074334793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07656268 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079667652 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087640881 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072319471 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078074462 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071692777 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070089295 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084685798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074549221 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079324118 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086228849 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076154477 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072091735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076343804 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086186311 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072117416 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.07044964 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074735464 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08417739 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.069871871 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075531199 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08539098 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074238027 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079267832 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0855072 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077775348 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076181584 seconds)
  done (took 6.817097566 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082548988 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102454457 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089554136 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088857176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082252002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08209066 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08193257 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082508824 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089984393 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086024971 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081942687 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121734317 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077942597 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084462295 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08266856 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08228713 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0822382 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081930638 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081763394 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081901906 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082190153 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088292384 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083225651 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088384879 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085597278 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077825501 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081910036 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08240876 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088663429 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081889055 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085629728 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08199276 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08213644 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088427941 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085239196 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082174229 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072049171 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082088484 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.081965013 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082204687 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077645199 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088944954 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08221901 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078744681 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082197677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081685934 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08894678 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08542797 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083932676 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086057544 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082697411 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088288056 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081571497 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082172025 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088309256 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090817573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088916806 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088498325 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081859882 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088701987 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088628394 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090839974 seconds)
  done (took 6.630937857 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088381989 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080198365 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088187743 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068321641 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071095744 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078358377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071413778 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07110473 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079922485 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.082485126 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081847611 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077993164 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081804583 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081893203 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078296308 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080649442 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078093574 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077936432 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080293153 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078302933 seconds)
  done (took 2.939004672 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081254922 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089928352 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074043109 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078126762 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076187114 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077842126 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075386361 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07635986 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073975188 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076369835 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082241045 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082485013 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073944258 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07857477 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081927371 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077924881 seconds)
  done (took 2.611537958 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091390157 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080493187 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087017838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073221526 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073516477 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068949245 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072223095 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068134499 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069306239 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084762667 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072236673 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08317907 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072674965 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071933034 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069336864 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078205612 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.069613581 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070072336 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.072045666 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085038597 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077023836 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070982875 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076176004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072771517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075727669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077010887 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071337508 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072933582 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069736829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.073015841 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075521734 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075895095 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069597182 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070251495 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071775421 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069966398 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072903402 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072799858 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077921832 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0730023 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071273909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.074645646 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072814252 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07358077 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069167278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072970003 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068945649 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074687721 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.07017341 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075505077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072395394 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.074929932 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073231382 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079112909 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075362821 seconds)
  done (took 5.435867282 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08573176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07698682 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069451074 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070790703 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076449589 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074210838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076119907 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074267844 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073895923 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07134464 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074348103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075643656 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073796366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076270575 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074026965 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076389428 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069262694 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074966121 seconds)
  done (took 2.712215487 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07818808 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073510988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079920336 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07329528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072336637 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075559946 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068805018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071328756 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071939237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073424766 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072907178 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075377466 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071391445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07511772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072944795 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072920131 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075416586 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071888708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073110927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068862434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075242445 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072267278 seconds)
  done (took 2.9769895 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100911681 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090376984 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.148183105 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086085107 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.092483962 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078343996 seconds)
  done (took 1.959383 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098236412 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10711905 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072987816 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076207352 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081899076 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076558047 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076448419 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076540423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083888669 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081630905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076577779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084414473 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083915956 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083580786 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081901107 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08225902 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076659614 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079028669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073482661 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088910764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076498617 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084388939 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076686084 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076343759 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076405122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083718906 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084224515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081686411 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076867753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08406665 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082020217 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076579042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084415135 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082604461 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076246412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084053375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07670259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08988377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081714063 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083997856 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075897139 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082015765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08455421 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080905526 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084445085 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077136356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080751814 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076532671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07680244 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091547048 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082785757 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083353975 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082113538 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084473323 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084550862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091187656 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082010852 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083679515 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082559251 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082487804 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083598402 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082275641 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083354118 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082346298 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082077003 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083695646 seconds)
  done (took 6.773988466 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110048054 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074650438 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076952002 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082002579 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083644736 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077028095 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077338712 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076618572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076858047 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074045868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114160895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077527862 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084125323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082957645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077107096 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077041476 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076460048 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083628521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074313495 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090438399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077577598 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083138723 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083252384 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083558233 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081864063 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081857478 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076773072 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077058614 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076763568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076733433 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080615878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077378478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083135619 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073733402 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083276157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076930674 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077047188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080885388 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07689563 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082148697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083673112 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089406866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077405056 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076628333 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082514516 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076845627 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076541875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07365292 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076688163 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073755978 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082654314 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081752972 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082304258 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083132467 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076818668 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07715942 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077454428 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076811192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076777329 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081863648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08316255 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076764905 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091399134 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076985724 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076879908 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083360913 seconds)
  done (took 6.691451686 seconds)
done (took 139.416630463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20067251 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176681163 seconds)
  done (took 1.734131633 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076049185 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105166175 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083665474 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136226706 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073526134 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107672653 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105961654 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085907217 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.073434389 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073275538 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073669107 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0759233 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138194828 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073350103 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073862255 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076767214 seconds)
  done (took 2.804630147 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105793222 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169636957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110397714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072814886 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105894087 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079337575 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072521161 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082723994 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077669604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072839231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079647646 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076767443 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07195975 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077337856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080181945 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078766319 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072124161 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079274111 seconds)
  done (took 2.938748106 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105937153 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097942436 seconds)
  done (took 1.57972932 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160337219 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139498342 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209031832 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353018725 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164023679 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153367945 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.1495336 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148551181 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122149101 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.14373237 seconds)
  done (took 3.114872753 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106743562 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160819731 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277068054 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124899798 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079985578 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09991159 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126737781 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08536925 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087060529 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086594251 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086529303 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083923064 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107463867 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079405977 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081439228 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082899847 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110457721 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080819141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0818904 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081983256 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107898699 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073399688 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079751765 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.080279894 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083942369 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084045671 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0734948 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072925609 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082236937 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.081821254 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083094071 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097998592 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084172744 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111045792 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078208605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112143857 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083365809 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080403755 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082090834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080003249 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.084355832 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084458207 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08105722 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08351856 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072933514 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.083975499 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073949487 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.073782804 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084147444 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.074103446 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084069205 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083441494 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111891531 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073602927 seconds)
  done (took 6.372615743 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110737489 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113929828 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078643903 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118875524 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109294229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07745636 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.11046376 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103842301 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11189972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076738351 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074914602 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076768985 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086182358 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08745789 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121911185 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113374077 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078999722 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075606073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114465456 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112651221 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076131418 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106556151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100129936 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110830767 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07405758 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076984012 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074799764 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076520409 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083428488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084340755 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075167538 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085991199 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090070592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084053587 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074985839 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074900391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075222648 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085075916 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085468786 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085016244 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083409473 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074990904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075512137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076115861 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075665678 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07460953 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08405507 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.085629521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084755418 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075343869 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077448804 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075214793 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076717847 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085307455 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082805721 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08605954 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085438539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075248741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075034084 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078200664 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086277985 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085164448 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085416032 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076668861 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086040735 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075714519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086852996 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089307713 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075774583 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076741973 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075338051 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075614749 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.078599271 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083874076 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084368108 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076615661 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075075923 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075465835 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085368912 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084046351 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075015208 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082626123 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07389953 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074565751 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076854835 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07656113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083241291 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085209873 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076832938 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075116683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074677636 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074207586 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073534234 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.081214935 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083915796 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083241718 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082838456 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074979868 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083022259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.213449969 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077989314 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086589518 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076954448 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077793752 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076827472 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085413103 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08449654 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085804405 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075195459 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07615212 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085273526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087536415 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075987481 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083810295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085739213 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085263272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07426621 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087326962 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075880965 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085372852 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076241575 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086230715 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075418887 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085121011 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075520265 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074565596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075442866 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085325821 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077028927 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075740249 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076547288 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076107224 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.087376152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087922316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07695363 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084417192 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084267656 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076373641 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085016842 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075595593 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085305609 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075663704 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076244841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074519594 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087163706 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075648172 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075994797 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075022751 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086076602 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075971381 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086591707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083285333 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074893517 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087268364 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086715021 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08385591 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086000976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077618476 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074682672 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075513622 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075095618 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084103098 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085447795 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077051968 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074958395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083673446 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085495384 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074064935 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084488757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08378816 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084283431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075640754 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075646365 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086583806 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086024487 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084386285 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084335848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08400828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075345642 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083585307 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084240956 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075334745 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089712337 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075324103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088050226 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083639031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082332539 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084112082 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085119867 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08492457 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085221202 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087209395 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073663201 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074069182 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083137173 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074046438 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073896885 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081729521 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074981073 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076219159 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086166163 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.207957172 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.087060285 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075348651 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085864788 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07584789 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077375808 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089816628 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075801279 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077273021 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08491156 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0755583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084417711 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086842902 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084806982 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077086048 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07673726 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085600659 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085392663 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078272988 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076582526 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076800909 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083935816 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084256587 seconds)
  done (took 20.102513324 seconds)
done (took 40.030302713 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211170934 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156261236 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176559021 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121617515 seconds)
  done (took 2.142425211 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120218364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106009519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098150487 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071906319 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103870837 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072627353 seconds)
  done (took 1.990237326 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300373732 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206323715 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185259705 seconds)
  done (took 2.1041822 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209998669 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194429566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.453134438 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.277256775 seconds)
  done (took 2.656096965 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148945148 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093106537 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074466294 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092014762 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135519769 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162853738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104057004 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129182465 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.0861331 seconds)
  done (took 2.491257891 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149793495 seconds)
done (took 12.951690781 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105454339 seconds)
    (2/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.271568488 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111949352 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090696872 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136022503 seconds)
    (6/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.17245384 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.120880075 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.195637436 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090192389 seconds)
    (10/309) benchmarking ("sort", Float32, false)...
    done (took 0.140893134 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.142045466 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.252469585 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.201487557 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.199932296 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.085671581 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081783753 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210897756 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.207794971 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.122528723 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097057857 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170130554 seconds)
    (22/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099861621 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099727341 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.170104735 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206366571 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104912101 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.188874804 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.081903638 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.236271733 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097445075 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.183885908 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.301306109 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09676951 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077811726 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.079781612 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.083192483 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08979438 seconds)
    (38/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.163172336 seconds)
    (39/309) benchmarking ("sort", Float64, false)...
    done (took 0.139083907 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094947749 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080810594 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079461782 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161454231 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110042919 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103093943 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164020239 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081345299 seconds)
    (48/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083024183 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.168269084 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.227425004 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190072397 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.081089693 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08052338 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079848446 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084084072 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072797115 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081102299 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201618531 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060005655 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158746191 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184231598 seconds)
    (62/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111003235 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072424886 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.211571984 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074216826 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077919748 seconds)
    (67/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.174334607 seconds)
    (68/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.170801309 seconds)
    (69/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121419919 seconds)
    (70/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.070493633 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080310881 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058798417 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098150593 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083806547 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070304738 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096695152 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188249075 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.165947441 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071994423 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078229325 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.220276781 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.083182582 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.059346912 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05857619 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.191170593 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080812556 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058912528 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.122426513 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059948209 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.074208639 seconds)
    (91/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086374052 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098795019 seconds)
    (93/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08825244 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.07324806 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.126964125 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192877988 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059010703 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080224825 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080664973 seconds)
    (100/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.058317126 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061195462 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060214228 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077060456 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141968183 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084195917 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156446229 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.072226694 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.0962255 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057720647 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.174468256 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103565447 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.095230336 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07416061 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162570414 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059536222 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080283829 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078692469 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.119891823 seconds)
    (119/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069682754 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071503621 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083213443 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.177174276 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073364699 seconds)
    (124/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161719602 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153382807 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.070952485 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.154622682 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119125196 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057810705 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.1527066 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.147844112 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080421057 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099557781 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.070492749 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061260568 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079823902 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201817885 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099930666 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057309634 seconds)
    (140/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.154553806 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.078656825 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091802381 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058870033 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133220572 seconds)
    (145/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080947313 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074783907 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107259093 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.079692803 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161919381 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.084656306 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.079953949 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096595091 seconds)
    (153/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.070790905 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084207052 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186417395 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072327669 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.080739378 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058845801 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.188540628 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057828783 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058097476 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081587798 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081966469 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.149397753 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059375538 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095980239 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077135684 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.152580302 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095148835 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072031004 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.107955209 seconds)
    (172/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059242731 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087583397 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073960614 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095996505 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.075479877 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107614019 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100353877 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057697063 seconds)
    (180/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07685443 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05761057 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194577351 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079114816 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082086925 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080731585 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05754846 seconds)
    (187/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058847309 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071709708 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074080913 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078461339 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056812666 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187573523 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080367026 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210257739 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056992001 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058536699 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.106396417 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071359538 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074143232 seconds)
    (200/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058110204 seconds)
    (201/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077166083 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072165543 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099623639 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07101292 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069790548 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084290858 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079451812 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056644435 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073029001 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.158390939 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069313829 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145109348 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082947026 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.189220649 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135676234 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056629492 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071114432 seconds)
    (218/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.086998308 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056988947 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078831169 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067557137 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080610098 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153534155 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071198865 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.081665061 seconds)
    (226/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078534294 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05670037 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095556908 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119603366 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069934762 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073425944 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117976466 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076547653 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176658192 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058400831 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070269071 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057407187 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076706542 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07168909 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067307134 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078343801 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068627561 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056567331 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080472368 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058290692 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145101378 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074109795 seconds)
    (248/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081876635 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084076628 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056765593 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093879847 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056315561 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.056878098 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070260049 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085285635 seconds)
    (256/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057337969 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070963402 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069771767 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056742181 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097315363 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07916076 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118897878 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057246219 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057374384 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077472674 seconds)
    (266/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075038002 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134540343 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09014215 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057096246 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079357436 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071316703 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069886845 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107577287 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077683621 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057073859 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094672517 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071175011 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071004149 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098719237 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09233267 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071750073 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070620681 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083075655 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078688371 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071697262 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068877304 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094695241 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130885677 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069435541 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08055125 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077919316 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070658672 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093962949 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056687654 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138895711 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071536954 seconds)
    (297/309) benchmarking ("sort", Int8, false)...
    done (took 0.143860293 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077080715 seconds)
    (299/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057149078 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071679488 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069670424 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070304506 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071960376 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145622244 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075839625 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.058146394 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075766259 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.327017969 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075530432 seconds)
  done (took 33.226491382 seconds)
done (took 34.65396913 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092598751 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10315468 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.085432499 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.104712587 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.091023846 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086358421 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08482803 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.089344798 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.091261154 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.093415377 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088371714 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064828253 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.085896734 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08559207 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.086300456 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102274363 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.091085371 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.083520012 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083532167 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.074796194 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.083932328 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.076370034 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.077660879 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063697197 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.089829212 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.082147029 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.082345885 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.084186537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07543016 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.075564749 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079652683 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.084552442 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.075101105 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08907421 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.083367952 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.083723294 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.084748478 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.087731644 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.077510117 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.075326865 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.084540051 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.075152786 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.082952963 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.083665243 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083112229 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.081215194 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082819537 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086990457 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100453457 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077125175 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.084843453 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.085366445 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.085448286 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.082709992 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.079048445 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082835248 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079706387 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099788341 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.083282276 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076792774 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083532919 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.083919609 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080014443 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.082234086 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.082826414 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084136841 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.084222678 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080106805 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.083058292 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080886826 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073966929 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080961532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077727803 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073773206 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084907458 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086732339 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.072520741 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080879317 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081475437 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080529397 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073994498 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076377829 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.076248792 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.081155661 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075947253 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064689108 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078663752 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0809407 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.073052195 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082244778 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080513542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.080588049 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075731433 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084197277 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072841893 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078687474 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073676384 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07459684 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075201555 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078290847 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073317567 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075612234 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083561461 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075154137 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080570915 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086351953 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073038906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080362312 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072154414 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072241226 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086768172 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082615767 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073143495 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075371721 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072084795 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080518985 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072465341 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072841937 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.073611608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.073129164 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079677745 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073381559 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075401356 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080481294 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.221923362 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074528375 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.078471758 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076947554 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073850344 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080608975 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073695337 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074400903 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075717578 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.070692596 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.076002267 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074078515 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080506228 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075769397 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081885078 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075359023 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08156796 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078552058 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.080665119 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07911833 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072648406 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067599 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075559344 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07598631 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075555178 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073160814 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07523975 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07322069 seconds)
done (took 13.91196851 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073864355 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144883939 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102994261 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102719559 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091846909 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074547132 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082863848 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105798571 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07574735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107882891 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095499706 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.093799247 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120480271 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072794977 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074047188 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077793345 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07502748 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088987912 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106485697 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095042297 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120586687 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07312752 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099236542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096662935 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094870672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100477305 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.074777642 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077866997 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0776978 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108549207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097294149 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078064772 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074630716 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105139837 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100584381 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090521431 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074497877 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091076151 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074952172 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.073696982 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.076372007 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105764532 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087341763 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087645517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078521795 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085313355 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075030929 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089883413 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096900331 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085819494 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092761068 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106902183 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076828375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091683687 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.072847215 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093361415 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084253354 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07666352 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074491612 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082222102 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.07393505 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077507388 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088173306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087373684 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078941738 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.091443654 seconds)
  done (took 7.407843376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091048136 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100299816 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090949811 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092076112 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073746922 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074245422 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.075067828 seconds)
  done (took 2.173294891 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074875835 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096326199 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097287849 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09871767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089551124 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096007563 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085999136 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074490949 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096263294 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075304196 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096067928 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108313406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.077590972 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081708567 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098800095 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074362984 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.099266661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07426053 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077617702 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.098734923 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077327914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10394334 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077932826 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07492631 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088875063 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.075387422 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122790735 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07890133 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076328835 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.078308443 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072141414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.115651474 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088581244 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081815137 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075339507 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089235848 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089132513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073223815 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091171518 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083498297 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088633961 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075115123 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075883432 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07243992 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078668168 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.085104129 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07546687 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075294359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077123588 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094449255 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.075950123 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088015283 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077723462 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080404481 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076356927 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080744381 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085864196 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076310576 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09458949 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076156548 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091858969 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090631097 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.089043442 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091057555 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076316391 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08904561 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089057368 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077282937 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076500343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078159812 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090761808 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073041229 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.075799723 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08604921 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076725714 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097644847 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097699975 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076909289 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08819261 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075241189 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075254505 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.075571897 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097615023 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079567557 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074515401 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078637108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077954679 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073454375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073671657 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079105465 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.07259977 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.076405245 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077993207 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077615463 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077226256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091085482 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077842162 seconds)
  done (took 9.68307965 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075882001 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076110481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077723446 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076457237 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075953877 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.075055128 seconds)
  done (took 2.054965039 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100958257 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075885071 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088177869 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.079531814 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11323737 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094764094 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095380447 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085128514 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090916194 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086502837 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.094858042 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095746364 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100157467 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.079915769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094616452 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079085445 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095464096 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081507153 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086105155 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080171793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092606978 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080061951 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080289166 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089058951 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083921746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079355207 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.085588222 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086417705 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086241323 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085211885 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079695231 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083596713 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078626249 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085688691 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094945623 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078657967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079251944 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084659444 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079350613 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083461456 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095982832 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080116506 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081806367 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085006884 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.084833662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078345581 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084902162 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086810487 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094226193 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084801953 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087560576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078699251 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083763614 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084779652 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078233544 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084990315 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084926106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094811373 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079447158 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078134831 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075608577 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083234416 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084743238 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083603507 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085425942 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084841562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077963333 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0797467 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080076802 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078801774 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084397857 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075980705 seconds)
  done (took 7.718381075 seconds)
done (took 30.60189655 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541869751 seconds)
  done (took 2.10678913 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634249158 seconds)
  done (took 2.224097114 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.572782328 seconds)
  done (took 8.158695337 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394098323 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.495668648 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742969867 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14108096 seconds)
  done (took 3.40236472 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.738334589 seconds)
  done (took 2.335029425 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232034581 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221890039 seconds)
  done (took 2.058491661 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387343306 seconds)
  done (took 1.975934395 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.178887791 seconds)
  done (took 2.768222751 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255892708 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185322605 seconds)
  done (took 2.035141029 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.497770678 seconds)
  done (took 2.089386782 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.930933751 seconds)
  done (took 6.525038979 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225210799 seconds)
  done (took 1.868965045 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245528988 seconds)
  done (took 1.840373219 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.772546782 seconds)
  done (took 3.369139396 seconds)
done (took 44.350683891 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.090876139 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093735288 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092986875 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.089356059 seconds)
  done (took 1.948626293 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084467159 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.080161864 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.084205657 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.080369932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084794277 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080142598 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082166887 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082749679 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079872501 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080618025 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080292617 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080510264 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082540818 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.081967593 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078779129 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083604747 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083230718 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080446303 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084025528 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080408298 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078492277 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082526531 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082474885 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079503959 seconds)
  done (took 3.555569764 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085607714 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081023519 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083110327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080531041 seconds)
  done (took 1.934861351 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085539822 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.10041867 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097203722 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086353715 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100314596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094413546 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076948308 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076333043 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07822683 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08521996 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075731882 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104180384 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096507198 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085985041 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088190906 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073395471 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075898659 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095462828 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086256893 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08611565 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078613517 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085666216 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076087782 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096196474 seconds)
  done (took 3.684408305 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094352803 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109325388 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088611605 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09680333 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099198753 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072981461 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09521902 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09881568 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134884369 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072493811 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078485288 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.073076618 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080663791 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0730707 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088873793 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115956663 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.120586769 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076295321 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105504828 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073215711 seconds)
  done (took 3.45740634 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079883647 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077661421 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076883436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073481201 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.084849668 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081333631 seconds)
  done (took 2.086481418 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075039885 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.078231154 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075313672 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.074452828 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079674861 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075662269 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073497998 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075267681 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075142186 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075578538 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074706518 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073106625 seconds)
  done (took 2.514134963 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206732161 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.076189681 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077185165 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073993826 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.077747461 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.073936127 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089369825 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075598203 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100457731 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073820122 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074590623 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076725089 seconds)
  done (took 2.686475501 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213284179 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083362409 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243478684 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158957112 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120136453 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123447419 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12010912 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121176583 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148927732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10793349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173461138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173900064 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115383144 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144716026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097496506 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.111659018 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163911167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171652303 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113908812 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172321105 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154836422 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134329803 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155148567 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109583696 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113310741 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130318427 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079268556 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089167632 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175967226 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140095159 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150921078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119590921 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101174152 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182342423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178865813 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147298462 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154247839 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093251285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109643406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.140217598 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205906036 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096579573 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1698677 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257589053 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089558273 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141165189 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125653756 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126762464 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111591661 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097951899 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153141474 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191287153 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144406516 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09535795 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131947109 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122955315 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122769297 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120203356 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186973545 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16803047 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134859112 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079791629 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117085085 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158500933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141850496 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116549412 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131548675 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099267025 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142719539 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160425634 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131620281 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150952843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126568535 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097083582 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12658109 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149035776 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134783959 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166641805 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130646423 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081014914 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130916361 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110467053 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089180294 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156490006 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082778308 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180985677 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106503969 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113029331 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132698702 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116617635 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116561345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167635056 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294568664 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113028351 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.074841836 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113327239 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128176124 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156768155 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094581592 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115755274 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123770098 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085542221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144027605 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083134237 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12921964 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082706156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131497797 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136275595 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08606937 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130008752 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111817601 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107318113 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138928772 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165356401 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096128638 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090410812 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176611202 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127776895 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110249657 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151237645 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162848439 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106583271 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109978732 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158841974 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178255249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097124119 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169097606 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114958893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091900342 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095929635 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130480288 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119541719 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.132598328 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088823577 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12465096 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17370197 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.082934148 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102888983 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140431524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085678347 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087852063 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111945165 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112572653 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103015357 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.106950341 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.108548371 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14332719 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129477759 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257440043 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132649902 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107089282 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177726831 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095791637 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110008389 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111650785 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.078018202 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.14236449 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165557224 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087789071 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169002599 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.13041253 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124270863 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12588651 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091373687 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146142445 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086941843 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077675556 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152556291 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11717365 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116626875 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156431013 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123099837 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131615669 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125379967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141081648 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138093681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135419997 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113490114 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095618455 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117980442 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134982525 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.080736348 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097433167 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087091977 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112402207 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103089947 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090704608 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14812428 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130317431 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117299692 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118265104 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103609362 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154040061 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083500985 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132941058 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126065553 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102048982 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156812791 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157113731 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137798657 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105228338 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288154469 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078867673 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082145848 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097309612 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129308381 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090886422 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092178914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123988222 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152221288 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136613245 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145498708 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13127915 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126531756 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160901854 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077047583 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.127727266 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151962351 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127051237 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.112839121 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098222245 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106029064 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148208386 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115196542 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187943177 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119794456 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129299964 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159922613 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.108211018 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087522939 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109745094 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141327401 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111773354 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148041288 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106731346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095674289 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114944807 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082053814 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10534339 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134029379 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126131088 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141685952 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122037313 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140677681 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085157257 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123678145 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130923212 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128379696 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070856086 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125766243 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164794205 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102421519 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123313983 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15743375 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086609866 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.287303258 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182040424 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151005272 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094599396 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116465534 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126884178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133054492 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125067086 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146036579 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114532691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144689138 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11670977 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093345479 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095288794 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104056754 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112407342 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102526298 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112124823 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120980493 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.1038169 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139747841 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110800107 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1171119 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123861223 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107499737 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098766849 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103342733 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183390119 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124772122 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175211867 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106090879 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147715547 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167221707 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082479648 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086433579 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084994824 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14586033 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091199256 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136569566 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114830649 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124463342 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130037278 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148902328 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103752115 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076186419 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115970009 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139718338 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13138799 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105885197 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110741127 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166961889 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10659072 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086689629 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120469433 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123522247 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253739501 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177526754 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.069278499 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116637342 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086955376 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091743939 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141694098 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165422132 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08982075 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109536653 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128760719 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121962088 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136972722 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113657459 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118987575 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137429839 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161908587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138093281 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097890811 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119808147 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136248874 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159904311 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109179045 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104384956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179611304 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156529325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165170837 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095124001 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119643303 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119326828 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117817479 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143025927 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090605943 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167398127 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088903355 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14211815 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11141727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095585686 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13687447 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116464478 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096124352 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153032213 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123410171 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090150491 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084341952 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125109178 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124792802 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113004958 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082768621 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144492529 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080900128 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285209272 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167447761 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088508542 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113332585 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10384213 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086274948 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114548949 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109544957 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094911771 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.105091182 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177111806 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093105875 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154562688 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139879762 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118794487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141712622 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110505489 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647973762 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084453746 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156877186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123044308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180107544 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107373625 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123900104 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116294622 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129247013 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152210485 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110526302 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190452301 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137884638 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121943814 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087118747 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108981897 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110536927 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095048526 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115128808 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119206299 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122268809 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.099624873 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122640262 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130413452 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089538001 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103155026 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161588915 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123599757 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149896888 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14634054 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093579363 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123505974 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142606928 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086688693 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125914189 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307354291 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114105835 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10816177 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087955316 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108378042 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165836778 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082175157 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167843448 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126256431 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117162849 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120017993 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117850241 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140382255 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115349421 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128509712 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100265695 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115600492 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120283798 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088174242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083851699 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112537482 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117700226 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105414116 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104118321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.106131043 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157600687 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078916512 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10611038 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121494176 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151401295 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179129566 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095217728 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091100511 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125662727 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122751771 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119055355 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127417623 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0857693 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089059688 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086713678 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086259865 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115172669 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119608516 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121179877 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116498468 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16872083 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090696768 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.245380396 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103137301 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111937695 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078119104 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08466642 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102825482 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105086754 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114229988 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116304429 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311889511 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102727626 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09823784 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100954583 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081827586 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091009328 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135118822 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116200325 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125049415 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109799299 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069874819 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115899769 seconds)
  done (took 62.581850683 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11574674 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089823766 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.1043271 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152487923 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129589244 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20745404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.161416106 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197076538 seconds)
  done (took 2.876167414 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075590868 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103127892 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110952735 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091578124 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07429308 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076366293 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238033377 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.089790029 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073829496 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103492337 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085854438 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076630294 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.442295578 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073484695 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075126668 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069220516 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075180965 seconds)
  done (took 3.6423358 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.409308151 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634205849 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358937791 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083631619 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.938954427 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098806395 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.147263826 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143551711 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084547207 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532489219 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414229446 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137480349 seconds)
  done (took 18.703064592 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089152561 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082329162 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09706834 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095768966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085507066 seconds)
  done (took 2.166180298 seconds)
done (took 113.472057853 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089173891 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.625150818 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060651756 seconds)
  done (took 2.432909483 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089760466 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093219962 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093303149 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090385368 seconds)
  done (took 2.093437643 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082324214 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083452701 seconds)
  done (took 1.886191982 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242004718 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175391489 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103457372 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090335818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086551771 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087042688 seconds)
  done (took 1.987165014 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078975152 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083501483 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080040888 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084201508 seconds)
  done (took 2.044433645 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083930127 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059664074 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061746636 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064922078 seconds)
  done (took 1.989669282 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093869531 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086547519 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085644883 seconds)
  done (took 1.986267316 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108911699 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093799835 seconds)
  done (took 1.922784963 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090003979 seconds)
  done (took 1.810970482 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102297752 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109127168 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138515653 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.1187033 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145962494 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116104363 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090915212 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091716147 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084167123 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093252723 seconds)
  done (took 2.810776881 seconds)
done (took 23.290700986 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086040936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378417607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368486265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097511979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675093059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.364091613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.976030688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100664622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122950082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074776938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091930472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655971105 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968472139 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332700109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951981709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326333939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656239655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075358896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074694848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074980331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962388227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075116021 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074954203 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075476375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655259048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379997883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075596963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.34918681 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075807369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077039061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362628526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076341186 seconds)
  done (took 16.398537318 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077895378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128007166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080593116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091936175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07751358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076725702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078593409 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075977977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128624525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07484022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092887786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075183933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078886101 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075777284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095629896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075522412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07720712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075934019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075510782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07644964 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094080532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075541168 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075201548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076060048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075440772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088310561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076177245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076576952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075668062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078441982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078516495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076815087 seconds)
  done (took 4.371038267 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123691835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134867148 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08155391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111985374 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119500069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077596902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151242759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100903317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134479282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075932651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093555111 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075700205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11072073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07657836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096462484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075830374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076931755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076229013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076230822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07569298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095200043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075502971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076826109 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.077183078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075940565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089845881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076532107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076120914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076368065 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07795607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079106621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076254293 seconds)
  done (took 4.63557722 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.080041934 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.082855818 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090836928 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091954852 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.076713486 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079134744 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080734794 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.077385956 seconds)
  done (took 2.400074545 seconds)
done (took 29.532611698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086072536 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076541024 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.080387478 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090147341 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080457915 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085816795 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074509864 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082951955 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079636674 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.08043204 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081950689 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074581794 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078433837 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073980418 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.081521678 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.075548696 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087201454 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079342975 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.087258077 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.087036822 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.077358688 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080917179 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.083324291 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086818412 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.087189521 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086802724 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084606247 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.080968157 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076474939 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078081767 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.085312935 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.092279099 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076397141 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087522142 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.075098676 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075066336 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07924001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076169361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08720605 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084650015 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07699046 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083547536 seconds)
  done (took 5.146428454 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095255422 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.100210393 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092239096 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068986561 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0745914 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07319757 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.096661272 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06793444 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067007242 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.096146911 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063059548 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067051222 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.070796922 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060819057 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.067919583 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06412617 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069457796 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062676333 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068223617 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06713848 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096949839 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061208212 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085898707 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070832692 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06319343 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069338152 seconds)
  done (took 3.688820092 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081639259 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.09292977 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097705257 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138302906 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112285325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086539707 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.086853727 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104086175 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097471341 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07464935 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.078418358 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100609296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097994515 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082245632 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075339212 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093914946 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091611029 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076658202 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081162985 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101978804 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094746611 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093570038 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.104054562 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090693048 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074312974 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077437147 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078909884 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089266398 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078451488 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084993032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077884327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078974369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077117603 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.086682627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077610629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076784867 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103010188 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0852145 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.088914664 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.075746948 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.083111558 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076325484 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100366965 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135125251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074337027 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081387433 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078665937 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084956636 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074884325 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095328565 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086610286 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.074884617 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078147881 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074113877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07429935 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078172912 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076593454 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077384717 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083612052 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081557556 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10063632 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.080588878 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.091710283 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.074511453 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082648394 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.076142699 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07560614 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073718582 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.103722655 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076290936 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118525834 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07629843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076825839 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.084616366 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.083846109 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081889919 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074636166 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091984621 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085537046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078714706 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08349826 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.078453981 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078231308 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098285134 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077004209 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077313884 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076132693 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080397189 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079240338 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.076265466 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088339184 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.074860716 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078159376 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092226846 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074363381 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076359739 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.080496145 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079431779 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.074182795 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087096819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079248016 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076220622 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085676999 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07540514 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.077431886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087538944 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.081504684 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073768982 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078824352 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080261947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075793736 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077457105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.077997714 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077422868 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084027805 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082541274 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079315811 seconds)
  done (took 11.61879387 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17335148 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165954783 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.078207361 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.160011779 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084158899 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086427513 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159044972 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102462723 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.075431965 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.076557888 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.076149729 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119429538 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.114253255 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12463848 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087080851 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.075587201 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092025997 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.12247419 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161652497 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155888942 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092290089 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.085559449 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.077686752 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076787943 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078073785 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087389472 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094217938 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085102135 seconds)
  done (took 4.748658898 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087446011 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.113567611 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082607516 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09957393 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097977174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.075438909 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077964269 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077962376 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089864112 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084872708 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.075515635 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.081427507 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082517021 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079180954 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076599413 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082888005 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082750321 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077288565 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079569067 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081536766 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086260872 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099594779 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.079419413 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075202002 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080336599 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.074666815 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070449899 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091061525 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075792215 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104383559 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073773948 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080760105 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091267893 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076613727 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.075201082 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07535543 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.077120737 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075563452 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077883072 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07629753 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074164352 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06543636 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075372688 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086035596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082472237 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064094619 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080154885 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.080720945 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080870534 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.072948601 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.078840365 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078317461 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.078362569 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083082475 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079377152 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.080462371 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077039129 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081699953 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084691512 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074805055 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073045384 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07379399 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081013335 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072188525 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084230974 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080886851 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.073947916 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074890275 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077716382 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082394747 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075328798 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080321678 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073229651 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077191412 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079936962 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077275657 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077224967 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073746347 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074882731 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.075853005 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062655917 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.075226088 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060410421 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07855232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.073552083 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074007534 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07510816 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080037506 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086425918 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077077581 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08102743 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076420874 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074073979 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078504859 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068012523 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.077944661 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086855215 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089092836 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.075589591 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073178929 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08937236 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080158929 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.074388788 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063528195 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079705049 seconds)
  done (took 10.086285677 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098212057 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.077798843 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091739244 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098227081 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094754702 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082800388 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.085414769 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076591606 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.091398051 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.081860194 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084991829 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075163689 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085997308 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.085028319 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.077379545 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085448566 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079299443 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.093030878 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.090249975 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075400224 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.084571147 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.088163548 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.098393634 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.089336839 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088108107 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090189493 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098372662 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08520362 seconds)
  done (took 4.221697193 seconds)
done (took 41.246661106 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.845863584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.088817316 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.82712654 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.210526699 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.909076027 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.988719184 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.923323578 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.834033618 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.023151817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.860374192 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.163936543 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.983664429 seconds)
done (took 66.552063467 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.867761757 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.960915164 seconds)
    (2/2) benchmarking "String"...
    done (took 2.060334714 seconds)
  done (took 5.775172488 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.076312071 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.405338408 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.078998967 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.830328712 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.837221038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.150542064 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.631787039 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.34371803 seconds)
  done (took 31.034545116 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.062497206 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.058758603 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.620462799 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.59531881 seconds)
  done (took 16.146157251 seconds)
done (took 64.741931693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.833578548 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.84418184 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.841004849 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.806548236 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.891842967 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.846706657 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.95411469 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.05335495 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.83398847 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.808609458 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.833159681 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.313127822 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.844754774 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.916284945 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.83177006 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.835334773 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.912775191 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.245294053 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.991742973 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.845492899 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.845077884 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.899834797 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.835346177 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.844634764 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.858041589 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.832946785 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.240191035 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.848322979 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.463120674 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.834255721 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.865829486 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.106018385 seconds)
  done (took 206.513009941 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.831743436 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.884866273 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.940536413 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.844029951 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.337454963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.016139855 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.924179772 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.381095707 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.839423755 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.837578939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.112131185 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.833231305 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.13414369 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.794527925 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.854800878 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.881009889 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.02472725 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.126464721 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.859032895 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.002730168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.850949028 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.026027987 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.98997351 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.085104193 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.855989961 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.877852527 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.981327192 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.851422279 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.01597051 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.004282689 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.879151393 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.858866637 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.067407483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.701581259 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.852462886 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.845532166 seconds)
  done (took 172.962402755 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.995915662 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.834010063 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.836051653 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.834406548 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.835172189 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.846439719 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.834498372 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.958825487 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.963291104 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.450457128 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.119612841 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.886886793 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63530632 seconds)
    (13/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.835886376 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.835509125 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.902881529 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.850182996 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.835123454 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.850935657 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.863179903 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.836294087 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.837192376 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.965073862 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.847501336 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.99735697 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.842543824 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.836391558 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840569641 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.198280452 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.836380418 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841818737 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.89217321 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.102756451 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.837057931 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.836245084 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.836411815 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.697210195 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.919471942 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.838542919 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843123523 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.837363713 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.05374791 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.835972072 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.837547 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.837003601 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.839363543 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978026696 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.836004397 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.963598161 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.838080181 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.316849409 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.839590642 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.841323392 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.544854021 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.428127805 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.842216844 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.83904242 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.841471957 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.839651277 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.839669599 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.846127848 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.515579718 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.915018326 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.841258183 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.843712109 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845086375 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.839784221 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.080097725 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.842745693 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.417147352 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.893700908 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.963268539 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.963158496 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.842631711 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.907582087 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.934345672 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.840556763 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.842092162 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.841295816 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.840794721 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.922083827 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.841840266 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.963145662 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.849447819 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.84300266 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.892681444 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.910248297 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.842357712 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.703158602 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.844238061 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.842622507 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106867407 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.908476536 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.842813193 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.842231022 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.841885185 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.960575403 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.965108416 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54960218 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.845019192 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.471527536 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.845845627 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.986139156 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.843597964 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.998958825 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.843190587 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.923213184 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.847213667 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.844318307 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.841601571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.874583006 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.843069744 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.898851098 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.845787591 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.215982569 seconds)
  done (took 409.790356616 seconds)
done (took 793.074777296 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.48533021 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.454411972 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.549196619 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.473385669 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.450604287 seconds)
  done (took 14.179678964 seconds)
done (took 15.947002155 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.932070557 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.939197241 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.86861039 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.933983342 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.865477893 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.936152714 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917880551 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.870502422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904364917 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.86917428 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906352543 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.869707076 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.857371033 seconds)
  done (took 26.437482381 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.070689009 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.076635413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.907257299 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.072348565 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.885249742 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.064843527 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.998324384 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.989518374 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.988028189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.853057604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.849061786 seconds)
  done (took 23.52401192 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.064771677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.071957924 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.926352213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.072036361 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.88427906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.068113854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.99814577 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.992027569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.985258728 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.848973117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.845094758 seconds)
  done (took 23.525240836 seconds)
done (took 75.253815712 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.840234318 seconds)
  done (took 3.605378143 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.868816914 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.037751968 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.849163246 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.844944624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.842310123 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.842144544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.844529187 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.840892258 seconds)
  done (took 16.735209645 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.840316161 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.840508667 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.840673234 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.837590493 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.839255841 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.837604488 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.837377039 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.836108943 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.836943544 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.834334654 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.835819346 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.831421751 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.834511963 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.832265527 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.834860341 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.833140196 seconds)
  done (took 31.149822276 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.831554511 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.830134972 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.830098336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.832324968 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.830269895 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.83032957 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.831841565 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.830238525 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.829917897 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.8307873 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.831131706 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.83059477 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.830935832 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.831131088 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.831246802 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.832244267 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.830103177 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.831568162 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.835901624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.831305219 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.831679796 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.830194834 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.831911868 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.832157895 seconds)
  done (took 45.710220667 seconds)
done (took 98.96542502 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.631523117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.467743739 seconds)
  done (took 9.85741842 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.836810007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.833572833 seconds)
  done (took 5.48759795 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.834099366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.834789776 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.836329617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.833584238 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.833909426 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.834472232 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.834015313 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.83359689 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.834343204 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.833942408 seconds)
  done (took 20.102582439 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.834691528 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.834477473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.83184831 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.83316931 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.834342696 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.830985632 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.834993218 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.833787852 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.835414565 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.832147514 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.834522909 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.83128881 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.854263649 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.851298418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.851830247 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.846963958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.849216112 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.847755033 seconds)
  done (took 34.861420524 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.854238549 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.851203711 seconds)
  done (took 5.479331397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.845910731 seconds)
    (2/7) benchmarking "second"...
    done (took 1.84588062 seconds)
    (3/7) benchmarking "month"...
    done (took 1.846753335 seconds)
    (4/7) benchmarking "year"...
    done (took 1.845348046 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.851171177 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.855495746 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.857601008 seconds)
  done (took 14.720668043 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.851013934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.01495791 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.07047117 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.495816998 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.846928492 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.83833219 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7587993 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.838889002 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.840114185 seconds)
  done (took 20.327800102 seconds)
done (took 112.595387855 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.641012773 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.830665578 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.061832606 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.877413604 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.883854218 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.120454352 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.860899179 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.13358358 seconds)
done (took 43.171050773 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.853583933 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.107293134 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.135982272 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.847051637 seconds)
  done (took 16.841270515 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.808840904 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.347419504 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.861910565 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.411551939 seconds)
  done (took 20.213033881 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.203118377 seconds)
    (2/2) benchmarking "read"...
    done (took 2.170375628 seconds)
  done (took 6.130595728 seconds)
done (took 51.79183373 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.824161266 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827306146 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.827012679 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.82618612 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.82415903 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.825057233 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.828113435 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.824603 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.824485423 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.828275108 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.826650527 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.82670953 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.828740039 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829041752 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825068305 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824576967 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827109015 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.825502403 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825583503 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82447645 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82653108 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.824331186 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.824249496 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.829003143 seconds)
  done (took 45.578168226 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.825415462 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.82400258 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.82526383 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.825533343 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.824593021 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.826191901 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.826709288 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.822526356 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.825296885 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.826859118 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8209579 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.821151485 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.823239915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.82208271 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823948234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.824540148 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.823848504 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821156656 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824236682 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.821130698 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.824719649 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821309152 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.821608082 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823921984 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.820740333 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81976118 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.826076301 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.821106497 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82407823 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.819460375 seconds)
  done (took 56.451917988 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.830021716 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.832142777 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.823486716 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.821947957 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.821953784 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.821292502 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.824195629 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.821978093 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.822891158 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.822230776 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.822180243 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.822944328 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.823601393 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.823712186 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.822264901 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.823282097 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.82325789 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.822269149 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.823254278 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.822689531 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.823111448 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.822869717 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.824117187 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.822549482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.823829643 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.822751571 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.821781527 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.82308364 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.821459991 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.824538873 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.822188623 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.823428372 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.823429671 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.823484337 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.823591965 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.822866189 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.827336893 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.830716967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.821372108 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.821697157 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.820926858 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.821727968 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.8227671 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.822812595 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.82342923 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.820098971 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.821463936 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.820553486 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.820672646 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.823496409 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.819769451 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.821374103 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.820952597 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.821691115 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.82018596 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.822949847 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.820243607 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.82204873 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.820985681 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.821400755 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.821159304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.821321612 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.821243875 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.821233625 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.820529959 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.820971316 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.820591744 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.821897387 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.821858638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.820853167 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.82168037 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.822402798 seconds)
  done (took 132.976784047 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.820910462 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817010167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.817070047 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.817222228 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817751143 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817735551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.816916882 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821061922 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816048384 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819694981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818058839 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815091708 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817827942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818501094 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819307476 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.817380708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.818553959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814956699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.817519455 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818791367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.819042098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816417895 seconds)
  done (took 41.736413019 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818866253 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.818028723 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.815817963 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819167103 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814981337 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81924505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.818162929 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.819780043 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817697359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814639735 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814996394 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819525711 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814838161 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816643709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815948862 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817222014 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818373987 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815987512 seconds)
  done (took 34.452117742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.814952637 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.816381756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.817530783 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816702724 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.814703219 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.819416632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819079902 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.818887973 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.81846905 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.815832837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.819622992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820178559 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.820196156 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816371319 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818457162 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.817931849 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.819369268 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817966963 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819044204 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816696445 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.816308834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820182914 seconds)
  done (took 41.736350351 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819459426 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817604079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.816936198 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.815536758 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816461454 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820004665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.817491592 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.815009048 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.817497079 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.817519808 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815092416 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.819343396 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.814753199 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812240928 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.814462693 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815381385 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818715302 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.815933491 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816709796 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.813666836 seconds)
  done (took 38.072907137 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816194841 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819935311 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818485225 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817321755 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817733873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818168251 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819343271 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817901616 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818363599 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819677711 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.818879274 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.818258533 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820002301 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817576946 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.818306328 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81816261 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819494459 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819754178 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820288643 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817841978 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818969142 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81931334 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.819359917 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.820542584 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818098583 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821831637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819804304 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818813465 seconds)
  done (took 52.668653924 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818039145 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81848246 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.814108483 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.813824734 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.815417125 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.814701041 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.814967374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.813667581 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.816930109 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.815198728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.81870309 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.817594361 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.815941629 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.817632037 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817537383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.817006135 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819353899 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.81504586 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81521257 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814157016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.818142938 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819139979 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.817137545 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.814845346 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815446752 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.817460187 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814939786 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.815525811 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81787205 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.814068516 seconds)
  done (took 56.231243382 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.835846017 seconds)
    (2/2) benchmarking "in"...
    done (took 1.837789915 seconds)
  done (took 5.415281988 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.814849251 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818061152 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.817692065 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.815116639 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.816946431 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.818715373 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.818382421 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815357307 seconds)
  done (took 16.275287248 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.828185715 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.819568976 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.818301754 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.817929265 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.81924478 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.828554678 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.83436526 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.818644337 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.829710876 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.827712499 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.832916746 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.834419407 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.830934397 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82800116 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.828317477 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82896306 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.820358913 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.821567482 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.820227445 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820050121 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819890506 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.83189951 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833033671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.816921215 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.829293233 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.837171387 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.833456545 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.82171105 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831116395 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.832082202 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.829284452 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.817456864 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.821213881 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.821631983 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.82002566 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.820794936 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837784946 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829911695 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.834734285 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820050694 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821233793 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.817903036 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829706092 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.830646189 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831063777 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.820508243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.822080306 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.817446113 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.828778769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.834706508 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.824312702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82915807 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.818264613 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833746671 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.831514131 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.836608162 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.8225701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.833040459 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.839431416 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.839947349 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.841911189 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.837090978 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833021957 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.822439988 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839797536 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.85180679 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.837939698 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.819845329 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.819584381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.820770624 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.838808019 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842354684 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.839675331 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.82333775 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.825280105 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.823033599 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.832118331 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82305379 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837143208 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.835532173 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.823211836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82295101 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840209679 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850134284 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.832398656 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823394933 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.823480144 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.823848466 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.833852196 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841646881 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.82515593 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.824186005 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.83181486 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.831288499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.832970167 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.825700989 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8330201 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833639574 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.821192975 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.82333158 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.823762217 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835173855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.840806571 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.825347045 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824956231 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.839281944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.825450264 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833052073 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.83929209 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.824309777 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825497562 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.834963169 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.839624223 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.821370717 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836798943 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.84120954 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.824299007 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.834539192 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.824276376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.825833298 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840972791 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.857029392 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.82400491 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.826261486 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.838733351 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.835125087 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.82673518 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.837229466 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.827211082 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.82341493 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.823315658 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.835282616 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.826047463 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.835513498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827210679 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.835644559 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.823607289 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.825346879 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.826935976 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.836312768 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.836854622 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.836811417 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.836584844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.838525484 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.827704335 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.837015019 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.841184384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.833705259 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.836118633 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.835500162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.82487247 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.825008719 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.837111022 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.82708748 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.834966784 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.826433674 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.834878362 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.825921422 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828045215 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.828326546 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826920377 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.836372638 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.838573747 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.827234246 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.84097535 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.834978621 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.824681743 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.827081105 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.827632609 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.835363582 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.82722049 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.83552968 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.83881235 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.834163112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.828145528 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.828435771 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.839726558 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828753661 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828745094 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828346963 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.842644465 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.844545785 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.829294656 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.843776259 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.82916706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.829324072 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.829929882 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.837974657 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.837325649 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829136689 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.83910451 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.835416007 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849481721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.845408971 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.838814286 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.832417667 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.838432604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.83280063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.841762532 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.829352393 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.829428108 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829207867 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837887912 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.8283064 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.839590202 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.830020561 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.837233399 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.829841594 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.828960631 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.829083842 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830629435 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.838824415 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840225155 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.827279343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829684792 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.831025715 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.837680159 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.827104435 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.837540414 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.83823871 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.830290474 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.82978323 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.845506677 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.828261909 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839578544 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841532078 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.837839037 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.838028162 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.831418552 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841968333 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.840011525 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845981549 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.841494959 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.839205933 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.846068647 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.839383024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.838499655 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.841890136 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.831412072 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.827363244 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.842349463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.837464797 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.831054027 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.832269511 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.83260402 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840429002 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.831513199 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.846907278 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.828322724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.839527632 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.831997079 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.841332427 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.829392481 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.84066713 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.842990751 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.841334845 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.842809186 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.832617204 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.833041052 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841025123 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.831969136 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.832903081 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.832998589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84219599 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.838595249 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.844990402 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.840952661 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.844297019 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.842888509 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.836510808 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.842094284 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.832514769 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.84124541 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852356423 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.840442012 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847461399 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.843554796 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.83247504 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847216892 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.84261486 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.844796088 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842086309 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842681206 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.843156473 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.840982665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.830141524 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842990789 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.834582811 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842911194 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.843647651 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.837402989 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.834902262 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.841826789 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.83464779 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.834784896 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.842922874 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.842721027 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.835549941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.844814545 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.845574278 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.845996107 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.842072695 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850617945 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844208949 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.845376026 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.842016573 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.848322433 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.84295975 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.844427428 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.834960197 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.846269808 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.844178013 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.845874747 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.852547177 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.845323329 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851770452 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.835190362 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.850223424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.844228015 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.832374386 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.843003464 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.845171669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.841714807 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851829433 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.837600363 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.846009627 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.840232122 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.840618428 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.836127155 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.836432685 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.836077187 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.836568169 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.838126779 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.857096271 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.847787527 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.849501225 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.848758308 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.834914913 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.839036002 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.837750606 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.846384137 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.850088425 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.838550896 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.847928228 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.850456259 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.846592539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.837568806 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.838899979 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.837611175 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.836978504 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.838708694 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852700076 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.848604094 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.84002486 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.838720871 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.855083387 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838880008 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.854903058 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.839549043 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.849072861 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.840993437 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.839379704 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.846930386 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.847269022 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.84869971 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.83994692 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.846601261 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.841169029 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.839161354 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.849121285 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.848077723 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.841398442 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.84790947 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.856177631 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.858927427 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.850000646 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.845721366 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.836799122 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.84796001 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.844373103 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.838799294 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.848151182 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.85218335 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857331968 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846731603 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.84913752 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.839730904 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.852908662 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.841012863 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.839384025 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.839180167 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.841535133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.841411357 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.851100815 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.839793714 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851587383 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.838511375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.84893189 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.852244641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.850630938 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.858116791 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.839774801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.850671255 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845137841 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.837033398 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.847862169 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.848789066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.841219716 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.849470537 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.843853762 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.847265905 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85469565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.855402788 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.850235669 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.853254127 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.841036086 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.850311263 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.849613765 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839484436 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.841283577 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.844023739 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.851077847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.841132 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.850108871 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.850279453 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.844297674 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.851127877 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.84117359 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851208448 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.856305565 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.852436276 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.837174203 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.840561351 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84262233 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.847096639 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.848901471 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.86131871 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852389824 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.858961634 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.858091881 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.844841092 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.850766228 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.85469512 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.858180881 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.851154681 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.850655505 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.841864172 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.857130506 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.851949545 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.855296813 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.84414059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.858474428 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.855313601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.852847762 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859473114 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.854181105 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.844735215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.853895439 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.855513063 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.851554597 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.841997893 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.844346617 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.85412081 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.861227066 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.855650074 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845430735 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.855564692 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.851849073 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.856048775 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.848227464 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.844902738 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.85367938 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.84007428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.853758116 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847895331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84577494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.841239076 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.853429095 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.854489814 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.858124279 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.858708317 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.841548466 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.85686015 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.853722688 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.854630817 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848198237 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845600241 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.841686202 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.84129366 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.854004158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847503759 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.855223688 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.85695129 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.855102527 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.85303924 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.846612835 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.846838723 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857048731 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.862472761 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.852505791 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.842016098 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.85626731 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.854234972 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.857892871 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.845996794 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.846682944 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.857441628 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.855080118 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.846428095 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844979559 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.846752262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.855812646 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.868380889 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.847455669 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.855313892 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.857848208 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859497352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.850605107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.843832058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.846523098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.856928315 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.855930855 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.855860276 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.847787012 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.860395449 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854960807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.856924027 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.84878227 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.86279243 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.86308046 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.859012936 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848502739 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.848722244 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.864920828 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.870242596 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.848030552 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86615283 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.881473596 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.86104058 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.855483328 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.845847138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.855059303 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.847928572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.857306388 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.849478465 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.846221644 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845124254 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.848834834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.855448246 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861104364 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.857086185 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.846252999 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.844775311 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.855848564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.8581983 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.848076777 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.84847369 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.849054044 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.847908305 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.849401579 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.851252104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.857881553 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.869028016 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.865763724 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.848784875 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.851002171 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.844788371 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.860945287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.859466261 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866303649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.856405686 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.850906908 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.849085795 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.859860057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848894966 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.846277666 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.858435082 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.858640276 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858553248 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.848239489 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.868347681 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856242297 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.865293925 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.858957857 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.849906449 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.850525612 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.85872329 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.849990059 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850298088 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.858953304 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.859439675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854611006 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.853432787 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.848156452 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.860876978 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.85520497 seconds)
  done (took 1099.161654733 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844878567 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.848159199 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846174761 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846817638 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846432905 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846378627 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848609505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846832452 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.847190228 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84735652 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.847165091 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846757814 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.847718046 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846687402 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.847020093 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847247299 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847980051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.850429877 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846150339 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.848640854 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.848018336 seconds)
  done (took 40.5654538 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.849367167 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.849935295 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.848883198 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850511579 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848028033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.851111799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.853509181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850393431 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850730702 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847711083 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.85267138 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853878734 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.847905828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.848770362 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848195931 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853651297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.852213571 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852777004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.852497901 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84903736 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851781694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.849426906 seconds)
  done (took 42.485878566 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.853614373 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.853738895 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.860311413 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.850479527 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.852679733 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.849607725 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.85303235 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.853228219 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.853047193 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.862118804 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.863113942 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.863180285 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.866667077 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.858026335 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.865248863 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.855765996 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.996023714 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.853919902 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.855574093 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.854669476 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.851603759 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.868042112 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.851070456 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.850104545 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.861185033 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.85558915 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.856360156 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.853652589 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.85531429 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.864510836 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.859617349 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.855154009 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.862529998 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.865548993 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.863081405 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.864113979 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.857714773 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.857795246 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.852679739 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.854890158 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.871570503 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.870351024 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.856481608 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.871172685 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.854701822 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.855731729 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.865190874 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.861892788 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.854344852 seconds)
  done (took 92.973503004 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.85326434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.853602768 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.851116567 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.856777536 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.854903604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.854293172 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.855049279 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853491378 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.855080471 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.85225369 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.856102368 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.852397978 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851963701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.854533776 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.856244529 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851899616 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.851912113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.852068595 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.851659527 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.854265714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851461963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.855312116 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.855023067 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.85262612 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.855396009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.854564011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.853059601 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.857366041 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.85262512 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.85351764 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.856268963 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.856695612 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.857833527 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.853421901 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85194519 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.85825132 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.854872472 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.852966614 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.857635013 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.853335537 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.855797933 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.85847404 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.855983458 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.857287739 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.854373001 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.854256592 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.856662587 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.853726278 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.854360519 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.8565687 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.856793647 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.853981578 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.858638535 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.853505739 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.857727133 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.858858183 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.855693671 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.857307388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.857571072 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.855152614 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.856123333 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858480752 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.856995401 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.859394194 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.859144517 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.85626 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.855731239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858168597 seconds)
  done (took 127.929752444 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.859973996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.861060129 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.861061577 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.861967962 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863605582 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.859764975 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858934809 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.860688907 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.861294294 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.862397933 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.861756007 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859923283 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.859016791 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.860336138 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.859239677 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.862995812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.860300186 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.860945887 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.861149189 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.862531666 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.863358249 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862359328 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.862475194 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.863749601 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.861672229 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.862085776 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.862068154 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.861365955 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.862581292 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.862334235 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86281678 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.862138694 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.863585471 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.861763421 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.86214822 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.861894298 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862951579 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.861080538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.862868917 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.861059731 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.862181969 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.861582287 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.863082322 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.862416314 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861771057 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.862863083 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.862709467 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.865401232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.861212354 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860505091 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.862933448 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.863222851 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863332169 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.862159222 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86237854 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.862614101 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.862535637 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.861932935 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863955832 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.863717264 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862701911 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.86122802 seconds)
  done (took 117.226511258 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863760676 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.862402913 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.857684895 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.858377366 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.861485883 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.859100417 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.862710534 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.863884078 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.861508922 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.86331576 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862823083 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860515701 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859954031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862394599 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.860790613 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860454364 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860537192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.860807548 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863860833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.860518216 seconds)
  done (took 39.011195782 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.859871565 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863942853 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.860106344 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859795214 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.861186353 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85990067 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.864007591 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861420085 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858773367 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863478458 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862428002 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863736888 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864011016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86183988 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.863230363 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860869427 seconds)
  done (took 31.575030609 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.863668091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.865011227 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.865188907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.864438014 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.862715464 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.862015322 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.865146312 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.860457983 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.860614044 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.864546685 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.864458863 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.865055356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.86519221 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.865146652 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.862538713 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.864840966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.862543316 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.861978275 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.864275787 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.866210285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.863559169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.863028483 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.865011619 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.864461268 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.862620756 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.863258855 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.862273091 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.861662578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.862589165 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.865922206 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.863548599 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.862918792 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.866443929 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.862831083 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867487964 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.863541386 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.86462827 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.865289129 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.865901765 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.864928671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.867554958 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.862541346 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.865390549 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.86758761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.864166483 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.866499654 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.863175897 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.863490373 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863734373 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.864126045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.866215467 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.867433716 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.866391571 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.8678558 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.867700239 seconds)
  done (took 104.329998453 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867202719 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.865639421 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.864636571 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.869741757 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865452866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.863841801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.866871702 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.86345841 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86563805 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.866096198 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865433285 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.866647778 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863310297 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866115989 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864538128 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866877703 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.86412754 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863850747 seconds)
  done (took 35.36971654 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.867679901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.864187131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.866837222 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.863897846 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.863634167 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.868404768 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865838936 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.867467849 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867823595 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.866371461 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864218566 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.869236994 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867522214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.86820739 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.864620908 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864792159 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.8689669 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869235517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.866253967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.865130085 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87031237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868437122 seconds)
  done (took 42.857833447 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.876312539 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.876337579 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.890182751 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.894272591 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.8967927 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.90684199 seconds)
  done (took 13.132628802 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86609264 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868298785 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.866472852 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870641861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869176114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866752583 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865606228 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864569298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870275655 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86742409 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867469403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869440764 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.869820472 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868071158 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868523873 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869079397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868417259 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86690097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868893851 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869289675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865125025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870868048 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866761404 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867412462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867178996 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868543941 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871553323 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866484074 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867689812 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872183177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870013277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868555379 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871248912 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867801402 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870745972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870094249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866807152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870193018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869576295 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867170038 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8712168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870547232 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870165725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866751004 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870544934 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868496388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867221355 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867894027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868046706 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871746505 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872351135 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86749557 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871599981 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871270934 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871107947 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870942277 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868482652 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867844002 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8713235 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869174238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869408588 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871866089 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868377013 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868573414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871379142 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868490819 seconds)
  done (took 125.142913039 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868705606 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868890366 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868502783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868607662 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868809407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869191355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869291714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868556691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867941908 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869186419 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87427547 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869053994 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86967905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869570841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86889032 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869303005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.871627571 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.869828348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871557659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872271504 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871754001 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870823113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870786894 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871342791 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87079619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872945348 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870040237 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871704019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871828073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870961231 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869181591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870612428 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870310491 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871336338 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868499742 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869554177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869228713 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8717304 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869929944 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871466666 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870384212 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873663627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87112075 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871695344 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872472161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870245256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871530618 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872302335 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870706561 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870450719 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873212975 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871335761 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87097414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.87140661 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870587271 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870954015 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869596102 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86798794 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867178058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871519525 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865165943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865725115 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870996504 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866635362 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868723535 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866394862 seconds)
  done (took 125.227265208 seconds)
done (took 2560.340022618 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.952441087 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.076990318 seconds)
  done (took 15.821988662 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.052099331 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.003606241 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.890375458 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.933096169 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.890356538 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.914148885 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.891970384 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.890667139 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.892583939 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.890820161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.890602571 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.079101846 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.939518313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.889440916 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.894457708 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.986560622 seconds)
  done (took 52.735388588 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.894529541 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.894292028 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.907813819 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.896596882 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.896016624 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.910908188 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.933014727 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.900468233 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.955387214 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.907694937 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.020253631 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.908886317 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.893424528 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.958419849 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.907817636 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.910656903 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.996250536 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.972738131 seconds)
  done (took 36.472100695 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.972344502 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.89594759 seconds)
  done (took 10.682573006 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.921331568 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.900769666 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.889196848 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.896042291 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.889638601 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.911222682 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.900302299 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.893314479 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.920035575 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.902746556 seconds)
  done (took 70.834191858 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.899754754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.896566785 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.897467059 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.894197014 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.889133847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.891962158 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.895080726 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.892309229 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.571303996 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.935202582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.90542469 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.902503636 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.894798952 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.897295125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.886208473 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.919615089 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995059545 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.885564433 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.88433601 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.90123956 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.896714714 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.950003601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.912013809 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.890302623 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.925496999 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.572577745 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.907995309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.902926567 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.98855346 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.887053698 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.895927261 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.898505968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.898919978 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.264133316 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.211022111 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.895280364 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.909605756 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.904686801 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.887235783 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.990847763 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.898263605 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.901789948 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.503144273 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.198689173 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.990761339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.939999106 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.219210555 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.92002907 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.899239893 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.927166271 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.899273909 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.89975913 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.910270984 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.373482953 seconds)
  done (took 133.619532537 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.892636807 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.264792279 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064150739 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.894651458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.182583495 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108123823 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.896121651 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94487205 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.895288808 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.125831312 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.15341851 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.008154791 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.895028207 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.890463825 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.895772775 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.890953267 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05659884 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.970470183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.893579521 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.893477069 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.926615514 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.141854812 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.025853779 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.895892159 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.924379239 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113003289 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.022425658 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.007948277 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.675511345 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.89275399 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.960035923 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.895114386 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.892339353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.890722524 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.054802485 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.994757747 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982580968 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.89493608 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.892935452 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.891424418 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.56668408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100920539 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.99345743 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.043668429 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.099369835 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.108268966 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.681946054 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.893644993 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.637478363 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062421279 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.131587521 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.13228168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021454959 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.896352437 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.224244307 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.893781425 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895057212 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.149320993 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.045162164 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.000065527 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.897748039 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.895258703 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.892253451 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.145158399 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.896314527 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.99587861 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.897825822 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.89386365 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.997840258 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.000501133 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.039243368 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113284158 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.930828573 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.826767481 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.436842476 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.149863428 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.967409787 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150263416 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.900724999 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.893809927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979389496 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.748110582 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.153490555 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152678007 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.155321588 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93502837 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.622467977 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.89697134 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.126587094 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.123622859 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.151343925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105065454 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.139204896 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.238995419 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.898485548 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.895154329 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.114622072 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.038442992 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.898660084 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.252663047 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135575693 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.467145024 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.920057712 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.21008757 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035046171 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.899013167 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.544343918 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.897311072 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.126722526 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.94152837 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.897719709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897426226 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.124001841 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.877176858 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.897009801 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.767552005 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.964025299 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.903256753 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136242792 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.902054328 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165059948 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.898573438 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142361433 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.002643098 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936125832 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.078463818 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.108387016 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.901835891 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150341658 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.152505756 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.02157088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.177887147 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.807802059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.90024871 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.191956702 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.901060268 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.898673465 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.073610209 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.900722666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053605111 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.901619421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.190112038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.928385798 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.134459967 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.903113877 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.159966636 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.940387646 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956683022 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.9034797 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.034909924 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.905550456 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.730592885 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.062555915 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.903729726 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.900154682 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.455953518 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.899149047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.051937988 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.14045306 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.927937844 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.97812435 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.573080062 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.901097428 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992204279 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.927661865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.291930053 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.902300167 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.161408763 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.903228986 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.899091765 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.900083337 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.146682525 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.14777185 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.90317933 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.901427123 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.807547331 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.901010571 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.899556959 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.086634662 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.22341599 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.899592587 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108737696 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.90310068 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.034426426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.90447832 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.982804626 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.243181978 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.901431801 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.902828561 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.902302937 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.900783077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.902147069 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.116356826 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.933860053 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.441208718 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.044757592 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178882472 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.217817496 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.160100449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.950664291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.903745704 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.164429147 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.905443978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.968778956 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.904279482 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.926605295 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143805638 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.906570152 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.116173285 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.191388322 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.943911972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955645718 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.904986452 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.902514689 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.901457704 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055031538 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996909149 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.905900596 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.901641238 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024059349 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031563591 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.118091984 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.902592034 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.933099514 seconds)
  done (took 910.463878661 seconds)
done (took 1232.422902985 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.90313293 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.903242932 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.879813179 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.904354635 seconds)
  done (took 29.410420001 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.904786048 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.910533899 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.903846303 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.908912668 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.902801944 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.911231074 seconds)
  done (took 13.264083265 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.959240547 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.901544899 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.903993957 seconds)
  done (took 21.585490493 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.980107078 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.73829111 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.023699191 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.335908963 seconds)
  done (took 10.899817518 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.904601022 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.904180067 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.904888622 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.904770702 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.904928079 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.905630884 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.904303689 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.904666035 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.906359572 seconds)
  done (took 18.968976759 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.358713659 seconds)
done (took 100.308579503 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.920236648 seconds)
    (2/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.883487249 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286807813 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.176849756 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.898603655 seconds)
    (6/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.911213675 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.004718885 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.069282831 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.044634847 seconds)
    (10/309) benchmarking ("sort", Float32, false)...
    done (took 5.592195279 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.885121304 seconds)
    (12/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.969565878 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.029722587 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.99574277 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.944003529 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.924829325 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.907263342 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.354272164 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.130198792 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.248633949 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.13231019 seconds)
    (22/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.929101258 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.881279611 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.910543524 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.185270884 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.955571553 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.204414457 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.009634142 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.883357004 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.403395698 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.993486447 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.232564503 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.911623795 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.964899405 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.999163374 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.910138292 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.390329952 seconds)
    (38/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.00190932 seconds)
    (39/309) benchmarking ("sort", Float64, false)...
    done (took 5.652903404 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.032833448 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.932523812 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.991103749 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074974304 seconds)
    (44/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.756868392 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.754803947 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.097720969 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.019458671 seconds)
    (48/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.619205163 seconds)
    (49/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.045249235 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.021407717 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.066766652 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.027990271 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.050572683 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.150794492 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.05549066 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.056157024 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.92889755 seconds)
    (58/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.320572447 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.22833296 seconds)
    (60/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.175346008 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.830606309 seconds)
    (62/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.98857235 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.304663139 seconds)
    (64/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.887364687 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.053106766 seconds)
    (66/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.923327739 seconds)
    (67/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.130743402 seconds)
    (68/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.99836192 seconds)
    (69/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123774408 seconds)
    (70/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.891155033 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.436786628 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.183548633 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.991069942 seconds)
    (74/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.912872105 seconds)
    (75/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.988031484 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.006660479 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.913884075 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.888037839 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.590736878 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.056648811 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.029441702 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.936866908 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.132886808 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.975856358 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.266514236 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.001646578 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.465446779 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.070499795 seconds)
    (89/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.892405204 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.663071087 seconds)
    (91/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.989314248 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.288624064 seconds)
    (93/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.80942702 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.239627121 seconds)
    (95/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.081575541 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.244840539 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.321963409 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.93149922 seconds)
    (99/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.929033696 seconds)
    (100/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.985842571 seconds)
    (101/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349377871 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.894397286 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.061620928 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.911291918 seconds)
    (105/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.9221071 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.912745197 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.823862039 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.922284456 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.086818572 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.407452956 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.026521003 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.870530612 seconds)
    (113/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.92511258 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.00776494 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.198566575 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.10031703 seconds)
    (117/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.922745363 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.032255263 seconds)
    (119/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.072283838 seconds)
    (120/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.993539539 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.991200179 seconds)
    (122/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.334323716 seconds)
    (123/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.919600138 seconds)
    (124/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.997978174 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.917240738 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.447563732 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.922037412 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.89394171 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.07027368 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.040258234 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.139714733 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.926158146 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.103146887 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.988570063 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.203930604 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.26227003 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.337065029 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.534871348 seconds)
    (139/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.101019984 seconds)
    (140/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.191406327 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.137395377 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.160437293 seconds)
    (143/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.199077016 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.894697947 seconds)
    (145/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.315774533 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.177109749 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.07702346 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.957699179 seconds)
    (149/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.024739441 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.922504963 seconds)
    (151/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.305237139 seconds)
    (152/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.925268067 seconds)
    (153/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.067200038 seconds)
    (154/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.924181668 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.017101379 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.14104041 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.9364592 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.977798084 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.254601774 seconds)
    (160/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.079968641 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.209906842 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.939738635 seconds)
    (163/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.010387071 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.893063707 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.948386876 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.867600475 seconds)
    (167/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.901068169 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.08919056 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.873016208 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.188007907 seconds)
    (171/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.234767517 seconds)
    (172/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.409438214 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.489378586 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.01078243 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.948881553 seconds)
    (176/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.996588693 seconds)
    (177/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.243860394 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.566255345 seconds)
    (179/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.017263498 seconds)
    (180/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.996105137 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.813242725 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.917741639 seconds)
    (183/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.015917689 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.012434188 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.926067777 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.146341664 seconds)
    (187/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.308542872 seconds)
    (188/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.927400595 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.101905484 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.935320036 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.481572898 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.922317512 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.944308249 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.22633556 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.30469458 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.211127568 seconds)
    (197/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.984666442 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.194722227 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.00216052 seconds)
    (200/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.662105932 seconds)
    (201/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.33446696 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.925198603 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.006142854 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.29476254 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.971166341 seconds)
    (206/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.432936646 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.049034165 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.089771731 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.047129491 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.533393854 seconds)
    (211/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.055285917 seconds)
    (212/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.923776391 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.22759614 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.921839955 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.946829374 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.169237402 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.076566554 seconds)
    (218/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.095020214 seconds)
    (219/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.265146274 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.115381382 seconds)
    (221/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.356519229 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.736891321 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.917044439 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.256777726 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.024248478 seconds)
    (226/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.935918306 seconds)
    (227/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.201277803 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.298426896 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.010776508 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.164760227 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.977886201 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.16156935 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.933320718 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.920377015 seconds)
    (235/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.897200714 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.873028796 seconds)
    (237/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.385849596 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149243842 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.921786472 seconds)
    (240/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.587523292 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.939174578 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.954352236 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.089680647 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.924270447 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.987719423 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.968952758 seconds)
    (247/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.055661122 seconds)
    (248/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.921930796 seconds)
    (249/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.615106697 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.822235516 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.087530291 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.232512506 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.036984008 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.153299084 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.859785852 seconds)
    (256/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.017743953 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.020074359 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.999043421 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.265253558 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.574837896 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.933289773 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.987409449 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.154256286 seconds)
    (264/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.014491246 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.942810496 seconds)
    (266/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.996638756 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.003174186 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.849635161 seconds)
    (269/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.013152419 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.245784214 seconds)
    (271/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.085689474 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.251583984 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.994283475 seconds)
    (274/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.939662612 seconds)
    (275/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.096909256 seconds)
    (276/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.924634817 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.414085773 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.596764707 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.033028471 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.90040656 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.005008147 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.925872076 seconds)
    (283/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.537867105 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.03083425 seconds)
    (285/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.922985888 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.076896167 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.749187663 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.994689924 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.053532426 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.956754295 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.614695049 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.625027074 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.613019382 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.036750448 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.016991543 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.960009983 seconds)
    (297/309) benchmarking ("sort", Int8, false)...
    done (took 5.877298142 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.949583125 seconds)
    (299/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.019239298 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.926957263 seconds)
    (301/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.384615482 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.21799686 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.968561006 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.9244195 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.94073569 seconds)
    (306/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.901034395 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.15279812 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.900137279 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.439256465 seconds)
  done (took 1019.296782432 seconds)
done (took 1021.182321531 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.169468662 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.942800673 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.926201122 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.948700167 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.039675245 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.954298753 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.937422826 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.929309262 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.971624821 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.974694212 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.925687438 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.953307766 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.92883625 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.925593888 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.926574594 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943969489 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.243522542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.961422552 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.944677441 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.936068419 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.944700021 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.926687777 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.977185602 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.953251302 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.930756489 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.929850828 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.930932255 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.947452259 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.038638148 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.933214698 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.930510602 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.938289935 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.244826891 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.957064916 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.923271437 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.950086128 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.939378341 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.936421081 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.93121778 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.9598829 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.335858758 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.967284846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.930254122 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.928944624 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.929114557 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.930292743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.931196178 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.932671342 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940650089 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.941451421 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.332065198 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.982887446 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.931118389 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.925799951 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.938130666 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.929958233 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.933165946 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.945355872 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.948016222 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943996783 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.236882879 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.963323692 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.931311252 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.946719877 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.935589049 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369218095 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.962894568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.934137472 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.336467374 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.97232248 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.369740119 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.975255463 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.931691972 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.944087606 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.959916536 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.245635115 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.955136154 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.928854673 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.9367542 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.928570124 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.939858418 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944019275 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.934613352 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.931644969 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942876261 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.960122407 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.93983759 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.931038153 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.938170432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.949256113 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.942962312 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.940796135 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.933199537 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.925622363 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.942878757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.935888531 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.933605921 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.933427358 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.935125949 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.941630762 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335727549 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.985374457 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.927227173 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.926676591 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.929940675 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.947834358 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335531262 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.9724644 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.950238546 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.976388204 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.934383846 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.237112775 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.966577076 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.948128904 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.939047521 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.93550641 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.924090837 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.236550951 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.367160226 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.984895116 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.935577774 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.927974117 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.945257639 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.932235857 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.926455343 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.247677701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.968130491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944828012 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.052318633 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.942473919 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.964910567 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.929458908 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.934971417 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.960309977 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950554307 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.96502702 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.934475197 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.946715981 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.947900492 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.928980719 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.941196753 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.9431656 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.933195044 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.936659541 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.926629156 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.959869132 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.947743234 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.945847968 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.953464742 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.053496427 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.928963653 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.242780772 seconds)
done (took 304.506122048 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.012446674 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.933007719 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.036306479 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.927011241 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.020299888 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.022755138 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.92561088 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.926031602 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.925760869 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.31261046 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.924941816 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.926526616 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.933590958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.926790426 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.018944649 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.928543702 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.924758393 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.276560059 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.929690945 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.008488999 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.934208905 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.926046651 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.928948224 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.310918513 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.940104118 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.939995744 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.009558309 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.929247772 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.276651485 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.941364967 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.933955166 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.275536493 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.030763559 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.947882627 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.944890502 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.936980591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.023726454 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.935230732 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.020683399 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.022310724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.038143013 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.970753278 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.934391277 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.933821851 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.937526049 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.93104533 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.926830808 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.958617562 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.936591322 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.930022358 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.275514562 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.940946193 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.937268194 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.928361349 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.929596779 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.953539763 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.928391001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.93300416 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.030487546 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.932784597 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.002685259 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.313594438 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.312260631 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.931396059 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.938041966 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.929408207 seconds)
  done (took 188.611485539 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.008545861 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.01905864 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.007564745 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.944187855 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.990971486 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.00928979 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.944845475 seconds)
  done (took 15.774381067 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.948082164 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93216472 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.995171979 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.993973522 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.933384617 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.090150305 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.933123712 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.953434777 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.929399182 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.994014853 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.934288975 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932131133 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.939462565 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.934357708 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.002061164 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.953906439 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.060540883 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.945299698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934203077 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.093448182 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.940019427 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.930405385 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.995665808 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.954210437 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.935815374 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.947861047 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.52559511 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.934569118 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.931297044 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.93355216 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.932204601 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.984514153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.935213648 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.937329564 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.932353062 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.058275318 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.934792669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.930891206 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.93412446 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.938375055 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.933464087 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.935370296 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.934072684 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.931255884 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.935236932 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.968146051 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.934136147 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.934971405 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.934898507 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936572669 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.99656463 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.936822189 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.933077274 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.933073347 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.999430514 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.941740995 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.93642893 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.931451809 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936210205 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.932050208 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.096914608 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.993875358 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.935317055 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.995195031 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.934866239 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.935413245 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.934151046 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.936424674 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.041827663 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.935481764 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.996211722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.933713503 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.103151265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.969481459 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937554694 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.948237213 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.94820926 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.93797957 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.941188624 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.952861699 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.934067071 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.946737138 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.95047064 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.934787221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.93334797 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.058887784 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.054271236 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.93349857 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.958111044 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.952472637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.933962538 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.998611187 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.935359759 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.933947092 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.003317321 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.066233268 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.00273189 seconds)
  done (took 212.625148941 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.95222772 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.954980029 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.948518693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.964050355 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.94650589 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.946811145 seconds)
  done (took 13.565994331 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.95007158 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.93826077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.938264122 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.936938202 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.937979063 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.938013183 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.938643663 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.949146557 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.943046198 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.93838164 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.939195711 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.941347117 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.938774666 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.93746842 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.93925505 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.938111687 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.939486431 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.935354257 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.939886634 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939447777 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.096240299 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.937857517 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.939640547 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.9497069 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.945081236 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.93858315 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.956623338 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.938759863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.939294316 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.958044987 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.942983767 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.9391197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.949232857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.954670197 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.944597039 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.949035737 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943940768 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.942229655 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.936236684 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.939795955 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.941268474 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.939347078 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.939617856 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.942163031 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.949722199 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.954506399 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.947433612 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.956589763 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.940839761 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.941596433 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.942157335 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.940561111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.940698495 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.942317321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.951562665 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.955591356 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.947651385 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.941799496 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.93978711 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.951360574 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.943236918 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.941090637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.952636916 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.945622412 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.947523736 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.943907347 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.950193424 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.945730154 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941117184 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.940245292 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.943559486 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.938156669 seconds)
  done (took 142.935214407 seconds)
done (took 575.375299193 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.066939891 seconds)
  done (took 8.92419782 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.124350308 seconds)
  done (took 9.022542214 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.403925785 seconds)
  done (took 10.266906724 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.977032112 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.990762231 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.95142083 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.94495637 seconds)
  done (took 29.746508497 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.99974654 seconds)
  done (took 8.858128241 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.959699687 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.932516867 seconds)
  done (took 15.781966554 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.11664205 seconds)
  done (took 8.975578343 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.265043766 seconds)
  done (took 9.151273505 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.946677458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.964442491 seconds)
  done (took 15.783249724 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.919939844 seconds)
  done (took 8.779210883 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.576414202 seconds)
  done (took 11.52917098 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.953001535 seconds)
  done (took 8.915657906 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.986036061 seconds)
  done (took 8.84504955 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.966355631 seconds)
  done (took 8.824723603 seconds)
done (took 165.262082718 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.948131381 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.943062624 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.941953561 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.942883989 seconds)
  done (took 29.634199512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.981614072 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.980330228 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.980186457 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.986716252 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.979523166 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.992858555 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.967637893 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.974046762 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.986104852 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.979547251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.977805722 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.977910388 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.975745496 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.967605138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.978054123 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.977729459 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.986128732 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.977884262 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.96882808 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.979282381 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.944291646 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.987889772 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.979790822 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.943483178 seconds)
  done (took 49.291577931 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.150785165 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.026826991 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.106385896 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.004804454 seconds)
  done (took 10.148422093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.995095686 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.996732003 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.010754824 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.047581484 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.070326979 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.006691734 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.970612154 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.965702251 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.951099439 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.997994948 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.072383279 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.991558928 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.082907491 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.943600304 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.130320033 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.943999609 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.944237304 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.995939572 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.048044025 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.060974234 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.944926385 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.995973846 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.000120102 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.990861279 seconds)
  done (took 50.019563302 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.943351449 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.950186705 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.949609534 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.943184578 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.94389596 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.945463585 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.949952879 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.944559986 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.964925514 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.944517468 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.942261776 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.943193934 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.943019691 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.943620481 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.942825779 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.956971733 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.957901672 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.943824555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.947052396 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.949204573 seconds)
  done (took 40.812656001 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.94790701 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.801822479 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.300211248 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.202513191 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.947940003 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.946071089 seconds)
  done (took 32.008873657 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.967732834 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.960410006 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.953709835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.012246631 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.091349867 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.959355694 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.954174634 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.966984617 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.001157636 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.019020532 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.97354408 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.98251913 seconds)
  done (took 25.705908153 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.951373994 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.963290789 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.949022652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.978453214 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.965998749 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.961105472 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.961531549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.948567889 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.966587624 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.973432708 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.961297374 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.968424024 seconds)
  done (took 45.416894677 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037502443 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.829819671 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.996700061 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668552046 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.4777198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150903255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.470739662 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.283046312 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.943295163 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213987223 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892929385 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181750288 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197804488 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938333009 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.009031498 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.383740091 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245045502 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166617175 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967879528 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.656760058 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065518716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.501857506 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.637758037 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072607403 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156475434 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.077891958 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.202499362 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.903276947 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079320907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983176858 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953262686 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941950118 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217774996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322540417 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061977346 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953058787 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61419332 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.661419774 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.935093001 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.64681613 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.795208737 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.077208632 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954922709 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948018777 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.880172627 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.496899947 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288546255 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.949726567 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.648230565 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945360581 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956526336 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037114859 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.949686357 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.761285609 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908494562 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225785069 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.940295906 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960584924 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51544001 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.981600504 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.609859495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.88216279 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.048258571 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672212329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421249205 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.100845133 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.951967302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952308448 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882559288 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.594480099 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07210044 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094073071 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.967294756 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59929908 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253081975 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.97069611 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.02766976 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236375649 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.648159829 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.006543721 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177775162 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905681514 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884595188 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.804882293 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.883088046 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215132404 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987197525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.578003354 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997635267 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.289793263 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.957485226 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968636578 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956970619 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.173419945 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.832690313 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94917745 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.669353764 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232312448 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972065686 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290900916 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886749315 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.953475925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204856145 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.160502202 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.09881997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.499545617 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116312417 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949478053 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.041633851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.772362558 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067892206 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.226204228 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012680417 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992248522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082229146 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.908071008 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246743939 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977026134 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.126218591 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.924559791 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212935466 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.277467242 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203960499 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035959709 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954437233 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.952106004 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627276388 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.579041415 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.174983475 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.952812605 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354194134 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069405495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.953364348 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885809959 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.611413496 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958405093 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.059707414 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176843877 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.816262449 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334205175 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888236345 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097503804 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.067858581 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.175504131 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.602222271 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.033921877 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21315087 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350995048 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.190898263 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068826502 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971012345 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041642203 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971530703 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.286574465 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311928613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.95297695 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.956242366 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.672189612 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.023315954 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958221966 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.957018476 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794859523 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234095109 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977105988 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.96204333 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.839709491 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.964643865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02011767 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956140325 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960926878 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.477629065 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714751205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.962747672 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.685873643 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203108692 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961050556 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.686385322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141757175 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.039495412 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238023946 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017020042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.889819789 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.657770131 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.655801797 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954528521 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888421655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954778413 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959881774 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959757697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.161713304 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.23901533 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996123635 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.606865882 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.075255747 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968451458 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.962825975 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958074627 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.449984594 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030684401 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.488702775 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074702044 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092233479 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.970439282 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.891853292 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.959521312 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962131423 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.956997141 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.925190561 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009988425 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.612637471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415680982 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219528584 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623477832 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976509703 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.6459754 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.087183438 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.982911675 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709341613 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944629378 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.062854484 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033236112 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.968577188 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.631084539 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.727735311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526433663 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275575344 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27480143 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399901182 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.350039572 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.284166727 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.298088688 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193086459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.486497578 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018284614 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308122002 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90169954 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048380105 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.608714647 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317434712 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973206786 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184467224 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344107384 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.780995784 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11807179 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169409846 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993854027 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.787850216 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992606812 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.163872276 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113131337 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.711183172 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191243218 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300899585 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.713456211 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.072726798 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.963153858 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.646734821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041327917 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.662818364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315220994 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.522567118 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.937365457 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448396919 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.953015061 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392910823 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297367719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.17795589 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.161554366 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875463057 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952234777 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.951866658 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.939058621 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.919137571 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.885975345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.235348611 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948235224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172551367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.120263499 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318654469 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.845371708 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.941354401 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940760032 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239084971 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.630905422 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173548004 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.282421846 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.531234845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949675893 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866540033 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866989747 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.640806093 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93415226 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903655405 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153544219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.066929357 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893458529 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318272223 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244874694 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.180528585 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.937021806 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205607248 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20642356 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670354935 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950686418 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.023340952 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.704670244 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.669799685 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.144946046 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155088001 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736923093 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14803182 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.970287935 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.884192252 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925865399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.130004793 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.139569298 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920659899 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179705179 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.633922273 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.919805372 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343370146 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019691898 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.981820885 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.176380251 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.062493507 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97722156 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040375837 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967704105 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.971143813 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971194444 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010054112 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975112631 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.096175557 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.973445348 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050289435 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042846111 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.577934158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.972473702 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243091594 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338965894 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293247982 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022584999 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.959920676 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965811674 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894429495 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097411465 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405913604 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231731655 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092729196 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.108891243 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987296503 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.727615892 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266863237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274749961 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23423644 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.858216713 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961494725 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05160162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.185171224 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971423481 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.172800425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196125046 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282168432 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433975073 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.127923372 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404306666 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23393056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.33879418 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96158175 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555241488 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.97671316 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.725911149 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.01190238 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.039667808 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260966559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980362106 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357374724 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.992826031 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.164733231 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.486317468 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.647915326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340264983 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.960354762 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033213882 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255803893 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378036255 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289164236 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03577316 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983312034 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.674029577 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106999622 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.947349238 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.249657272 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.971083522 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18456226 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.683337312 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980052274 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263419847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285844114 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.966325585 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.982110754 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027684499 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.981300516 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195754618 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23437273 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226643836 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981031834 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973044332 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.788586838 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255456451 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035626923 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905502185 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.973469363 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069718422 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222823684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990179862 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.489984121 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.674735467 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268514474 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.892348578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995479249 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398296475 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414530486 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306610293 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.501955189 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201836078 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.532590025 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.838124651 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347079724 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.980364188 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39872096 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34721506 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.976335726 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.504091424 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080178561 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.239877229 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290116127 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.978896924 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778062985 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.023782919 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202143215 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585970017 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913416091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.985139708 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.033457748 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.970473526 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.096911218 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984180981 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.956371362 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867351447 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.804271926 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455923661 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.967475822 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.950627477 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.759387261 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.528034897 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082307789 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122421036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968204053 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.74684859 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.250275722 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.212656566 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.479601186 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.027085705 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.959497636 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955922077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884425757 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.149196159 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.15978484 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255958134 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.303953434 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.059341075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.949918583 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.162781737 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15878723 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.946371886 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103041692 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340871169 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055212793 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.850867405 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.658396422 seconds)
  done (took 1727.071179399 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953043172 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.320425258 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.972045346 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.009754422 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967519066 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.032241799 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.999668348 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984020436 seconds)
  done (took 58.108792762 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.960609212 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.186219149 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.962206005 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.95255075 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.001142447 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.968777518 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.223785107 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.966755728 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.992546018 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.962766693 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.953808524 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.953186023 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.316989237 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.980006949 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.954262591 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.982301463 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.000820174 seconds)
  done (took 76.22726984 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.953382165 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.296228848 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.965087703 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.962427399 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.863967687 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.962153646 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.975005566 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.004034556 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.956304486 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.132070315 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.284412318 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.966155969 seconds)
  done (took 91.194284073 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.971137717 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.960426631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.960899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.960007 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.959830563 seconds)
  done (took 11.692580636 seconds)
done (took 2249.204242239 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.195008747 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.169387656 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.179172049 seconds)
  done (took 6.221176791 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.105128901 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.153124296 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.273991701 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.292607501 seconds)
  done (took 10.700438591 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.245312038 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.340414892 seconds)
  done (took 6.45957158 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.285080196 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.97108481 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.36729479 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.946512347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.945883258 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.94992699 seconds)
  done (took 22.720251822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.950707829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.953787951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.9506992 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.955466203 seconds)
  done (took 9.684701766 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.933408448 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.674431795 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.932683593 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.946736804 seconds)
  done (took 21.361025478 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.699817429 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.348749453 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.704712 seconds)
  done (took 9.627365802 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.445905676 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.19654424 seconds)
  done (took 9.516566654 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.187094943 seconds)
  done (took 4.061737024 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.978774979 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.222037845 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476851562 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.476504337 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.580844157 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.784130748 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.294747755 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.202152221 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.407857894 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.419953775 seconds)
  done (took 25.719084559 seconds)
done (took 141.761901967 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.388733764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.988890152 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.165358381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.325812779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.196339203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.162714622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.178734773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.31434103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.855322996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.841841928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.330662817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.195294649 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.118883966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.98096002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.13160062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.980410928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.184519167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.421954599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.043511672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.232704916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.179786335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.975664423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.171882815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.993238734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.191738639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.1115102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.518060637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.984043171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.181823124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.537658559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.117888342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.371530671 seconds)
  done (took 171.24985176 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.960779291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.962555145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962228701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.960988435 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.269228384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.961886228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961978602 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.960333344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.025174842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.003190053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961625498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.246333405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.961502359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.961451423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.964573108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.961806938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.181760563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.962348926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.9621004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.965462422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.966568843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.115485643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.966144681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.157308847 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.175237546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975012649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.962379807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.978909085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.979487386 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.980037552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.981603547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.963035351 seconds)
  done (took 210.23868708 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.961904313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.964467114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962446929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.962484891 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.969453953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.971715888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.965372876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.963882153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.524696968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.532067305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.97859482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.973207111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.975066707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.963117021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.976347654 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.964752258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.975787873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.977980644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.978057024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.978282539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.981332922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.649839133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.980671546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.650486548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.976035875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.978774609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.966274335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98137572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.985960326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.981668125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.984205932 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.967777242 seconds)
  done (took 223.504839954 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.145457771 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.961043365 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.962279212 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.888410636 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.963075186 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961277268 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.955338528 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.146555702 seconds)
  done (took 19.888306783 seconds)
done (took 626.766050337 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.446496049 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.290948646 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.145280459 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9869641 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.22345438 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.031409734 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.982631286 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.050876153 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.711733578 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.080773767 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.631481111 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.015016174 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.716198504 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.012482623 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.099643002 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.042757877 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.536297875 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.615429724 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.168852746 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.041054996 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.15558909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.946400942 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.063083216 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.758254304 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.753498787 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.012674735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.148035022 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527355689 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.992327401 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.140057899 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.748524455 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.375740444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.006454303 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.992159176 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.040327203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.040473195 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.319183035 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.00673724 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.116387691 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.752115953 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.051069257 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.595807223 seconds)
  done (took 107.254041393 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.955417537 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.953003596 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.95255779 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.951935654 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.953065305 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.952579569 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.951946959 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.951248897 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.952301744 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.953558872 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.95123111 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.954889629 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.952149868 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.953408136 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.952868085 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.952519267 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.952818108 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.954957857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.952836572 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953652965 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.952964762 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.952639204 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.967378926 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.951625466 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.952682301 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.953682949 seconds)
  done (took 52.683601721 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.964593275 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.142938181 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.210182344 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997179377 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.973395879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.977506053 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.993911662 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.972105433 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.978509629 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.979783402 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.084500528 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.968800718 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990632622 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.205219777 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.991475988 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.96299943 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.965234282 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.971956463 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.145305763 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.989622404 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.992047222 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.967544827 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.992724113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.987324569 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.974175478 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.972117801 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.976029604 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.474715557 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.983213774 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.082571918 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.019175165 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.998901335 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.422308944 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217799847 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.031732511 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.976848661 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.964396599 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085198505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.981711871 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.975859457 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.992464432 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.979174405 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206563971 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.472962576 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.990734539 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.966672267 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.485074647 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.09523347 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.01559256 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986027714 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.210276216 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.99316565 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.965880278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.974426515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.011466727 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982614002 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.97420152 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.323188955 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.987850076 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.993677333 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.971267488 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.97509169 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149786246 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.986820651 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.138253537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.986201072 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.982147258 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.976963316 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.209777784 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.995816662 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.478000765 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.991108405 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.965357693 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.084372066 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.144569268 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.51630667 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.990154103 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151202557 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.439523663 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.000591966 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.985195798 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.46629009 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.005654828 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.985203599 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.96838739 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.968977739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.96900685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.013217055 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.995095819 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.405734543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.481743092 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.346011721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.003393588 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.992826745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.978322336 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.326024578 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.975389441 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.967845704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.204896748 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.483378518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.99294291 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.985516428 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.468494443 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.995487154 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.996657006 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.987934249 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.213670447 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.99572918 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.011452784 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.968404273 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.983613988 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.980570231 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.995500866 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.98530802 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.969302144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.453886199 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.106213889 seconds)
  done (took 244.785696418 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.972794434 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.996348717 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.973488497 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.999264227 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.972137331 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.978764066 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.971446641 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.972904392 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.978456381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.971593279 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.97234175 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.973739421 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.973636995 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.975657926 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.077959069 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.979642844 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.584648696 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.975371765 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.973095525 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.979885998 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.728323959 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.981814518 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.97397555 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.980282522 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.97291267 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.9738904 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.981264212 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.0691786 seconds)
  done (took 170.806281244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.969374539 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.095425874 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.993424849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.008070912 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.979992363 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.967682863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.002894827 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.995547263 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.984888419 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.968265508 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.967276903 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.041862669 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.982332377 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.068390009 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.010744805 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.004194469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08218328 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.977434321 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.968658251 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.967963535 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.009245404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.966119524 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.041857852 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.109344792 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.993603382 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09895735 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.979376369 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.974676315 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.981107218 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.099109508 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.989715457 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.031946197 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.011188394 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.999003051 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.102834172 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.099929193 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.074108377 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.001697852 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.985490724 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.970149197 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.969632999 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.958920416 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.0994845 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.994118051 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.98273796 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.079971937 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994390523 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.973194205 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.981127828 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.970719239 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.995081369 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.000596457 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.049784684 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119430805 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.011367163 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.998022079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.007292227 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.261068417 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.982040086 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.080145249 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.965012763 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.091336752 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.996407125 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.959597857 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.972868039 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.976883843 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.000761911 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.004605854 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.086419651 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.988953917 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.080173018 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.007501596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.979176779 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.970992505 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.973909726 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099321934 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.103942681 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.007451756 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.02253275 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.014293393 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.969362993 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.982822094 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.963473669 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.999791438 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.976998264 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091239432 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.105569319 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.981535536 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975825709 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.976020708 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.975520657 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.008410081 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.109430197 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.024227439 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070328061 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.05134165 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.062553344 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.992229374 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.987259834 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.97662478 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.04788564 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.993015387 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.986559218 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.312021942 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.055120548 seconds)
  done (took 213.936111061 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.454076251 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.029319472 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.043345159 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.313255444 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.423156183 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.841380698 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.038248962 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.0230637 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.05687879 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.213520076 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.095812572 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.047833306 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.022879297 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.006776006 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.026129063 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.053861676 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.03261043 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.366402495 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.162351923 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.140343533 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.020163151 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.326134523 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.36202363 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.432275952 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.070140991 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.360378327 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.7121748 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.16814654 seconds)
  done (took 64.744466906 seconds)
done (took 856.09096149 seconds)
SAVING RESULT...
DONE!
