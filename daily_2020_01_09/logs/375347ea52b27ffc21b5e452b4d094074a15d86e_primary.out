cset: moving following pidspec: 18741
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.387225706 seconds)
loading group "string"... done (took 0.585462801 seconds)
loading group "linalg"... done (took 7.180172463 seconds)
loading group "parallel"... done (took 0.157214793 seconds)
loading group "find"... done (took 1.138728493 seconds)
loading group "tuple"... done (took 1.781691915 seconds)
loading group "dates"... done (took 1.431146589 seconds)
loading group "micro"... done (took 0.228483379 seconds)
loading group "io"... done (took 1.043262311 seconds)
loading group "scalar"... done (took 38.389876922 seconds)
loading group "sparse"... done (took 11.87333083 seconds)
loading group "broadcast"... done (took 0.94764635 seconds)
loading group "union"... done (took 12.199629276 seconds)
loading group "simd"... done (took 4.497454674 seconds)
loading group "random"... done (took 9.083707982 seconds)
loading group "problem"... done (took 1.837146566 seconds)
loading group "array"... done (took 20.869016597 seconds)
loading group "misc"... done (took 1.686505634 seconds)
loading group "sort"... done (took 3.331573144 seconds)
loading group "collection"... done (took 17.356622757 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525451582 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125479343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118796364 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119758541 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147849517 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112903957 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126033377 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086324151 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809370972 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148736382 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117392058 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430463955 seconds)
done (took 4.095448716 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173880455 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083619869 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083925086 seconds)
  done (took 0.210354044 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065971241 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123568377 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066770738 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067276576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067118507 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066875246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066765796 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066154684 seconds)
  done (took 0.569527878 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073031069 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069185611 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06649947 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068531251 seconds)
  done (took 0.324506975 seconds)
done (took 1.411929595 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792240003 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207594402 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189012181 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413858958 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131848469 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158935122 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639736329 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.305792411 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194370438 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080994745 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108986923 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329502753 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111913733 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641977741 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078372182 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090939147 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137279403 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43261031 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067621459 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082532938 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.0893078 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129101705 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085996789 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075094135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148306704 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067780081 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137415686 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080418498 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06761147 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214081356 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172171361 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647443503 seconds)
  done (took 9.183535363 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096853378 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097383604 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069225306 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123532254 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.0977186 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069870918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07172605 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068341397 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087809216 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128508173 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089335846 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101317601 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066121611 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068680477 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086258351 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206031713 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083386059 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081075812 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070612685 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075870528 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105737069 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077835851 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07713569 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077160227 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128938846 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180252255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096359514 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097056653 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066654848 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080227446 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114857656 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127907952 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06654923 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066112089 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123706008 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09442797 seconds)
  done (took 3.540780292 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.006575974 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144423878 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090809599 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135428722 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064719169 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109431841 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066046166 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081444638 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210832629 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.380306185 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594379244 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111619862 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104173713 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06773418 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068218327 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067465839 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511979647 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096958868 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108048597 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082157297 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070354533 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069410516 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354656608 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067935226 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06425077 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068515776 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057802002 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125505454 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068281766 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.950801827 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127581522 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066470287 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101768942 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161439063 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083430997 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088044279 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1415482 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.199875453 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065597508 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154043377 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070698037 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09324826 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066493947 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084161973 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104254299 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113757545 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065871537 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06695372 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165598015 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065767817 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080196459 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.643206668 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15510124 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079762393 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065348361 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254175281 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088752983 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070004284 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064745725 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211299049 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132878634 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06788077 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067130444 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068923694 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069619858 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360402207 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066650118 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.20886412 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068097987 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076288334 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069256599 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070067332 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073873829 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072733263 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088100249 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067090477 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075751929 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06580416 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06659098 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066822845 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083887766 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382900237 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067354839 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068416201 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0657298 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089510495 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096729267 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069980699 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067914057 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09996953 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068396116 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066805954 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064355657 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107315425 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067152622 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083245745 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069346557 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113323696 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069266811 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.225448886 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068371338 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098166028 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070030641 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064132189 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099772039 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082316842 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070150088 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.425296816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066150716 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065542546 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068223482 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065556754 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067676856 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067203319 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078977781 seconds)
  done (took 20.431157296 seconds)
done (took 34.206559415 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245757144 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086434359 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075618552 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074410292 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074206777 seconds)
  done (took 0.632531482 seconds)
done (took 0.713368586 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1259321 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102809034 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066754078 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099810522 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064897398 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10313176 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102478006 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081886237 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100881814 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065116907 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098316974 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064992953 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064353 seconds)
  done (took 1.217637765 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084095926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084477386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070028094 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083738805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063298209 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083308168 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08219842 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089588523 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082156361 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072787524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06416484 seconds)
  done (took 0.927528206 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083174201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08561117 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070212266 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083376724 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063670168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082933998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082909274 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087468205 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082796464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074459763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063969706 seconds)
  done (took 0.917283214 seconds)
done (took 3.122506191 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080776068 seconds)
  done (took 0.109570387 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.594921331 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.088581848 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.0830275 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113006613 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190366661 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119094069 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273595897 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088357151 seconds)
  done (took 7.779601604 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090400225 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083016226 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069508707 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069424527 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07303901 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069759161 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069528967 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068475401 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071115696 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072152207 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072509176 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069719919 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073167088 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072490714 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071756294 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069522989 seconds)
  done (took 1.354973548 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093406919 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09180898 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074495905 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076089906 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072989876 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072312979 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074147227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074070795 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071154764 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072173342 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075644198 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073662777 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071605871 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065420863 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073746659 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075406581 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071581515 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074305342 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074390869 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075364569 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074928775 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064706395 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071416275 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073865335 seconds)
  done (took 1.946871364 seconds)
done (took 11.247629074 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118798469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07372508 seconds)
  done (took 0.223724922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082613557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083713049 seconds)
  done (took 0.214272761 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083137737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065341941 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091138881 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07853512 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066584546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0664103 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089533396 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066811491 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065802971 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066650881 seconds)
  done (took 0.789409168 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067892909 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077592178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070455207 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080813801 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074448954 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064359934 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072655643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06775407 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078244402 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062837717 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071728149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084041237 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071726283 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084897466 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072732339 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068812629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070877019 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067995286 seconds)
  done (took 1.368920963 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065677152 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066802823 seconds)
  done (took 0.200455232 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067070472 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063173596 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067156202 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067115278 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063781082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06255093 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063105695 seconds)
  done (took 0.501649982 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389176047 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113937857 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.31406636 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071087161 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08276552 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256363973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066999912 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071228802 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071670814 seconds)
  done (took 1.533655973 seconds)
done (took 4.910386284 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079920514 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086465907 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097274344 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.374553609 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091197056 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066200638 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114603362 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192507834 seconds)
done (took 1.17800561 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213510599 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639662904 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405670523 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205705105 seconds)
  done (took 1.299259477 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345274458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088159925 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058989123 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066590431 seconds)
  done (took 0.627603277 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065898613 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069474309 seconds)
  done (took 0.190246419 seconds)
done (took 2.398774687 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0688745 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068312377 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065663729 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084153086 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065863099 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064145239 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063086665 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066835465 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067434418 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066848091 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069503888 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066795703 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064647601 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064355138 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064054886 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067156383 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064447572 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063910986 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064120271 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066925359 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066372654 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064491888 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064423327 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06632251 seconds)
  done (took 1.672485566 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084491293 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066435875 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072198513 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07114454 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070078092 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071473077 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072125668 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067080365 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072710107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068925783 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069997965 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069796771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069166839 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069078661 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068557174 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07155334 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072119689 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066150692 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069136001 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070195631 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071066439 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066119119 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07043276 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072017178 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07009486 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071376601 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068559812 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066015788 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071119154 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06913892 seconds)
  done (took 2.182831098 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069551945 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063307326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064016297 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070607394 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063884301 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065297033 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063891091 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064667758 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065161378 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063714744 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064894166 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06338815 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06466052 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065132077 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064935213 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067491596 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079350953 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063999782 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064025202 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064378841 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067320239 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063480433 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063820342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063872487 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063756839 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063493825 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064226272 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063887367 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064613009 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063724297 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066864053 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067150271 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063568545 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070664486 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067210241 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063509955 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068142902 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063349265 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064281955 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063201083 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064003694 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06348844 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063733491 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070355146 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063414178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065639386 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064183323 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064852067 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063968276 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066234816 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063361047 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063990745 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065707247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064972402 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067621757 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063408263 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064094349 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063405081 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064506734 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063377372 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063140026 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063623028 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066540671 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063870017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078996623 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070226716 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063734919 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06566236 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064214024 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06625662 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.179533401 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076843448 seconds)
  done (took 4.915024276 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089315868 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087404382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065590554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065024946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062170552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06388505 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070430152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064061399 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065969543 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081615822 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06579905 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064866252 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065508779 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067923481 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064320795 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065838659 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072239387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062267338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063771135 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06811195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063870132 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068838187 seconds)
  done (took 1.62115593 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155348918 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069967604 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105830007 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074760518 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070429348 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075160075 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069776098 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069531255 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069863734 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067304656 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067763792 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069899095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069928454 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067879473 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066756865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067268641 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069558702 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066922493 seconds)
  done (took 1.44682658 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076496607 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066242978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087351061 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066053134 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066510242 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069204986 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070249034 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074348668 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06852438 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066005433 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074416816 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068831488 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068410148 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066376216 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06781825 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06655972 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068061496 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066079798 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073974292 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070287617 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069855121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074125511 seconds)
  done (took 1.617906157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079419156 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067867055 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0809778 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06864526 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062271596 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064825826 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070352892 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066593883 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070246662 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068003914 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065420857 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064147449 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069070944 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066406249 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068718149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06568679 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06800365 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066054797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067829124 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061974219 seconds)
  done (took 1.435613023 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086205905 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068383942 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067828556 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076022203 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068142894 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068711634 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075697012 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067895078 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06837341 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089603278 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068460213 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068434133 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076004258 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073013638 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067966341 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076398493 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075025558 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075710381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067851717 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067946835 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08836328 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068438801 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075145024 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067777752 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067734827 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067373912 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067446004 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071628613 seconds)
  done (took 2.09761268 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066382706 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066166251 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063345095 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062919891 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063649377 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063655631 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062999879 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063863239 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065849259 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063425714 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066111801 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066069916 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0662494 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066003172 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066994996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066285748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06578386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063463583 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064120922 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063083742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066046911 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066341625 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065604866 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064117044 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063702298 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066178198 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063683671 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06351194 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065596839 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063242451 seconds)
  done (took 2.026888448 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074631634 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072580034 seconds)
  done (took 0.221609659 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063852796 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079730267 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062748096 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070485347 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070020651 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066860634 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073153043 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069617807 seconds)
  done (took 0.6089347 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082413384 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077142724 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067380286 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078928163 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076529654 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083934859 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135170207 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066874606 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073488857 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064249537 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080285042 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066086939 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07325596 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066571863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072020779 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072315407 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063687624 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071638785 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068474069 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064587769 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06773163 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074628703 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068564483 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061979356 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068342753 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087997841 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07728015 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065314882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068706992 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073117722 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071671493 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05998983 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066093424 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066549821 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06386525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076285564 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081058628 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068519176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074413182 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066810577 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075884807 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061051591 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07073295 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07251661 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076394735 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0668424 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066496503 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06094791 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063996451 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068426907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0610009 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068761021 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060713199 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072916301 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069773614 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077578252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065551783 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068074329 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069257153 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070057779 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073365267 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068592353 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069049299 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066285536 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076540083 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071170375 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074939973 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06156762 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060317865 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064070472 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075494499 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089419533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072231005 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06650776 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06684895 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063314261 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069343826 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0670033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071465121 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072976326 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066006641 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071599583 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073426269 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06626994 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06865236 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074042041 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06432188 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068518068 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064464181 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082542606 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06538698 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063448775 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064117614 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.0764878 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069323299 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06607055 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064115359 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073315223 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060140538 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066248897 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067202256 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066851845 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076247586 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070679938 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070899657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07486229 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072941893 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065472349 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067875555 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061619994 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065564991 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064206189 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072165753 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059354004 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067803927 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06622088 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065571226 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073284057 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063281444 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065022753 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073194613 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070980861 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063513052 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062443232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.194642313 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067273135 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07128439 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075250517 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065882684 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061427917 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061841688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070304086 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066062155 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070757649 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071707412 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069408506 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061105205 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064993778 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071427069 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075601913 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067537323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067456167 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072719982 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068252788 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066816366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073344879 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069043058 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066512813 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072307162 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068264748 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060981408 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07019336 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070042542 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065531361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071171588 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069473698 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068349036 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067128384 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064990581 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072840875 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066586871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065619497 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06690875 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065387252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076498833 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068662611 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061205768 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063271354 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07444066 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064228745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065205229 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065331128 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068503322 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066841838 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064074334 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066007646 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068966701 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076338649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069652763 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067551167 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07193652 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078131076 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066266093 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06859605 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066091602 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0672107 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067109535 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075494351 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07195412 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070625928 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06941567 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063086893 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071641397 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073734225 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06568187 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064289053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065900527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070784432 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072680255 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070571239 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066936356 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064239536 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066763183 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069626184 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069045199 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065974252 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065460218 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072517626 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064304136 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073029375 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066956186 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076563687 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069708058 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061532046 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068968937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064977953 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072931256 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061950977 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064362346 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066003438 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067140136 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065563153 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068844297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060697472 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073717212 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075164206 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066774626 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065595908 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065753395 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074484278 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068123925 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070101267 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069523961 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071621834 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07655903 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064992097 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068571807 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075053135 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06489859 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059135278 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07098059 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063464401 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063699284 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064388524 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063624162 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067552133 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072760597 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071398562 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059161722 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067582521 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06385685 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.193015173 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063113838 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072612286 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070491145 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067832373 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074375101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067266312 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067337847 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071510577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066407759 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06788373 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067585816 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070253015 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06778478 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068582654 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065632922 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069975231 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065697088 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06408428 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068908378 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067930172 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067645275 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072241727 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065830997 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067651867 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06923897 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067630748 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067659408 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067557698 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065765349 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07049794 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066904597 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066153526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069773432 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061748778 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074156688 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06541961 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073874229 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067087196 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063304254 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072671747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068685521 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071578138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067555144 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066923773 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068172803 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065914471 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069643315 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074240271 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06431142 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07683571 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074603928 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067917057 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069289683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066978464 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068006292 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065538039 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067527672 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067053197 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066513158 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066173799 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070513549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068558856 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066186564 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06775977 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067138737 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066852437 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067432857 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061071904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065464557 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065673475 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066143814 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075586164 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066749472 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065536945 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065539511 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067499338 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065190251 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062687417 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07415971 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074867096 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066636632 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073353992 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065577032 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067998007 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076817911 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06034148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064303626 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064173347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064034289 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07373307 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066941349 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076019972 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066711728 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065741883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063056124 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066681374 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064708074 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060408186 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06431375 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070435308 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065470301 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065625026 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066119983 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068787139 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066888877 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075438725 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065461111 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067157301 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066642182 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063185898 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065572496 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065305154 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068737276 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067086946 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064435626 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062822103 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064856193 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066009875 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066384424 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067226081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066693701 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071417715 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064487755 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068131514 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067531324 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059862694 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067627022 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06508087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064551462 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064506799 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068377374 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201090728 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067273633 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076618338 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06705806 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067904161 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066866876 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064849685 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066575502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066484894 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067317831 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065832884 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068082634 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075060619 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06491293 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070506561 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066764911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067210903 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073152341 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067796779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070088292 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07280419 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067585138 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068860598 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075242271 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071356199 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070511718 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067398381 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068125615 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073153718 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065622309 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073207902 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067666761 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066981669 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068373476 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065095717 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066964248 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066445182 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065659507 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07256982 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06709381 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065448384 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065961296 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063843546 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06718642 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069335609 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073753859 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06931923 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06915885 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061242908 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063341934 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066587458 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064162811 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067813395 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068778617 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071856044 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068416746 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066696382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065282909 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075049522 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072371181 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070192593 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064486203 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069872045 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067693678 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068559865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067929766 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067013122 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067788875 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070270824 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068268047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066325449 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073027241 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070234969 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067353396 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068351755 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067842453 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067171343 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061523212 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066756519 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068387913 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071544881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068976425 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066891971 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077093415 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064809959 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067335053 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069681404 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065586619 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071074607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06171068 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068267283 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067776985 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06717485 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061427338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065651078 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064637741 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069907976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065487043 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061317319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077120658 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075708036 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069655811 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065828983 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065452975 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061526053 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061888304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066509144 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068117286 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068494826 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07670691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06599313 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065706898 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061472915 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066956734 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069889447 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069504354 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063620161 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060847144 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065234693 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068743149 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070824846 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064070901 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065074171 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068978692 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067684465 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063742077 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068268347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062612044 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069441267 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07806281 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065311544 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.197665733 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074925871 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075294138 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067149888 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062252553 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067378847 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070870916 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067906003 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068118687 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068037135 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083251955 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070295194 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06633619 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066734448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069948633 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066507598 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075071471 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06774747 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066820239 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071431297 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069157626 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075156684 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070229581 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073892885 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070533505 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0700494 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066173872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067315306 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065608225 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066177311 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068098419 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067682606 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071954591 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075172045 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065328549 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077299057 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076085745 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069183309 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063303504 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06646519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066701862 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061966373 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067866945 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064802439 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064824907 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065549168 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066362457 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067826945 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071808884 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068084341 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067038257 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066675209 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060569023 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068840211 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068969094 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067923676 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063045752 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06681048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067454145 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070465233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069721511 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064611398 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06832178 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068556557 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067126232 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061258245 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072821797 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065893104 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068078056 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06581114 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066652538 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067127232 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069603846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071310287 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067289435 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068512729 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069935817 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068051387 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063437712 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063479244 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071429489 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063874765 seconds)
  done (took 41.357774189 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100233123 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062947006 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06240501 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061750974 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072665593 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063297104 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062533462 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062954073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063103217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065132931 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061990271 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061757192 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071061779 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078807892 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073419067 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066352032 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061629042 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063037066 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061956597 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06288362 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070789926 seconds)
  done (took 1.55492073 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073459722 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076521301 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075214416 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081919782 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071286211 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070205725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075518246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071504163 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078141761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072680663 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07985399 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070754419 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071604712 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072871 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071805381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070826773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078297428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071501409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069734538 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074803312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070169053 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075035414 seconds)
  done (took 1.702497749 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066950012 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066357875 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067555689 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061357033 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066115689 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061010502 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069014669 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064143009 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069096016 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065817894 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064157824 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065004983 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067872228 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061234395 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065428989 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063465747 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108686355 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068642012 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065499658 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066747549 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061539991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06738035 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060624422 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061783935 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064803359 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069122487 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066543739 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063779901 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065038229 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064635067 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065817678 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063542251 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067599475 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066111866 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064805503 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06541994 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065545499 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065537695 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060976896 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06357144 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065836836 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061498468 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065616262 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066552183 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063881726 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063282985 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066647915 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065195833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06025425 seconds)
  done (took 3.311433897 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078547635 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109116908 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067067593 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090599276 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079900295 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072353341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06968891 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089454956 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063768698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064162192 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081292971 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078960712 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065677572 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06959765 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069576553 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065945886 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066966039 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064723677 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06929606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064356489 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069741121 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07276028 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07874413 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0782858 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069405563 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064536677 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064096016 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069634923 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077031645 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069180276 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070055404 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070259837 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079981092 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070245406 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06479396 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06753563 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080928883 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065480792 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067895728 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062866228 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067660557 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069210657 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071690664 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081182433 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065115819 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070182444 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064835156 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062520119 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07679457 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067509773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072693501 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078706631 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069563234 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065191587 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069556799 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079239697 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065651415 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063605149 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067903275 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07687339 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063373952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068472283 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078331777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067328921 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07195685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07789497 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070055843 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069030541 seconds)
  done (took 5.100961551 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075817455 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095316809 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083029109 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084034521 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075502182 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075132734 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076624574 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076029345 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076056314 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079527447 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075412007 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115224841 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070737227 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07853588 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07565948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076064306 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075801444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075049686 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075811276 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075227659 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075944831 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083605595 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075415898 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083486664 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0798889 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070574501 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074511626 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075117812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082321922 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074676688 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08732257 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074908357 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075136687 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082570961 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079316407 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074951638 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065612296 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075027094 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075908126 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075158885 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070652051 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082679796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074881895 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070987089 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075407568 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074994566 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082892193 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079843191 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077510223 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080086816 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075796778 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082703648 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074986802 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075268492 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082699752 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085437305 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082489368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082979998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074978333 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082089435 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083271173 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084853855 seconds)
  done (took 5.014102235 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082016383 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074450837 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082191134 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061656976 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064299184 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072576728 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064049214 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06405158 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074725169 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074827607 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076712141 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071857384 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07469717 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076941685 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072031692 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074791968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071935765 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071723146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073955608 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071750346 seconds)
  done (took 1.59136223 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074117212 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082964418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066845157 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071536031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069677436 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071822349 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068312017 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069147732 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067197445 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069245708 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076304411 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075899473 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066641375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071927158 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076492356 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071829656 seconds)
  done (took 1.232725515 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083663155 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073329978 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080692414 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066460556 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066683387 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062339634 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065642959 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061167159 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061776253 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078693664 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065141923 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075659755 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065642367 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06486197 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062678061 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071018393 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061933765 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063986479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06553185 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07853733 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069800812 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064381711 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06897013 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065872049 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067748436 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069723082 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064753794 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065701003 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063009765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066247502 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068542822 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069600965 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062226721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063855036 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064416517 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063018424 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065155178 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065486843 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070913276 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064976042 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063668596 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067411152 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065277362 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066027379 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061634924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06572767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061806786 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067769933 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063385337 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067872984 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065620883 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067995656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06616121 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072156671 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068563143 seconds)
  done (took 3.768090009 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07895062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069344129 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061129899 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064419742 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068847947 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067788593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069996669 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067800134 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06725991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064886499 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067822042 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068634483 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067069979 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070567439 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067296015 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069794712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061357803 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066957609 seconds)
  done (took 1.334088038 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071787523 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066199036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073232992 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065891047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065564777 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06836165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062463062 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064610486 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064990069 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066200745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06555573 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068192368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064530273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067750004 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066007629 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065798085 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067808901 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064527911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065618937 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061830315 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068050864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063880498 seconds)
  done (took 1.534949217 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093806824 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082626027 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14018917 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078694919 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084553486 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07138617 seconds)
  done (took 0.629814272 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090054833 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100116252 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066172342 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06856549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075844622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069931549 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069759857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069961153 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078041904 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076929327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070307443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078221831 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078479605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07809258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076505614 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074943657 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06949784 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069514191 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065852959 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083771248 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069714105 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078298892 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0704979 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069246418 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069913955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078004746 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07854601 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075655507 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069594676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078727958 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075013966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069883078 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078113653 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075401864 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069089833 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077713622 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069592715 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083260023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075182582 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076781617 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068977087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07528031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077685924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074310631 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077747658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069872227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074361251 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069353087 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069996526 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085273393 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075840006 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076685381 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077952119 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078481636 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077736409 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085329179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076158048 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07724665 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075482506 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075532491 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077248626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075419452 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076511486 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07557205 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075341162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076995429 seconds)
  done (took 5.046284572 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102780117 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066644756 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069269242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076114181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077943365 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070244945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071378234 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070821475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069982159 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066624897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109031974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070036631 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07874364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078336264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069669231 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071124918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0701336 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078230947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066411065 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086671635 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070311572 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077656915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077671763 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077946645 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076213302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075446311 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07072643 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069157753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069505722 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074548632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070113483 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076874642 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066498138 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077287392 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069490738 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070009024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07452719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069939482 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075519035 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077142899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083160202 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069721696 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069880585 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075655977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069918769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069686167 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067042494 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070234812 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066931857 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075910573 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076044805 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07580424 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077597319 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07065986 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070780564 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070390601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069963522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070060124 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075725104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077508159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070217011 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085920485 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069968897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069804102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077129791 seconds)
  done (took 5.029055633 seconds)
done (took 98.103434369 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186904904 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164329838 seconds)
  done (took 0.388531128 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069336105 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09832444 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077100697 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128330791 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066755019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100288456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099581024 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078306766 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066210393 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066038676 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066854917 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069575927 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132382746 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066858745 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066775846 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069268568 seconds)
  done (took 1.381815681 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098836873 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162507766 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102917917 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06482857 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099984703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073476777 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065233594 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075195443 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071950578 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065626661 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073339553 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070812122 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064689152 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070906515 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070557298 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073922929 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064674673 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072923257 seconds)
  done (took 1.517677379 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098971322 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091134419 seconds)
  done (took 0.270592206 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164108796 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106400061 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145723788 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353357348 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165142382 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148640073 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14315595 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14293249 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116850025 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139466372 seconds)
  done (took 1.687023918 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100144832 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153461567 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268319348 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118604051 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073568996 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093999973 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119702679 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079586896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080794803 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080274984 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080682166 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076057702 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099648286 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072913177 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07453881 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076204094 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103174285 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072784201 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074737166 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076308615 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101218423 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066876216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072979468 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073395091 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077563498 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076835539 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066159711 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065680748 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075752304 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074188632 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076453522 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092772429 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077149059 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105425384 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070542148 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106640586 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076366227 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07304289 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074128721 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073059581 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077459061 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077302636 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072762152 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076032854 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065855198 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076354978 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065296639 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06535274 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077214331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066832387 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076910353 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076055601 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105509892 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066578206 seconds)
  done (took 4.703499187 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102319289 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106126138 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072014098 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111936189 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103392531 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072668593 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10371768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095666231 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104829962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070273375 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068888045 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070250933 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082779735 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083215855 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115468825 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106324474 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074525987 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072191485 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107025823 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104773178 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069032908 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097465717 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091965477 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103134275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067250928 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07017494 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068584777 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07045913 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076670964 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078295553 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069625929 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080169107 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084910363 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077823532 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06717585 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067932445 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06817354 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079221992 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079249848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07858117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077162826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068226157 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068357904 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069986962 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070060625 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067659701 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078392741 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08034313 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078676402 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069613941 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069962422 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068270089 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069700189 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080276208 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077121689 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083642406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07988271 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068160796 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068263357 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072287287 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08046548 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078791932 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07923764 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069205902 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078107524 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068255749 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079786687 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083796848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068122682 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069494733 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068165023 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069295061 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069327647 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07741141 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077852357 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069241345 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069634624 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068114088 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079342098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078030088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067986051 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076472644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066763858 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068169567 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069161004 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069327772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076944312 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079634489 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069486854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068407978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068783478 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068353262 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066803607 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076024119 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079598354 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078647891 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077982697 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069144111 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077082832 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076396935 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068664149 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077408 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06727423 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068574877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068762033 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076245725 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074838404 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077485776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067821565 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.195573337 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077802279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080753327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06860425 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077949827 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08039376 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078922722 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067759662 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080679805 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06869405 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079005896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070155092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08008328 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068683602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079557252 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068958749 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068651826 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069392094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079494739 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072872809 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068955262 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070127092 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070032445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079474657 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083404754 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071211846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077218231 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077562456 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071036922 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079994259 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069541173 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078704415 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069814933 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070414288 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067652253 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08144644 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06818642 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068420741 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069505195 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079870709 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068165859 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079486541 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077350237 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067869531 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08101915 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079453138 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077174221 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079581097 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070267244 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068007265 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068334258 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06952705 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077557164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079710809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070036933 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068412259 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077227543 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078798259 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06724923 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07822559 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077371932 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07834115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06787198 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069541109 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080287234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080947687 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077677399 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077872388 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078108576 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06850861 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077096884 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077596425 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068345586 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084109166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067803933 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082681188 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078452734 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076763366 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078758109 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079767636 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08300178 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079990629 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083200988 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067867491 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067788431 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079370398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06783599 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069045825 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077544245 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069028784 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069253325 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083123231 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068142471 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079421026 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067835734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078238868 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066701234 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069640501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082924831 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067940165 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068985214 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077366766 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068385943 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075796432 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078519403 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075867065 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067103419 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068626757 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077388111 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076647714 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066554022 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066678078 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.201324728 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078183098 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077818116 seconds)
  done (took 17.361930743 seconds)
done (took 27.454048294 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208982974 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152328052 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181991566 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118102097 seconds)
  done (took 0.788070569 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117482227 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103226849 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092693568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064889685 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098946125 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064473271 seconds)
  done (took 0.624462768 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309907456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209441553 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186734773 seconds)
  done (took 0.779249608 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200026839 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189868092 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414133539 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261172833 seconds)
  done (took 1.254112116 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143996482 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088270113 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067141804 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083962138 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133719576 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160227915 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100406994 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125381855 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078229234 seconds)
  done (took 1.108841339 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148919344 seconds)
done (took 4.779264431 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 0.15401553 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082850772 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.129038707 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131447993 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149181342 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099115416 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.200310957 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.197786656 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078399247 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072947771 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083167769 seconds)
    (12/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109099914 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19049796 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078106485 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071837926 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072286683 seconds)
    (17/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074550872 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153420185 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076831732 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065334866 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076219118 seconds)
    (22/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.158851526 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107208065 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.23009972 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152549587 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.239230613 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117300996 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069236993 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080387142 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158235089 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07165526 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072547138 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071875301 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05037508 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062670644 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.203818348 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089902171 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176042726 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094652168 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077102751 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226428523 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20315791 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087447243 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075968054 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08176325 seconds)
    (46/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072737989 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07270436 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085269343 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.151037197 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193835275 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10948768 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08837135 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099407266 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198440024 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067934836 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181365935 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067408554 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 0.131324192 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075803184 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090279246 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072585572 seconds)
    (62/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074261954 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065706345 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.074036881 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071638363 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137815493 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080679386 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.191937524 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071803302 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090012395 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066282125 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07322993 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159287663 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079839218 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.066711452 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172098022 seconds)
    (77/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051038629 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.184141625 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051954482 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11007571 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095396199 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098939524 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.159382808 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089267359 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113372257 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.164889711 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072878332 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088085158 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072376437 seconds)
    (90/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067116898 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075429837 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065695439 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.239497103 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14056135 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205530631 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051469258 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068142015 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140836887 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195046005 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066291797 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082431112 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083143228 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075470945 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088718173 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065325182 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089162564 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086267311 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06951738 seconds)
    (109/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07032304 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072821938 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064368368 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050722457 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074362751 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14474095 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089888733 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072809983 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208187142 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052769414 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11070944 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066341939 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.137678366 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075501868 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.161776572 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111604372 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050877792 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088472299 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072626714 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051064899 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051272988 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194245579 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077934147 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07158301 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07237002 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050612993 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181279792 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050906589 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072168896 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065145016 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147157474 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154543376 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052915719 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203880361 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051387067 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064830463 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.07655735 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072600974 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064906699 seconds)
    (148/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155040545 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065318358 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127273628 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069569944 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06962004 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094462064 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170284599 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073162571 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064926634 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149167367 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073289711 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067469367 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050289478 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051264931 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074589764 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091527742 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051758672 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066409574 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15445922 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052710811 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075772212 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050373514 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064846158 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154978286 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113166525 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.140361393 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092026164 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08764509 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111713388 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064958917 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051405562 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065381731 seconds)
    (180/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051256639 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146248445 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194140743 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074811901 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067641482 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091959298 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071900157 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079952019 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110278125 seconds)
    (189/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066533555 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066228236 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064335355 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052206749 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073459702 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050257734 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153801144 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072603254 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05169722 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050383659 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075337198 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128934611 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051595516 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064807637 seconds)
    (203/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063827852 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075873098 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063216715 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065736037 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050121443 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 0.295323874 seconds)
    (209/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070563698 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100478465 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052560362 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076597049 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110473699 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087316889 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089827228 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076333637 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051508651 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074261607 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073608771 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092362799 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091763765 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.14566663 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065692408 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065535605 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076454689 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071682591 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067622949 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156576469 seconds)
    (229/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100630158 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095808069 seconds)
    (231/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051639446 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067258434 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063438359 seconds)
    (234/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188062881 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083229785 seconds)
    (236/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064063355 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050944434 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140624624 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065292667 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088169079 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062319323 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054028483 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072276857 seconds)
    (244/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074299632 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052515895 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066115592 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091720552 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053718247 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106282111 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112132663 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.290566935 seconds)
    (252/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063765763 seconds)
    (253/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069867468 seconds)
    (254/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051363825 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06484387 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087392385 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051081473 seconds)
    (258/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050929521 seconds)
    (259/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061667839 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065852644 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071701213 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161397286 seconds)
    (263/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118999357 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073268079 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065394256 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050456302 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069263116 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176505038 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050605419 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067933364 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088804945 seconds)
    (272/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079996463 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092304855 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08830021 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071823145 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051997857 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065986366 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064827681 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181858577 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128334113 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05094168 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072979654 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063527675 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063787129 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072444806 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052236648 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071949949 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072546378 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065120406 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073593066 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050944538 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052247293 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050935068 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052221595 seconds)
    (295/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070670923 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050489382 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070931884 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175716925 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061770507 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052100291 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113205049 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050421665 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050534029 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066365199 seconds)
    (305/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062934606 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065084554 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085686779 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070423895 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052368016 seconds)
  done (took 29.507279335 seconds)
done (took 29.600613918 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082476003 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092625302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0752107 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092188574 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080332946 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076017828 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072592577 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079025466 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079832785 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082251205 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078199282 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054297773 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073588194 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074984669 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074339365 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091149176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077946688 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072420137 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073274556 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064161204 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073601101 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065420339 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067105961 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053491654 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079622846 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071785838 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07176725 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074428504 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065829355 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065407493 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069076772 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073471489 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064982256 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077780712 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072392998 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073257925 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075286197 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076773661 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067018915 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065385065 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074416093 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064985148 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072802493 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074088276 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071885489 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071189156 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072686612 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077498617 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090631466 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067402704 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073958946 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075782317 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075555858 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072088771 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069078998 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072901562 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070589148 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090303084 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073418741 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067538595 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073831986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074039746 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071540362 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073030074 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072656876 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074783297 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075182487 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071211738 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074163275 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071166234 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064883734 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072491453 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06841102 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064633638 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075302864 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076916762 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063704573 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071403632 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071838929 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07074914 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063806822 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067157219 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066409913 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072095816 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066646146 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053554596 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069317275 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07123073 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064115786 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073199745 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071059005 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071946553 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066556022 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075411378 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064339179 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070460481 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064729033 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064666219 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066343757 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068724805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0644384 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066552425 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074405837 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066105331 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071148607 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078637437 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065125776 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071939268 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063948858 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06391664 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079582189 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07413727 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065000829 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067456802 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063940451 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072251306 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063890543 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064824959 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06468235 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064994201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070784219 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064502349 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066449364 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071964648 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07721282 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064106997 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067711382 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065675958 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063929261 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069710682 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063927544 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063762738 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065690549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060559162 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066141796 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063678833 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071275119 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065740576 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071690363 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065048009 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071705718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.204731237 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07121306 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070952265 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064228606 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059039863 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06818675 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067422197 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066878877 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065161922 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067452965 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064724448 seconds)
done (took 11.070845886 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067552197 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140017241 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098129333 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095247839 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086275553 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066296334 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076005587 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101554947 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067408035 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102251385 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087333659 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084895671 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114713272 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06478405 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066219874 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069167247 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06680615 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082349772 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100894705 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086234501 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115773577 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065226467 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092716996 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090112129 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088406826 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094358817 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068816293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069502366 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06962717 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101783201 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087610192 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069622037 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065859445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098469692 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09369514 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083446469 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065745964 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082826128 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065963409 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065311878 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066693419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098740589 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080349413 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080470916 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069753046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068716614 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066092502 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083437685 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089387225 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078719329 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085732458 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101466152 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068342944 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065073833 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063738701 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085982873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064848522 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068853767 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065760968 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068097496 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065408998 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068776907 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080245292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079859893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069540536 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079626024 seconds)
  done (took 5.367212255 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082921988 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092054385 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083239277 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08427228 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065169624 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066510482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066456787 seconds)
  done (took 0.689365734 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066336674 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087417584 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088299488 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08899113 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080675023 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087071076 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076127231 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066391612 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088277549 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067388657 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088307603 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101073493 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069542257 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073874699 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090309057 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065924751 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091207768 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06633353 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069426652 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090628878 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068619958 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095659065 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069520841 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065910658 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080880641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066800462 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112901147 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070998053 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0678918 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069705206 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063859479 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107534129 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079817347 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074016954 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066504813 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080634509 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080771898 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064355747 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082246483 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074510099 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080099145 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066992931 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067447611 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063859969 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069901448 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07646128 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066853391 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066608085 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068327844 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085894514 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067458816 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07969289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069249421 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071528526 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067650237 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072704323 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077136646 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066971648 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086849582 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068431545 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0832042 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082513101 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080072964 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082479749 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068205708 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079994895 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07976997 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068679915 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067852949 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069673538 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082296099 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064512924 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067523115 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076843552 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067671989 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08967801 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08943241 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067597575 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079757331 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066830757 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065966269 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066032572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088963885 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071221818 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06577363 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070641019 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069085058 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064330043 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065112861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069825596 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06388853 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068043863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068710005 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06917507 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06882293 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083254991 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068653795 seconds)
  done (took 7.367588316 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068588448 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067999946 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068281207 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06704925 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067500321 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067575023 seconds)
  done (took 0.580883338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093812895 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069134008 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079880522 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072102759 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104570457 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087069143 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085797964 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077991837 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084362875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078342681 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08750848 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087800238 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093117719 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071623723 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086325542 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071160207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086662784 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075151592 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078054249 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072417514 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086878599 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071230983 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072905801 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081208923 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076164984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071581165 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067395427 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07880518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077425006 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078607202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071422734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075494737 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070187496 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07847556 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086464542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071339879 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071679426 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076775056 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07123067 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075802413 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087856509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072103971 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073639593 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077069998 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077599868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070384085 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076584401 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074535013 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085682073 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076179241 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076441597 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070675495 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075209876 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076510153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069882677 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07736431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076476212 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086488138 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071334133 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069884155 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068508992 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076006431 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076858225 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074903486 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078443187 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076566774 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070225471 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072113636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072106289 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071126051 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076736002 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068163247 seconds)
  done (took 5.633761616 seconds)
done (took 19.72899127 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535159609 seconds)
  done (took 0.580731875 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610969543 seconds)
  done (took 0.703896034 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.465612042 seconds)
  done (took 6.548145658 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40013828 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.520711138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719134151 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131139968 seconds)
  done (took 1.873988792 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705348972 seconds)
  done (took 0.821658546 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214016167 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201371239 seconds)
  done (took 0.525979438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374922372 seconds)
  done (took 0.452450303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127980752 seconds)
  done (took 1.204083929 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.258061674 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175766073 seconds)
  done (took 0.521796708 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.469445506 seconds)
  done (took 0.549052714 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.858654856 seconds)
  done (took 4.937313619 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212393846 seconds)
  done (took 0.350491953 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23342813 seconds)
  done (took 0.305543043 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.711747417 seconds)
  done (took 1.784376035 seconds)
done (took 21.308393363 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082102188 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080385627 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080290656 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077843672 seconds)
  done (took 0.364300582 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076108336 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072091747 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076524012 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073835147 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076093956 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072336318 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07362257 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075688996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.0720193 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072247917 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072267434 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072945401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074908427 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074185066 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069930378 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075148816 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07566926 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072188059 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075449707 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071922225 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06974456 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074079705 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075044565 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070722679 seconds)
  done (took 1.839664357 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077046833 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072301127 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074467841 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071710852 seconds)
  done (took 0.390421331 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077180495 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094244833 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088822093 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077287834 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092801055 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086655565 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068739361 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068601253 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069961801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078098077 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067148176 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095415344 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087449576 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077334943 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080067392 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065365641 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067479733 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087037556 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077634703 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077596 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069380975 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077313884 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067479571 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088173439 seconds)
  done (took 1.961504914 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084607753 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103814606 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081386791 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088902693 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090745344 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065247921 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087477438 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090424187 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125916539 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064571071 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070130422 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065227805 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072762868 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06479459 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080544679 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107197805 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110687172 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069275005 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097462568 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065286268 seconds)
  done (took 1.785718342 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071831043 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068948056 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06519302 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068809428 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076251728 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07293539 seconds)
  done (took 0.5202305 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067848705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06739187 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067423481 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066221551 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071560743 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066873448 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065847998 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067394784 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066914886 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066505899 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066167216 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065462301 seconds)
  done (took 0.881965961 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200847989 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068023036 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069109099 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065435221 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07094327 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06606486 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082065695 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067703044 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091459945 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066624586 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066532871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068438485 seconds)
  done (took 1.064645251 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206718098 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075593707 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239744102 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150758505 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11054283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115512775 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112396278 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113817815 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142568187 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101431096 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167964289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165436383 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107288698 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137562871 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088494899 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099719331 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15322993 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161629402 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104187824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165881687 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144388779 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128686493 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147347212 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101123581 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104846557 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121389392 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070485634 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079033401 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168962248 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132211708 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143006199 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110514367 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09144795 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176299941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170426187 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139651511 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144956335 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0830007 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104042278 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133706368 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198247122 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08726536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160077156 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10775704 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079216641 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271420619 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119251176 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120630812 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105821182 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089329295 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145600973 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184117356 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136834275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086699715 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12337779 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112432822 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114037619 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11332768 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183378348 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161511413 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126686394 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070555743 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107539524 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151913402 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131882522 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106845778 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124027045 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090467223 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133568805 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154679323 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119708449 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144450438 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115956184 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088194627 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119382456 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140330874 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126443904 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15982457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12308466 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071825049 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122861647 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100611777 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07973887 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144169509 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074208413 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174791691 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09850211 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10819177 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123732116 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107966722 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108393571 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158845293 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143656453 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102889294 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065377642 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102885363 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118534384 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285861157 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086704226 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108910496 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11674005 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077443369 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136489409 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074749734 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122816772 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077195551 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127973788 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128622862 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076692542 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121632527 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10319188 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10080323 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131885962 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160583894 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086813704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081661224 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167899264 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122387417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101744963 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142996213 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155756814 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100659154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100444248 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148482049 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178918292 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089162689 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162852162 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106330342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082437354 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087458257 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12318094 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110998947 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122635728 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080829264 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116971917 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168358578 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073841193 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094683728 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133202754 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078108987 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079884906 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104797876 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10441069 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094875254 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099692475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101730855 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133873421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122292682 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105194326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123450254 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097809339 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168639937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086301336 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100709382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247990017 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06941943 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134739745 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158003432 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078900453 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163108102 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122996813 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115648529 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11852755 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082704246 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141265372 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078276003 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069108768 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144880698 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110831636 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10922731 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150839303 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115784326 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125746277 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119148372 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130928648 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130206329 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129838892 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104264562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087912608 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111337167 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126154711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072533586 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090310186 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079729631 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103859983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095362876 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082607768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14070065 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123961155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108751485 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111828291 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09578398 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147294017 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075485627 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127460579 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118570934 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095139134 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152079748 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152332775 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131465905 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097740675 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134911624 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069356856 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073150514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087817601 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122812518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081886552 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082124338 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114572748 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146118546 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128742062 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279320797 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12335543 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120367067 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156310605 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069973918 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116459365 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146795095 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121576625 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105186995 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089767905 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09852952 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143032666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106240873 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181413989 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115739357 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123829304 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152723611 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100488962 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078934963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103043229 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135096836 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103043724 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143496541 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099255271 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087882366 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10931788 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073510524 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097607495 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126709047 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117792667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13383828 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114290493 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132202116 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077070989 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11426825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120500307 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120537631 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063213673 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119467449 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160802763 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094098619 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118252314 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153673289 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079019247 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134151008 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173294801 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14434022 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08455046 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107518034 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118096822 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126253884 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118278424 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.284727643 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106635189 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135878718 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109770665 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086074827 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086878908 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096817352 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104237991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094654654 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105984528 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113210161 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095064116 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131461109 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102853132 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109245055 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1185178 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097981251 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090866101 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096175381 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176921439 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119075165 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170616127 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098060249 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143492369 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162702836 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074521132 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07804978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076955389 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139051362 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083413466 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12929544 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10638473 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116668393 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122395354 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142428855 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094878101 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068279107 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108309795 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132216386 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124100035 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097768963 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102903907 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163124007 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100420172 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078656041 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113392421 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115504492 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102609368 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171956798 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061910749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105356603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075095536 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079630226 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125872542 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151128119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079415198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103919824 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118672999 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110124226 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272118467 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100261414 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110604729 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127337397 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14914251 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12812569 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089952387 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111337864 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129422583 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158067928 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105167514 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096916131 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17132212 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152706084 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.1599863 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087287455 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114735535 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113838142 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108336019 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137367726 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082536042 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162953497 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082077161 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134746029 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102178028 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088114228 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128232981 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107835297 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089286937 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147550109 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116424386 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081596711 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076830717 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116964994 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118680061 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105387809 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074661084 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138213376 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073048632 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131258406 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159170354 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080925082 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107453859 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096168405 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079151319 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105101894 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100216537 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086072212 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098821328 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17160947 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086934243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148863993 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131723454 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256735423 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135852454 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102009493 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639399691 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077415198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153109712 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115515823 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174024569 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101279109 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118159042 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110278717 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122801769 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144866981 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103723357 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177733799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131740882 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115318082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079089337 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101570474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103164398 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.0878336 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106797448 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113904894 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114200447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092266921 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115208038 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123572542 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080962726 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094619811 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156712576 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116159158 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142697612 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140179583 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084964531 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117698365 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137098251 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079283979 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120470415 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151966489 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105547227 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098935322 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080508997 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099848829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157623329 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072876539 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157464084 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118720468 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108881244 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112611535 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111356982 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129523574 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104774565 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118242073 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088963078 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.252724358 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114159884 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081534757 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076005357 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104412196 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110561937 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098437828 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097299499 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097972634 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152339466 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071870602 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098812239 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115319991 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143589137 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175336614 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088482158 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082636456 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119102816 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113853281 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112122762 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120115077 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078224735 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080624922 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080108213 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076924787 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108223105 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111620761 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113634968 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110471938 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162886754 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082177411 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22830674 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094742519 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10432439 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069133005 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077517095 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095628261 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09745054 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106327834 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108834993 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158787724 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09443937 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089076019 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091230337 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073547445 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082365335 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128220128 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10924999 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117887241 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098737075 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06199866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106970049 seconds)
  done (took 57.163937013 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107974428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082435694 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093942852 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143412324 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122891791 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20119007 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153056879 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188654296 seconds)
  done (took 1.281678249 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067960527 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094720734 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102261472 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082160585 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065962956 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067563645 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23126491 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08053758 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065781492 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098541818 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077369612 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068489683 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426239336 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066045085 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066757147 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060837947 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0664801 seconds)
  done (took 1.879740392 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384763121 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61107106 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350017759 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071449183 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.439809662 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086296994 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.120706631 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129341841 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072085634 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522185958 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.403052461 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123364235 seconds)
  done (took 16.425019247 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074437357 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068521179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083081125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082642909 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071740479 seconds)
  done (took 0.46194642 seconds)
done (took 86.113843451 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08077837 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.603248615 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053224464 seconds)
  done (took 0.764536736 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082732714 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.0842754 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084658697 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0829634 seconds)
  done (took 0.432321566 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073605872 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076359603 seconds)
  done (took 0.232590438 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232052624 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162325533 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095754608 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082549589 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078363356 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07933216 seconds)
  done (took 0.331964442 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071568063 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074643121 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072647771 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074939907 seconds)
  done (took 0.373101292 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076469128 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051691533 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054427849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057287483 seconds)
  done (took 0.321773064 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086036227 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078404268 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078182401 seconds)
  done (took 0.323610031 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101384882 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085698549 seconds)
  done (took 0.267477443 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080570344 seconds)
  done (took 0.161622404 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099341532 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101762546 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.130877115 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110587219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139337543 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109756012 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085176039 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085511713 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076753207 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086268505 seconds)
  done (took 1.103815055 seconds)
done (took 4.967373822 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079976427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.462348492 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359768248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089698693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66997827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355941593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990537371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092584642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114777178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067278126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084301842 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649435878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982023621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413726752 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969700275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324193034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648068795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067258247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067626537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068037471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976669975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067656872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067037323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067835214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649358324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371957455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06825661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322015416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067453503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06933233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35425965 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067702044 seconds)
  done (took 14.756875556 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069692452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119636782 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072907985 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084787506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069947835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069805211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070624015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068142299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119664562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067842815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085026897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06715128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071247733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083646082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087360689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067855536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068030351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067652293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067766005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067646707 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087022039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067835316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068210792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068264093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068378135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079538491 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067251518 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068598722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068864066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068896011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071107969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068919029 seconds)
  done (took 2.511953901 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113421666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12319024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073466765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102372651 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111005397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07018175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142382197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093026741 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126831956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06738597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085444789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067685494 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101504654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068688136 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087553892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068586452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068624795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068388817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068036283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068561689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087106546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067236844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067687348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06889103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068349892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080590412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0697413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067821357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068375622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070381025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071116974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068923129 seconds)
  done (took 2.743103067 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072047716 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074969657 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081781773 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083401594 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069384217 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071339125 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07299854 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069916992 seconds)
  done (took 0.708390144 seconds)
done (took 20.819057125 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080663503 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067928215 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071788544 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082442006 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072420701 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078205989 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066776788 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075817147 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072222714 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072694126 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074631819 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067112089 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07095936 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067096611 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072980761 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067230103 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078952987 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0707487 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078255027 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079069674 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069966874 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073501375 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074011708 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078538272 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07887082 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07937543 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07763841 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072730448 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068254833 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070218316 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076805791 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084397138 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068677336 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07886824 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067901502 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067596925 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071720216 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067857694 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079506124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076559491 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069893188 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076103818 seconds)
  done (took 3.14778617 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086839307 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092700545 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084563195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061713236 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066582993 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065891262 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089906976 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059633594 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059227093 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087871761 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055574813 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059999809 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066256277 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053264518 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059428429 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056052495 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061771176 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055322036 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059833497 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058798103 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088259179 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052839162 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077616593 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06394636 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055693264 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062562517 seconds)
  done (took 1.862017987 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073258006 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084500289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089691423 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131235939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106156933 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078708143 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07939097 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095334434 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088786073 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06664237 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071315588 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091988232 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089915233 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073966264 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067811713 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086280558 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082815366 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06917052 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072734242 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09382877 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086456006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085479851 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096300157 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082239631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066908036 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070155998 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071437772 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080530146 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071729939 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076883553 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071170155 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070829717 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070077155 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078835378 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0712393 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069055927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091907736 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07853796 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078165587 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068304009 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075250769 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068318545 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092388697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125774052 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066456766 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073466624 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073030279 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077100751 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066913654 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087887974 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079119765 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066626618 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070434382 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067027878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068284571 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080912035 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07021846 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069835003 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076415224 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073102059 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091609787 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072330853 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083332467 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067218076 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075304057 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067012175 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068915398 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066321329 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095672203 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069082805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110248503 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069251296 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068664482 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076379521 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075181447 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073459786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06802122 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083299371 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077981257 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071381823 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076717483 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070992841 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070419862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091656054 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070172642 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070882629 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068718248 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073611806 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070668516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068640363 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080894226 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067358145 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070521939 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084503766 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06711631 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069003114 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073220149 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071974757 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067351491 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078843876 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072597918 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068575752 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077096639 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067755709 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070503322 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08084558 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073809537 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066693337 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072532793 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073585794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068069952 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069183457 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070405442 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069150918 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07632644 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074189173 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071967719 seconds)
  done (took 9.081290775 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163081222 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156404399 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06929909 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148758431 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076882059 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079481708 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.153557779 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094029529 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06868525 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068138989 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068669752 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110350926 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105823864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116574302 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078724985 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06840092 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085102132 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115091144 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153838213 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146947055 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085305975 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07713812 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069820144 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069389032 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07034472 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078971815 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0850015 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077033786 seconds)
  done (took 2.937901291 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080801388 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105288804 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074682505 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091202741 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091036424 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068621059 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070887189 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070114363 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081321476 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07890897 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068110815 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073979353 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07507802 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071621456 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068674709 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074718869 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074499477 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069008665 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070768242 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072673066 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077759803 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091968633 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072190456 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066786598 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07284659 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067655749 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063160338 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084302212 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067808396 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095555836 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065796016 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072348641 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082083204 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068611899 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067499861 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068111501 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067134395 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066369606 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069029918 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065847288 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066352416 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057448039 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066333724 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080005566 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074266241 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055988186 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072324559 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073175646 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073068727 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064904639 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069925681 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070019813 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070355639 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075177406 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071248649 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072656069 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068685962 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073854757 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076841257 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067268074 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06449812 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065737404 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07236124 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065003964 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075767971 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072042824 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065568968 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067118602 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069122628 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073988527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06759237 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072252915 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065124267 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068951429 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072076254 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069307763 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068334722 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065984615 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06715761 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067761341 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054658523 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067116998 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05262951 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070375286 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065318963 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065630538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066776984 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072037529 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07926234 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068228957 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072751639 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067864152 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06652456 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070346673 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.05964389 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069868114 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082951351 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081512462 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06708884 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064613967 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08037488 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071703487 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066569201 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055665473 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072516126 seconds)
  done (took 7.599507359 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08925437 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069178063 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084041854 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091753112 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087334357 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074390497 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077817037 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069254207 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08344116 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073868644 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076343197 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067142941 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076866105 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077665179 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069680478 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078054818 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072206206 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084018504 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083755899 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067802218 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076081563 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080142802 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090721936 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081897874 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080957078 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082053091 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089690619 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077962968 seconds)
  done (took 2.395666008 seconds)
done (took 27.109437836 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 5.137801684 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.332690006 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 5.137205344 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.494641539 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 5.219889081 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 5.993560917 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.261684131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 5.128185533 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 5.442789614 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 5.197686631 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.35566488 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 3.234470509 seconds)
done (took 44.997275577 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 5.181633016 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.271302905 seconds)
    (2/2) benchmarking "String"...
    done (took 0.371499576 seconds)
  done (took 0.699708894 seconds)
  (3/5) benchmarking "replace"...
  done (took 1.343800598 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 3.685540602 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.373817239 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 5.124910002 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 5.131221517 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.462032515 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.940171911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.647219464 seconds)
  done (took 17.424182039 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 3.181624984 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.405178167 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.87110916 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.878237072 seconds)
  done (took 7.4556933 seconds)
done (took 32.259864177 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 5.138392427 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 5.165178901 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 5.141137461 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 5.106679602 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178880217 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 5.140985498 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 5.257820248 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.35000302 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 5.124382375 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 5.108896027 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 5.153131984 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 3.566079594 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 5.138737324 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 5.30539544 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 5.124657742 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 5.132274959 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 5.188115175 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 5.568977617 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.278809962 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 5.13621322 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 5.122359213 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 5.189209423 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 5.126106988 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 5.133524801 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 5.144917569 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 5.121286042 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 4.532075183 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 5.12954395 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.739326852 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 5.123760407 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 5.147858338 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 5.482579178 seconds)
  done (took 150.34799639 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 5.119704778 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.995470912 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.064182609 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 5.128437625 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.486192181 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.303093698 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.239617008 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.566002757 seconds)
    (9/36) benchmarking "syr!"...
    done (took 5.124190851 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 5.136801014 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.281059633 seconds)
    (12/36) benchmarking "her!"...
    done (took 5.118477442 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.323382165 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.104543955 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.14948144 seconds)
    (16/36) benchmarking "herk!"...
    done (took 5.123578379 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.287669843 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.331710433 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.152435761 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.297090455 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 5.136223817 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.187302939 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.140122828 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.283851771 seconds)
    (25/36) benchmarking "symm"...
    done (took 5.163309775 seconds)
    (26/36) benchmarking "herk"...
    done (took 5.148318062 seconds)
    (27/36) benchmarking "syrk"...
    done (took 5.128868983 seconds)
    (28/36) benchmarking "trsm"...
    done (took 5.135184231 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.315389374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.243650273 seconds)
    (31/36) benchmarking "gemm"...
    done (took 5.138519233 seconds)
    (32/36) benchmarking "symm!"...
    done (took 5.134027886 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.25154138 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.988101894 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 5.126027354 seconds)
    (36/36) benchmarking "trmm"...
    done (took 5.145764076 seconds)
  done (took 108.054908492 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.507352493 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.117770272 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117911522 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.117560524 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.123274339 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.117528148 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.240677652 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.242705687 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.731837284 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 20.621636144 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170190421 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.960830637 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119561377 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.184564319 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.130630175 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.121184461 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.132440206 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143658193 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120559411 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117518622 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.243655533 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.129966764 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 20.197459544 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127335598 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.117893626 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122989354 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.489492215 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117140931 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122600594 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.36024618 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117448832 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117175277 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.015044088 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 9.754571322 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.118892557 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.200963428 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119079114 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122944612 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.117245271 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.337044248 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117590357 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.116648871 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.11768271 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120188145 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.289367309 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119007557 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.240201333 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.118969403 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 2.621352991 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.119717472 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117456193 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 20.227085569 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 8.819152561 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.121435358 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.116698773 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.119759881 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117210693 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117852627 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.12376313 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 20.879896144 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.198200718 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.11817401 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.120021978 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122325945 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.117182018 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 20.146274281 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116482242 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 20.78870536 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.174498888 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 1.242374642 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.239062058 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116986482 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.184528289 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.211388123 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117680844 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.11711186 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116773793 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.11752304 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.198624452 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.116815093 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 2.242804568 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124750364 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.118303443 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168526499 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.186179615 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117348219 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.008154687 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.117778891 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.116741544 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 3.444947794 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.186266266 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.115836228 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117808949 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116920445 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117820636 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 2.2408604 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.238089433 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 4.889626071 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.118476626 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 20.992048698 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.125182951 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 2.261300001 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.115570175 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.116446465 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 3.304863094 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11814514 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.200202817 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12026399 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.117457645 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.118080351 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150897266 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.116970841 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.177405845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.11871553 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.493217906 seconds)
  done (took 211.619240803 seconds)
done (took 470.615492983 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.766832047 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.730037224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.838034116 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.755606499 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.729359291 seconds)
  done (took 3.861212729 seconds)
done (took 3.912047096 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.200451784 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205796836 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.139681224 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.203347136 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13736659 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.203056841 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183298145 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.14227812 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.171270665 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.142733385 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.173545814 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.142092147 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.129949015 seconds)
  done (took 2.218886199 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.362422745 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.390597609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.197387835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.362445339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.171864027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.349822453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.29092951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.276358736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.279704596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141724344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.13299867 seconds)
  done (took 3.0044605 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.366512834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.363297434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.203250686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.385801031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.173029567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.35804675 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.29014804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.280488338 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.285833475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141135553 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.132210154 seconds)
  done (took 3.027835728 seconds)
done (took 8.303008416 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.127165176 seconds)
  done (took 0.170107932 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.151652771 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 0.303252326 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.129298803 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132235698 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.128530055 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.129606643 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.131873998 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127427572 seconds)
  done (took 1.283743475 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.124494099 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.126415415 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.123680301 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.123550906 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.127408707 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.124146307 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.124376252 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.123672917 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.127600212 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.127339079 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.127414911 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.124300587 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.126650113 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.127595797 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.126934192 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.124230511 seconds)
  done (took 2.059274776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.125048692 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123886953 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.124321219 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.124970706 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.124090131 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.125021953 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.125739032 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.124092494 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.124802568 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.124597138 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.125714721 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.124401141 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.125049903 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.124356305 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.124357615 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.124791584 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.124581642 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123963415 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.12854384 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.124237145 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.124943524 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.124149085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.125155864 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.124766788 seconds)
  done (took 3.04684101 seconds)
done (took 6.607674627 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.930408677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.621945354 seconds)
  done (took 3.595492484 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.124202969 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127492866 seconds)
  done (took 0.366050643 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.126278187 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.127285362 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126979521 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.127320966 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.126777807 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.127150664 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126763491 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.127406437 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.127098536 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.127359178 seconds)
  done (took 1.318193114 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.12653613 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.127737236 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12446715 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.127777507 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.126931314 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.124854828 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.127420057 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.126838195 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.127157005 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.124650016 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.127325204 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124916674 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.12700624 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1247598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.126832711 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.12404952 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.124200452 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.124150314 seconds)
  done (took 2.316163145 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.126914907 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.127323813 seconds)
  done (took 0.302153983 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.124000497 seconds)
    (2/7) benchmarking "second"...
    done (took 0.124910919 seconds)
    (3/7) benchmarking "month"...
    done (took 0.124558534 seconds)
    (4/7) benchmarking "year"...
    done (took 0.124110447 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.124710153 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.124051947 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.124227758 seconds)
  done (took 0.918619585 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.127320776 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.285601675 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358132449 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.77400959 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126538164 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.131249513 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.09508034 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.131152623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.133072529 seconds)
  done (took 3.210379393 seconds)
done (took 12.075034609 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 2.909124381 seconds)
  (2/8) benchmarking "printfd"...
  done (took 5.117991505 seconds)
  (3/8) benchmarking "parseint"...
  done (took 1.464566737 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 5.20170581 seconds)
  (5/8) benchmarking "pisum"...
  done (took 5.142630378 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.464188185 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 5.138134784 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.424276639 seconds)
done (took 27.91271836 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 5.176803036 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.674075611 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.729615149 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 4.545358437 seconds)
  done (took 5.994298953 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 5.104266501 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.647745924 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 5.167123538 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.707221849 seconds)
  done (took 11.676959245 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.489120532 seconds)
    (2/2) benchmarking "read"...
    done (took 0.475691037 seconds)
  done (took 1.020218867 seconds)
done (took 23.918263742 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.126809932 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.128022893 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.124485521 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.124760616 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.127795723 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.124435678 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.124975152 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.127710373 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.126905765 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.12818229 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.127272152 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12753849 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.124481084 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125029578 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125525378 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127337597 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.125654249 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124422327 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124862872 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128044505 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127524315 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.125146782 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.125374471 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.127473514 seconds)
  done (took 3.074102812 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.126543667 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.126307286 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.128239096 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.128317888 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.124830085 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.128245243 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.128113004 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.124587405 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.127502984 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.127664182 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124706247 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.124633753 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.127330361 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.125047413 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127486027 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.124691704 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.12779181 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124982564 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127352303 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.125091758 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.127947497 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124787893 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.124866487 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127362337 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.125713009 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126845456 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.127941071 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.125426878 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127495308 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.124792048 seconds)
  done (took 3.841416286 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.131763435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133774684 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.128628663 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.127591923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.127680913 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.12742405 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.127787185 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.127562319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.12753504 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.127385978 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.127650244 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.127664907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.127318968 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.127632644 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.127665042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.127675156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.128046987 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.128764689 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.127321438 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.127843627 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.127687022 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.127830903 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.127964352 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.127711494 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.128529257 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.127785111 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.128013561 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.127957185 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.128032354 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.127846124 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.128050893 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.12860527 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.127987045 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.127644554 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.128131561 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.127939811 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.131284559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.134399648 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.127711986 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.128352265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.127585771 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.128445889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.127735254 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.127747584 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.127787151 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.128519449 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.127517013 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.127845418 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.128196366 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.127920357 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.127715299 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.127903689 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.128419174 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.128468353 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.128298782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.128011028 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.127670108 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.127635868 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.128128522 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.127732747 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.128473437 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.128507116 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.127697497 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.127972502 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12836413 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.128516916 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.12829933 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.128088087 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.127949543 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.128945851 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.12854808 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.129290562 seconds)
  done (took 9.285047223 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.128088396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125954081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125267056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.125936625 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125078544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127756573 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125346945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128419073 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125212438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128452778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.128717158 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126204391 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125370283 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.128402504 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127823645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.12511455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128466284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125101184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.128931817 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128352466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12792346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125553636 seconds)
  done (took 2.840619641 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127246898 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.128215724 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125341559 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.128201554 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125860348 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128514646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128267754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.128705046 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12788309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125582068 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125437067 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127952089 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.125472042 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125416724 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125394871 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.127858517 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128244387 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126936422 seconds)
  done (took 2.335564205 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.125375839 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.125438001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12873173 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.125689748 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.125908993 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.128130244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126242317 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.128745176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.12819952 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.126263877 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.129576209 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128310707 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.128914435 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125969727 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.128919885 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.126150637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.128512463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12595134 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128906979 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126024214 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.126142218 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129186889 seconds)
  done (took 2.850560153 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127799508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.128678996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126113094 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126452129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.125732971 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.129136167 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.12863335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.12600782 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.129656897 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.129405207 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125725488 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.129153171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126047472 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.126686575 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.126300178 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125572226 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128261045 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.126914255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128575685 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.12538681 seconds)
  done (took 2.595667124 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129076758 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129843229 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.13001863 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130127283 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130389557 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.129952484 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130116716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130652091 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130138876 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131445297 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1300177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130203749 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130466568 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130147097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130712436 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130532006 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130075077 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13087178 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130681941 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131121928 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130805788 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131378994 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130567916 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130785069 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131083209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130442406 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130814177 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130366291 seconds)
  done (took 3.702900398 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127885012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.12875231 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.126122508 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.128937572 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.126289999 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.125869851 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.125820103 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.126066995 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.129395215 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.12574399 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.128725482 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.128742307 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.129413127 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.128628345 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.128782427 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.129291373 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129275089 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.126131113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126668859 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126210453 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.129449764 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.129019861 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.12936167 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126302685 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125871089 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.129342363 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126675581 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.126523465 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129318298 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126428395 seconds)
  done (took 3.88175916 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.146416158 seconds)
    (2/2) benchmarking "in"...
    done (took 0.147822213 seconds)
  done (took 0.34319624 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.125909298 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129537391 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.128908244 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.126323765 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.126152217 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.129222625 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.129381192 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126476187 seconds)
  done (took 1.071029991 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.129398118 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.129586986 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.130333776 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.129566802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.130964915 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.129743609 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135520835 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1322473 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.13384585 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.12995499 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.134151953 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.136260876 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.131819846 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.129802526 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.130902509 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.130964045 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.130452066 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.129787442 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.13045599 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.129475489 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130452463 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.131320789 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132898169 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.127928435 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.129843086 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.13832622 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.135179643 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.130892408 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130181414 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.1342163 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.131154974 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.126797101 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.130793988 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.131529958 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.12998163 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.130509196 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.137164904 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.133116069 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.135546986 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.133590506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129984205 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.126457701 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.131043591 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.131544274 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.13132425 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.132548899 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.131152689 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.127174339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.128867772 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.131218772 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.133607461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.129652539 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.126753444 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.134266721 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.133328731 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137544636 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.133488033 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.131780374 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136914831 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.138571795 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.144405763 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.138439473 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131019426 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.131897723 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137675685 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.148510573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136258808 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.129537737 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.12656378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.130704073 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.135350812 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143903626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.140195824 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.130806536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130925698 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.129740466 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129369827 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.129816315 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136253806 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.13501572 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.132352935 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130673055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.137699098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.148658321 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.129736948 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.130839226 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.130484384 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.130920331 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.130265819 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.138654194 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.133759367 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.130039398 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.129252248 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.129656774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.130920678 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.130494311 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.128884461 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.130524113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.127352861 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.130019722 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.129870426 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.132474955 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.137167836 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.130809829 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130761903 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.135955072 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.131950855 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.128825433 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.137173454 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.131853735 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.13016796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.130519589 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.134747577 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.127488438 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.132143532 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138080226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.13077706 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.131782948 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.130946806 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.130177555 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.137081845 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.152080688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.131509126 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.13045224 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.133137338 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.139708235 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.130869078 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.133406816 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.131142615 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.127039541 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.127451529 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.131794716 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.130978298 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.131220502 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.130645276 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131544575 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.128410925 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.129839735 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.130621972 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.131006374 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.13215296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.130580855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.131250057 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.132540788 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.132020766 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.131558644 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.137286928 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.131914193 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.131480178 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.131380705 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.128065562 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.129961251 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.131330858 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.132300087 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.130729175 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.130647527 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.129810116 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.130820495 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.130992914 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.130443078 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.130088959 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.130986762 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.132726732 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.131617236 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.134642967 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.131799748 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.128270659 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.12975478 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.130495222 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.130090433 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.130299115 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.129438181 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.131971831 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.137284298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.130416109 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.13165207 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.132703698 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132070398 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.13126014 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.13111624 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.132308714 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.136367631 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.132188437 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.13628085 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.133210345 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.131057539 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.131170084 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.130120973 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.13015075 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.131418763 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.133695505 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.136986843 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.142398802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140474916 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.130885989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.132926785 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.131272405 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.1344262 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.134120785 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.132664818 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.131102727 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.131242178 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.130541553 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.131436929 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.131481095 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.131736481 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.130721056 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.130552855 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.130173349 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.131395027 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.13108946 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.131669659 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.131749769 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.127973073 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.130815494 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.130922802 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.130504632 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.127880072 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.129692512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.129909481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.131133873 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.131289472 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.136875994 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.129593141 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.13114251 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132676114 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.131758482 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.129961164 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.13035791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.133013066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.132404128 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.136611309 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.133207025 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.131687002 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.137013918 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.133113275 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.129592307 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.133463505 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.132374201 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.127704992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.132026953 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.136790589 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.130797787 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.131983153 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.131447887 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.130913399 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.131150125 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.136494037 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.129882377 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.129757534 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.131054081 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.132024703 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.128514235 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.131282983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.132239179 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.131635474 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.133110031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.132174581 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.130389964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.131672781 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.131628163 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.132109332 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1317305 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132751326 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.137483713 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.135786088 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134545042 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.132175537 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.131673582 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.133064278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.131101109 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.13150346 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.130989713 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142736265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.141041023 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.136643964 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.135188181 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.131053751 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.135194751 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.133292521 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.134269923 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130596435 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.131790085 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.130577399 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.130871132 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.128138304 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131148524 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.131467877 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.131832852 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.133407961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.133924103 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.131482903 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.130095936 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.131874835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.131687282 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.131400353 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.130142034 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.131326898 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.132755199 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.133352421 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.131207996 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.130525908 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.136771723 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.134041134 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.132427389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.13073916 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.130942178 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.130042879 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.131892784 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.132199925 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.133430169 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.138245141 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.133857785 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.138771196 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.131635762 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.138311207 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.133578574 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.133367429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.138354656 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.128529713 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.129948174 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.132056948 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.132109137 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.137861112 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.134599525 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.13165284 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.134767131 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.132033003 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.132246143 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.131496276 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.131698969 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.131473611 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.132142767 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.139721015 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.134676827 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1333864 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.133418094 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.129508322 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.131458625 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.131600432 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.130601379 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.134469504 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.133080248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131956807 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.131331457 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.131437313 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.130729466 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.132551693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.13201608 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.128041691 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.130840311 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.138272379 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.134257492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.134813154 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.131689982 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.138431856 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.134362775 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137964782 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.13508924 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.132374358 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.134057495 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.131608395 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.13324368 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.131944212 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.132396355 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.132341014 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.132312943 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.134262515 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.132169572 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.133462157 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.131960384 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.133332596 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.131492294 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.13899173 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.152221779 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.132890808 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.134224121 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.128706308 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.132148768 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.135106704 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.133051068 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.131042981 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.133484298 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.139820942 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.137831545 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.132060028 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.132833507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.132570846 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.13299391 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.13157377 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.131698796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.132316245 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.131797806 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.132596872 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.132198616 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.136097087 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.132897085 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.132104489 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133486689 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.132967276 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.140253163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.134482314 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.132984976 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.133099276 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.132089139 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.132400898 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.131440438 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.133084411 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.132814794 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.132029468 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.132406941 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.136671855 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.136717357 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.134261517 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.133499583 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.132709169 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.135339304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.131692669 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.132823602 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.133066894 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.132959794 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132849217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.1334845 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.133011311 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.130729569 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.131843515 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.13210171 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.13316228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.13390258 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.138142691 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.132190319 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.129332931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.131699586 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.131898675 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.130364405 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.131858584 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.139451626 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.136038071 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.140375952 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.138494117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.13564228 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.132215272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133985037 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.138110488 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.132255646 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.132695955 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.133701929 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.135372019 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.132514747 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.133974402 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.132859615 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.138284384 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.134338867 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.131782782 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139757945 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.135983243 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.13311867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.132957742 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.134913797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.132078191 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.128939475 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.132407099 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.131165399 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.139681883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.136769255 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133268045 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.134625396 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.131956009 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.132174643 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.135727474 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1321196 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.133000573 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.130637861 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.132325327 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.133392868 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.132632655 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.129285543 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.131820987 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.131371077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.133945643 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.137493696 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.129148798 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.134272658 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.133932025 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.132711897 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133477998 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.132239201 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.129279888 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.129496469 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.131634115 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.13280125 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.134207382 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.134226471 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.133243162 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.132984689 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.131888478 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.133800922 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.135055709 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.140517928 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.137889105 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.129684793 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.13171936 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.132859218 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.135984756 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.134409029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.132943812 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132530251 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.134225258 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.132314862 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.132702319 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.132670248 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.134375813 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.146927265 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.135559752 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132122768 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.132791847 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.137183157 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.133840316 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.129878246 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.132141667 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.134380865 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.134431417 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.139123875 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.133403033 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.139373805 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.135160033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.133553781 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.135519969 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.134877993 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.138577345 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.135385128 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134921128 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.133623275 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.135898474 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.146497121 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.134266221 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140913202 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.15716149 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.136302689 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.133829499 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.134099986 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.131617105 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.133255317 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.134066121 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.134074383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.132874801 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.133083826 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.133310767 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.133632291 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.137334613 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.135876984 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.133606586 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.13280757 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.132701282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.13317628 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.129957963 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.133416801 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.133610184 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.133552186 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.133430239 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.133749934 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.133288603 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.144356997 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.144950208 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.133427246 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.134564547 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.130301603 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.136101714 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.136555051 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.141273428 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.139190446 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.133210557 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.13389631 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.134436875 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.134305515 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.130716181 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.133295037 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.132628799 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132708838 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.130252623 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.144541357 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.14324534 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.137633324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.135383298 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133710406 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.133193435 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.134005004 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13384259 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.133561431 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.134148777 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.133202439 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.136099497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.133990271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.132720092 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.135012245 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.138827934 seconds)
  done (took 79.410541018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129398938 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130519457 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130001026 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129861748 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13013334 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130500547 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12993289 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.130077965 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.130420218 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130450974 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.129946249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13014006 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130373954 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130571206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129881121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130216745 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130141702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130220432 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130081268 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130039206 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130435 seconds)
  done (took 2.785216448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.131778416 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.130538722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130326764 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.133451352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.13058705 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133137396 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.130607432 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132855735 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.133316747 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.130400574 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133110943 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133150881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.130144039 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130481283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.130159257 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133411439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.13300053 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.129909597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133297302 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.130703605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13278119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130900287 seconds)
  done (took 2.950243051 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.133655307 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.13448845 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.133546879 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.131051836 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.133436633 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.130323175 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.134304725 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.134493415 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.13333901 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.132923508 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.132382138 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.133579241 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.13793666 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.137426715 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.135196971 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.133724529 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.278960335 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134718275 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.134640234 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.13426477 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.130656019 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.138336701 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.133401781 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.130320572 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.132485757 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.13380184 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.133508856 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.133876197 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.134294239 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.133913541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.137021471 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.133678023 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.132899015 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.135939522 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.134437956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.13337527 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.136456251 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.13398561 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.131398143 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.133883521 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141583352 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.149598927 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.134934266 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.139650949 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.136059019 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.133539726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.135361977 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.140343611 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.131488284 seconds)
  done (took 6.797725804 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132519097 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133518854 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.130898507 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133285606 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133500129 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.133405914 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.133457303 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133310988 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.131219377 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.131193592 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.133573849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.131429445 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130971781 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.133730498 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.133212314 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130694145 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.131538419 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.130906019 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130668051 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.13086291 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130508785 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.133371995 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.133627476 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131083064 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134317343 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.130695231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130564727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.1332425 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130922585 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130698718 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.133458448 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.133669022 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133565251 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.130767522 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.130544488 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.133380856 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.134172817 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.13049569 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.133895255 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.130627577 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.133624573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133502933 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.133197084 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13381269 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.130543111 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.131096445 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.130720206 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.130747779 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131439637 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.133410629 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.133795849 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131784713 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.133457348 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.131253314 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.133479962 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133692463 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.130631559 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.131666118 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.133416044 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131362114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.131216777 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133796211 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.131349539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.133859479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.133430057 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131316934 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.13202028 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133741251 seconds)
  done (took 9.048756087 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133876861 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.134961315 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134881271 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135706849 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135361382 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.13485969 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.135448453 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.135210975 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134851176 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135181935 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135063706 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134370153 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.135161937 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134071754 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135111144 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.135110068 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135033129 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134968259 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134753344 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135543916 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.135453576 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135463498 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.135120161 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135161629 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135677713 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.135112753 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135259428 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134986565 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135131696 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136327494 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136893032 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.134982716 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134810815 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135525514 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135361489 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.135427346 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.135348966 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135506752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.135694006 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.135308318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.135161666 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13526256 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134840638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.135124185 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135172522 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135352248 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135677403 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135955855 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.135098378 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134968472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.135341362 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135566285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136466455 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.135282814 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135582137 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134681305 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135253816 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136105289 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135377221 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135484905 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135953697 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13487188 seconds)
  done (took 8.440778858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1332702 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.134182758 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.131645664 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.131777497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.134461774 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.131737619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.134394267 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.134167627 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.134278284 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.134172779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134374918 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131705234 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132508015 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134518873 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.131938842 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132855504 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131619083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.131980512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134550613 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.132306422 seconds)
  done (took 2.715196385 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.130933993 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134351095 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.131725005 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132086977 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.135466179 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131409467 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.134380521 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134237683 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131556303 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134119915 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.134545032 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134534598 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132059213 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131982096 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134721035 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.132126702 seconds)
  done (took 2.182786798 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.131033656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.134425741 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.135149785 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.135308083 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.132054254 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.131856713 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.135414025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131700721 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.131708146 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.134703404 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.135208635 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.134519985 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.134664576 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.135307251 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.132106736 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.135183543 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.132017347 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.1317236 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.135224516 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.135239504 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.132774539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.131603866 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.135686409 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.135416574 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.131879015 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132503444 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.131667118 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.132007291 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.131884516 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.13489458 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.1325929 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132158343 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.132161478 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.131888434 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.135788355 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.132279211 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.134541307 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.134777043 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.135373178 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.134543228 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.134775925 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.132299003 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.134977263 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.134547928 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.132102481 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.135084332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.131878715 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132892569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.131853988 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.132323936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.135041921 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.135093071 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.135472808 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135615098 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.134634829 seconds)
  done (took 7.403716613 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133627256 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.135120139 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131694357 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.135027224 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.135021462 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.132075411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.134726283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13193433 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131929852 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.135070165 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.132725733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134781073 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132376124 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.134863622 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.132983337 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.135224427 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.132017011 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.131835272 seconds)
  done (took 2.455827265 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131450617 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13250067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.134878815 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.132410461 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.132083115 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13516236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.132149294 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.135977121 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135017555 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.13222708 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.132194454 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.135249406 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134557226 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.13494113 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13285928 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132437177 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.135026083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134695575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.132741613 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.131987355 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.135347037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134878783 seconds)
  done (took 2.993724324 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.133416724 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.133935222 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149523378 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.151891322 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.154116209 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.163014837 seconds)
  done (took 0.938418444 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132061429 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135150997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132250351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135458911 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135322696 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132534238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13275265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13335165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135489337 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132974969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133082467 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134925951 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135820512 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132802555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135306901 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135349472 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132949476 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132853185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132621285 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135231933 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132808127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135382159 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132510785 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132485141 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132999077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132825905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135885946 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132834163 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132727176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135386672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135841467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132794089 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135358426 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13340388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135123538 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135516201 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133232726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135510281 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135364233 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132681659 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.135181154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135724677 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135252894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132617752 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13537962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132610362 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132910702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133053904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132602198 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135658814 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135866704 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133288332 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138045836 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135910756 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135369643 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135845414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133690073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13288599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135949642 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133222675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134033169 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135533032 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132888406 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13314854 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135726249 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133909916 seconds)
  done (took 8.909568147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132312609 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132804868 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133050507 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133692327 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133012984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133444818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133201441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133329998 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132576155 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133195406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13554515 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133168636 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133172333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133319803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132984303 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133596744 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132995081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133035388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133161103 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136102849 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133441257 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132980749 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132871412 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133243562 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133647876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135588017 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132824604 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133240668 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132904325 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132757395 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133094265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133852212 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133273365 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.132982752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133006178 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13303666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133072576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133041136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133230523 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136649227 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133047435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13616131 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13368881 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133448497 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133403144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133956012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133465851 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133446992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133373306 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133049352 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133773601 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133775935 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133695673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133210243 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133078042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133478438 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133131438 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133110954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133862067 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135708131 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133495102 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134310838 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135891473 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13332784 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133406963 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133048506 seconds)
  done (took 8.869027844 seconds)
done (took 181.772554828 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 5.151526827 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 5.168611933 seconds)
  done (took 10.368170873 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.295334637 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.251334185 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.134681258 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 5.175238194 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.128234722 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.15216603 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.147406933 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.129919649 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.133159158 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.134119582 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.134511583 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.32178949 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 5.132352453 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.130340996 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.133957204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.225824804 seconds)
  done (took 22.819654478 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.136607456 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.139033288 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.148473104 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.139570776 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.137229574 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.148673032 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.168960336 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.140600766 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.170754145 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.148573218 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.204196449 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.142408034 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1364671 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.186200094 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.144724135 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.14910655 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.22797857 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.205432994 seconds)
  done (took 2.928384325 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.212139818 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 5.133621896 seconds)
  done (took 5.407602665 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 5.172191053 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 5.141338405 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 5.161364703 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 5.125862321 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 5.144905339 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 5.144161324 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 5.168178356 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 5.167542755 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 5.140587689 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 5.147961653 seconds)
  done (took 51.575391499 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.141671215 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.136296234 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.138237996 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136999915 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 5.128758843 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 5.127953862 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136668614 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 5.135514795 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.801342704 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.164064335 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.143315714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.14331676 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137993256 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.139150567 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13512407 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.161888179 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.267152965 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135242681 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134432972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.141716507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137385231 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.213506257 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.148813387 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136013999 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.166741822 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.805506587 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.136943439 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.142851571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.264740536 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.135288987 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.137150556 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137777186 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.139206334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.510052783 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.402784554 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 5.132074529 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145990719 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.140292937 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.13484265 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.27360568 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.137996353 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.142986247 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 5.083136408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.380382293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.247378349 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.175383529 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.526058401 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.132219894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.138416719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.166495355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.137746043 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.138193207 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150721075 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.655599824 seconds)
  done (took 37.302376062 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 5.131693396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.393453929 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.288159161 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.131728033 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.415504698 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.332597658 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.127122607 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.179609631 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 5.130595401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.357100456 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.288546412 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.241911356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.128007093 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 5.132637393 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.128129818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.124384304 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.291558412 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.205188272 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.130636706 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 5.123938693 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163149065 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.374993136 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.25403964 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 5.134050693 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1480934 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.342870622 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.252540177 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.23914853 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.407275591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 5.129091035 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.197367116 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 5.127707965 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 5.129542455 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.124479105 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.287684846 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.228262376 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.214739137 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 5.128346376 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.127493392 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.127926762 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.807843495 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.328374071 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.224408563 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.269137588 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.378430611 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.336035856 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.916459446 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 5.125854585 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.865404102 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.292990426 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.364933179 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.362138365 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.251075134 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.133122366 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 4.640980764 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 5.129531171 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.129449331 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.362945108 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.354744176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.234256 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.126690482 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.130137721 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.124005714 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.377839313 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 5.127187432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.220913016 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.127875414 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.124558865 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.226012588 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.230352708 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.356675246 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.343984929 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158882087 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.434542953 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.612495192 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.379942988 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.193213604 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.357780092 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.126404959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 5.124372251 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.212821336 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.973772489 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.285243947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.381392956 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.380044548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163415273 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.851683667 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 5.129967039 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.358039235 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.350150332 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.429874113 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.372377749 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.282546404 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 3.252482751 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.129806873 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 5.129538413 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.371197735 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.264667307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 5.133258955 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.493655508 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.36491443 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.697151825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.160519163 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.475797948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.258955676 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 5.134711709 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.774510152 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 5.130244026 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.357409385 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.172741403 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 5.13157783 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.130603694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.346632111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.203488979 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.131249 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 3.753440449 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.189664225 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.128749678 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.360301814 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.126947567 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.394281806 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 5.127518421 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.369115096 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 4.525856215 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.160585874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.353423672 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.368293675 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 5.133045305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.392555681 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.371866036 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.243036395 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.354331719 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 4.756443442 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 5.130119024 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.421377032 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.127126878 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 5.127363853 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.303148833 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 5.131370199 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.307689439 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.132820342 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.467246278 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150835359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.284244888 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.133459896 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.38515874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162416592 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.182198902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 5.128019505 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.260495429 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.132493007 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.997797424 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.287120745 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.133138728 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 5.125336744 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 3.799239019 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 5.128196489 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.284628913 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.363598716 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151882156 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.205160317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.800492184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.130522384 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.218330089 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.155512609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.466480086 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 5.131560073 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.285798517 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 5.133020259 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 4.667514638 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 5.130331299 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.374132079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.309988501 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 5.130676144 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 5.125827883 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.042379749 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 5.130797631 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.130914951 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.29223734 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 3.966600979 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 5.129823885 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.336235966 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.1305119 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.261931086 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 5.135005325 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.202269205 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.488253137 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 5.128646237 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 5.129523951 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 5.130206841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 5.13000154 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 5.131311625 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.39167831 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.156800975 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.653177331 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.271908883 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.401915111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.446026658 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.383707623 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.172957137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 5.133400171 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.374168154 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 5.134165172 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.191173699 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 5.127702543 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.155720133 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.365669816 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 5.131165839 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.340990045 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.409787379 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.065570511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.180453436 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 5.132746427 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.130078449 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 5.004597049 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.282353003 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.223769396 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 5.129573564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 5.130964213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.248265488 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.258551047 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.344814563 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 5.132834747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.360176509 seconds)
  done (took 511.692961739 seconds)
done (took 642.147474893 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.131821605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.125533569 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 5.118251615 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.130980238 seconds)
  done (took 20.556589657 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14067234 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.135930003 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139398103 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.137323504 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.140321159 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.136975417 seconds)
  done (took 0.885151691 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 4.161372072 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 5.126924163 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 5.131275902 seconds)
  done (took 14.473732427 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204844382 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.536569231 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.241693943 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.566234843 seconds)
  done (took 1.604228722 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138909863 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.139763802 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.140173214 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.141192645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141071303 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.141058538 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136548912 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.138716438 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.140206468 seconds)
  done (took 1.312357915 seconds)
  (6/6) benchmarking "26942"...
  done (took 2.57705512 seconds)
done (took 41.46404479 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Float64, false)...
    done (took 3.887398479 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 5.231961877 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 5.125679538 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.2746765 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.264884745 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.194460799 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.298336475 seconds)
    (8/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.505047387 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.238288769 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.406562397 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.266193739 seconds)
    (12/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.332467403 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.439094196 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.181119149 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.267572246 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.16274187 seconds)
    (17/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.216923927 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.322801919 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.650732146 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.581071975 seconds)
    (21/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.217340074 seconds)
    (22/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.313335371 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.303630985 seconds)
    (24/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 5.120161868 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149870544 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.140313804 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.688063861 seconds)
    (28/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.193790447 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.27048523 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.438146423 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.258834996 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.405081407 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.542053632 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.43273312 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.308752184 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 5.131447715 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.241514087 seconds)
    (38/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.232865991 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.232453193 seconds)
    (40/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 5.13414359 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 5.945414073 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.368517555 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.209668794 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 5.117852462 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.449389672 seconds)
    (46/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.436753017 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.247568937 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.393859994 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.344778225 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.741336228 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.115963862 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.508354636 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.825854744 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.330481179 seconds)
    (55/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.198882426 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 5.133685962 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.18838794 seconds)
    (58/309) benchmarking ("sort", Float32, false)...
    done (took 3.885929409 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.236283107 seconds)
    (60/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.148902771 seconds)
    (61/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.159139301 seconds)
    (62/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.158876202 seconds)
    (63/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 5.13344445 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.345766829 seconds)
    (65/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.295167566 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 5.130969379 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.648980066 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.440990448 seconds)
    (69/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.225249303 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.511759696 seconds)
    (71/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.181937978 seconds)
    (72/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.159713081 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 5.11838814 seconds)
    (74/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.082218305 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 3.867149949 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.239762038 seconds)
    (77/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.270675263 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.496781398 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.258534595 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 1.120014076 seconds)
    (81/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.149669575 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.281079718 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.599981098 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.525313381 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.204339211 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.464503706 seconds)
    (87/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.251809416 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 1.347712188 seconds)
    (89/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 5.623982875 seconds)
    (90/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.420085357 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 5.132721438 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.091921544 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.295557273 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 5.132405085 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.561298981 seconds)
    (96/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.750109764 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 5.128894189 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.10798806 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 5.120258277 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.642481392 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.69936939 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.965343991 seconds)
    (103/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.160941393 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 1.053786475 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.282169505 seconds)
    (106/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.161538157 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.336245615 seconds)
    (108/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.197651539 seconds)
    (109/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.238296003 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.159507596 seconds)
    (111/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.216154433 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.30166349 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 5.656790773 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 5.227016951 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 5.131786936 seconds)
    (116/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.324887008 seconds)
    (117/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.505385978 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.338766969 seconds)
    (119/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.626398307 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.427631596 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.585679651 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.152738696 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.696296518 seconds)
    (124/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.635061049 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.31199983 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 1.115456724 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.409566536 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.260978412 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.480857908 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.517270204 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.21653225 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.351845742 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.382228428 seconds)
    (134/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.554849417 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.507851851 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.050659356 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.231738869 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.460267608 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 5.132070403 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.329588618 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 5.116978758 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 5.136591107 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.527234418 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.35402887 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.461454276 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.162557781 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.515141355 seconds)
    (148/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.233356111 seconds)
    (149/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 5.134668693 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.208305514 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.241016772 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.697343932 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 5.13004846 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 5.223863329 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.163055353 seconds)
    (156/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.351322887 seconds)
    (157/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.241622438 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150391491 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.237634879 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.426616334 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.046731378 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.066679968 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.856847641 seconds)
    (164/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 5.121414087 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.343556251 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.232457392 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.430924266 seconds)
    (168/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.153919795 seconds)
    (169/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.426799791 seconds)
    (170/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.542818768 seconds)
    (171/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.400090631 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.203455448 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 5.115552942 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.866454107 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 1.346144762 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.422184922 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.374487534 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.471856161 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 5.732627928 seconds)
    (180/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.382252928 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 5.132574879 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 5.117333086 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.270321633 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.499818962 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.67521042 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.15560333 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.642710823 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 5.842455534 seconds)
    (189/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.320548585 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.08225553 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.565118817 seconds)
    (192/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.535171083 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.167850914 seconds)
    (194/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.283660789 seconds)
    (195/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.353042259 seconds)
    (196/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.159987176 seconds)
    (197/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 5.517207845 seconds)
    (198/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.270582424 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.433893745 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.23010989 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.595283195 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.519574262 seconds)
    (203/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.085917915 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.139726294 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.192343245 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 5.130868533 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.332871385 seconds)
    (208/309) benchmarking ("sort", Int8, false)...
    done (took 3.122646178 seconds)
    (209/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.078001336 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.350566754 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.529398608 seconds)
    (212/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.144929052 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 5.121384651 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.16976733 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 1.253839427 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.26739482 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.45167766 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.916706408 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.3367308 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.932443281 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.947400231 seconds)
    (222/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.485238378 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.377499351 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 5.137891299 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 5.195148266 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.210979245 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.282641685 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.204902187 seconds)
    (229/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.287714174 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 1.158399949 seconds)
    (231/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.288483402 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 5.13180071 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.490924783 seconds)
    (234/309) benchmarking ("sort", BigInt, false)...
    done (took 5.130251392 seconds)
    (235/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.999108544 seconds)
    (236/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.223373682 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.324333632 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.125902615 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.480249675 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 1.044029656 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.435434974 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 5.115499547 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.428350059 seconds)
    (244/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139666188 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.606595166 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 5.131791349 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.865905544 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 5.126199312 seconds)
    (249/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.024582916 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.208684679 seconds)
    (251/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.619890386 seconds)
    (252/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 5.122151813 seconds)
    (253/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.641477465 seconds)
    (254/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.265884386 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.2204209 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 1.075527655 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.384667041 seconds)
    (258/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.362168717 seconds)
    (259/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.357479096 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 5.136457971 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.247721973 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.325023327 seconds)
    (263/309) benchmarking ("sort", BigFloat, false)...
    done (took 5.137019224 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.493019725 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.821729766 seconds)
    (266/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.322095212 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152946786 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 5.134625889 seconds)
    (269/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.228911962 seconds)
    (270/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.197746271 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 1.111823415 seconds)
    (272/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.101468458 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.780099986 seconds)
    (274/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.265075268 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.252242225 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.598802322 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.771436995 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.405097485 seconds)
    (279/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 5.133436684 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.262043669 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.318765968 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.216348292 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.21524962 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.278064675 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.160578821 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.716076385 seconds)
    (287/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.157066053 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.863940265 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.218279197 seconds)
    (290/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.14598316 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.530317533 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.614203566 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 5.122095114 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 5.138769235 seconds)
    (295/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.249468657 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.211935392 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.166598367 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 5.132386621 seconds)
    (299/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.420356077 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.69980449 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.249920869 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.226275425 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.766647164 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.215344832 seconds)
    (305/309) benchmarking ("map", abs, BigInt, true)...
    done (took 5.457580109 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.516437346 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.150660534 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.151830629 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.106416203 seconds)
  done (took 477.715004783 seconds)
done (took 477.799984546 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.165788337 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161756212 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.143520637 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.16478009 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.254990651 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.170742906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.155387902 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.145641398 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.1929171 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.194734909 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.144092632 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.171995004 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.148269283 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.145230117 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.145099516 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160656546 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.45525169 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.171017905 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.159598763 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152399701 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.162191346 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.144566275 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.195534111 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.172447213 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.150231943 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.147333332 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.149286958 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.165421305 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.257457265 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.149488958 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.147764578 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.157331086 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.456287766 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.166660688 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.139821717 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.165861775 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.15720305 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.155379588 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.15000297 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.178752473 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.591131703 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.146799573 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.1465981 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.147472013 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147727489 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150289701 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.147739907 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.151979729 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159391101 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159649918 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.5915396 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.160776864 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.147602536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.146630624 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.155483921 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.145525407 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.147619695 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.161463131 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.16547031 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162091494 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.447271899 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.173332822 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.145788199 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.160817522 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.151775815 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.625597847 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.140591897 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.147983267 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.592626532 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.150989044 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.626556397 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.153541705 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.145129818 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.158967855 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.175812381 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.453989833 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.164460717 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.144869674 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.151411504 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.144072579 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.156388335 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158999956 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15081581 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.146897091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.160140966 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.174049207 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.156963888 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.147967878 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.155718024 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.166511731 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.154391276 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.156727593 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.150034709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.142483964 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.155450346 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.150500983 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.150257833 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.150671661 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.151476471 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.156927194 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.589823255 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162785973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.142706859 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.143025069 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.146095759 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.160903346 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.592779377 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.147130861 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.165831272 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.193737813 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.148026847 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.445991868 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.173314028 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161425119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.155302 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149585969 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.142013535 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.447264183 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.616209845 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.161153963 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146619172 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.14329729 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.160041816 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.146617368 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14135176 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.455047036 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.170784069 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159027752 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.265102992 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.154070123 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.178954493 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.141879347 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.148236337 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.172130265 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160573191 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.176096366 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.146068147 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160911595 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.159269076 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.141711362 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.157026648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.155580475 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.146483613 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.150264747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.139424073 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.175167762 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.159563128 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159183762 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.167299612 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.26761611 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.144066516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.448856767 seconds)
done (took 30.163864463 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.213164088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 5.139213416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.242211416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143315898 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22560135 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.229883564 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139920058 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.140114917 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138943399 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.519546959 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138695798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140539818 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 5.135979208 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.13876488 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.225199894 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142135023 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13887623 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.481999984 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143334878 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.213914751 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 5.140761368 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.138998125 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.142628169 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.51785998 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 5.139101575 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 5.13912755 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.213401342 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.141813441 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.480467135 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 5.13769953 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 5.140527072 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.481821151 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.234492629 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.160518153 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.152273446 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.149672866 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.22334108 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.14785125 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.225155781 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.222810162 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.241578395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.182094516 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 5.134486289 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 5.13442959 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.146694766 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.143852278 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138781807 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.170532477 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 5.142618661 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138658408 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.482690968 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152486188 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141036102 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.139988201 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.139441313 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.17295388 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138767262 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143825717 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.236299337 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.145926511 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.20748754 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.51852874 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.519965235 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143311666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 5.144313998 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.141428975 seconds)
  done (took 68.557549793 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.208543275 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.216728046 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.210598912 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.142893167 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.191865542 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.210952719 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.141587064 seconds)
  done (took 1.380194871 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.149528452 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143886119 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.195003024 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.194783543 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.144181174 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.295000369 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144525613 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.156184273 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.142205756 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.197260268 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.145048393 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142827045 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.151319297 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 5.144401791 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.192306248 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.154930412 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.259385165 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.145014644 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14465771 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.29653095 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142368367 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.150094104 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.196166039 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.155409681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.144112529 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.148628863 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.724993942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142580648 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142466648 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143221153 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140080993 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.183418291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143842752 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 5.14254282 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138393378 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257084194 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.140999518 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139576799 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141968039 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 5.134297985 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.141379815 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142075026 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.141400147 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.138450414 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141216007 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.165751632 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.140503653 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.141132277 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143940808 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144281535 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.19419029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.144586233 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141233497 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142241394 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.199290248 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.151147321 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.145094139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142187068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.144898269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141841467 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.294883443 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191681828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.144011826 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.192421283 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14368737 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.144303153 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144419334 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144383703 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.239576665 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144686897 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192513802 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142419317 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.302523979 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.169805119 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145516997 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.146697119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146552254 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145692376 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 5.138471025 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.148310517 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.14257007 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.145400882 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.151770017 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142755432 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141621293 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.255898814 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.25182088 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.141801834 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.15443936 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150117871 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.141107273 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.196913736 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.142199457 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141387756 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.198806348 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25930715 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.197699791 seconds)
  done (took 36.656725885 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.146816092 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.148737255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.141909682 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.158739298 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.142322975 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.141947519 seconds)
  done (took 0.936676972 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146893842 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.143935823 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.142022968 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.143187038 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1435329 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.144185109 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144582055 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142064163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.147848338 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.142511056 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143730976 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.143313446 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1433444 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.143091803 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.142496506 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.143060437 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.143376905 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140691143 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.142461261 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144334575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.292828183 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.142422245 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142642377 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142354796 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.147692999 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142048404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.150953159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.140655239 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.142446192 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.150711037 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.146075431 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144358725 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.140722526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.14813375 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.146467468 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.142486688 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146425983 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142975254 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138955698 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143703504 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.144032134 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143252967 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.142691271 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144099341 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142811616 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.146846923 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146502136 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.148684936 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.144844853 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144061839 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.142732442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142362415 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143776482 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.143410864 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.142832078 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.150604064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14645764 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.14227963 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145172727 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.144710616 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144464797 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143284384 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144103351 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.145471334 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.150035646 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144526766 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.143329151 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14692534 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143376824 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143527797 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14469495 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142079166 seconds)
  done (took 11.594015448 seconds)
done (took 119.201551147 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 5.287378728 seconds)
  done (took 5.339573506 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 5.313469302 seconds)
  done (took 5.477004394 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.726503856 seconds)
  done (took 6.784937162 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 5.136877085 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 5.155306418 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 5.133310586 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 5.140156743 seconds)
  done (took 20.633951921 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 5.323545586 seconds)
  done (took 5.381213137 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 5.146276372 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 5.132559689 seconds)
  done (took 10.385552485 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 5.151734807 seconds)
  done (took 5.211640437 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 5.231205529 seconds)
  done (took 5.291589645 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 5.142255066 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 5.167352814 seconds)
  done (took 10.422112686 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 5.120289782 seconds)
  done (took 5.177672364 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.809247495 seconds)
  done (took 7.889383694 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 5.139773274 seconds)
  done (took 5.225909354 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 5.151122465 seconds)
  done (took 5.210258935 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.193206547 seconds)
  done (took 5.24920399 seconds)
done (took 103.737386104 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 5.138634175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 5.136959443 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 5.135174726 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 5.134961097 seconds)
  done (took 20.598157018 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.176523247 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.17625931 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.177663011 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.185472543 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.179458755 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.177062621 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.168355182 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.168708228 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187470855 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.179339303 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.179093319 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.178995627 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.178152376 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.168041938 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.179140851 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.180175162 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.185726111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.177514541 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.168713276 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.178753748 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.142939862 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.1866634 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.17890077 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.144471173 seconds)
  done (took 4.261948611 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.34318567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.213384197 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.294884411 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.193095858 seconds)
  done (took 1.102044527 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.194710318 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.195832345 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.209231622 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.246588347 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.270227492 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.205533432 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.169078892 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.16466204 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149861534 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.19545228 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.272565121 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.190892858 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.290290227 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.143007769 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.327642596 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.142945283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.144216357 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.195213864 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.247880403 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.261809522 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145060006 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.194746451 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.198569259 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.191377887 seconds)
  done (took 5.005079122 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.140878993 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.149774827 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.149912397 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.143456624 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14451785 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.142789874 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.150969875 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.145249814 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.165794456 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.145480118 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.143323444 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.14215905 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.142953735 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.142855688 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.143147445 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.156279341 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.157873869 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.143810467 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.147787156 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.150152363 seconds)
  done (took 3.007325509 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 5.137320609 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.251628968 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.491282121 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.391872558 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 5.138466761 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 5.135662611 seconds)
  done (took 20.603995442 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.157014018 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.144938109 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.140692982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.196973849 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.277947061 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.151659133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.143985197 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.15304787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.185653437 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.205524914 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.160076886 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.167736991 seconds)
  done (took 2.144022733 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 5.137156536 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 5.135525907 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 5.137237561 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.151998312 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.153192902 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.146657467 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149487088 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 5.136017886 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.153467207 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.157488464 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.148305134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.152438426 seconds)
  done (took 21.820579505 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225255373 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.027689203 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.191367931 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921958506 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633296154 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.346990147 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.136579321 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.498403638 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.15698258 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.409541906 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.140274583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.357113997 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.390355781 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151068245 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.134819969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.61566 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.449627462 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.365315296 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18374002 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931838022 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177234722 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.652258933 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982532108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186444352 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.34760893 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.272139549 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.397966423 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.100890997 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26841107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177246893 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148646562 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.137487671 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.411010681 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.514474027 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262511447 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148631373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793884867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.877507802 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 5.130520516 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.058964981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.973164627 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.247236137 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144002444 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139882463 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.073071949 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.65393867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.500026586 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.159622992 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.847503869 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138157892 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147932606 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226705311 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141343815 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.95600994 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125711984 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438469892 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 5.134023346 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14534141 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.711387591 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271123419 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675934419 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.085842672 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.330597655 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978867605 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.518169403 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.296940199 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.14082223 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141211356 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072722807 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942522972 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177515403 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284531028 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.15664805 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787590034 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.440503475 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22234971 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194872632 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.424139889 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.953789188 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.085327949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.366929222 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.094967308 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071848275 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.010917344 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071059741 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.404185821 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212142039 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.766637801 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223509102 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.477423962 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166811883 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154134467 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145257398 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.362985142 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.701989874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137830685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.881704393 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397405821 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158131806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.482889704 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088996544 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139269597 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394502674 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.349397795 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.380024076 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.627243641 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310885543 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.153785154 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.197680724 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.056715598 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160151048 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.409418204 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205061796 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280961486 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183880749 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.102587817 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.44802454 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19998968 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.282116585 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.125150703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.388296521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.470854265 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.466385677 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201872641 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.13730372 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.13817316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992278601 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.678716901 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.404478441 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138446458 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630485861 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15869045 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 5.140161166 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074188773 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.732012871 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.135303057 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 3.220705568 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.361741308 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107475462 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.423509638 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073791217 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283896658 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.252087653 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.360499946 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.783710594 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 5.225544529 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.393383557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635186627 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.389660553 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159588 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158129512 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228241743 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160280354 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 3.561388631 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.402589306 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.142327596 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.143296791 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951968994 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.131496114 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139881785 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.141757846 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936281776 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.438794358 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.173520408 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141838392 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.025597397 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.154405227 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206390058 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144921607 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148208553 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.681127589 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901088014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.170008301 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.761337905 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360546226 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148756497 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.921926103 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238141089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.222886806 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.426231484 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20868008 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.072008656 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.850834028 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.832976217 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139910243 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073520885 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139675544 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14818283 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150989203 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521067677 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.414146073 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.192510574 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984266026 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.168109812 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149758898 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.144514706 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137829717 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.677714603 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293144653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.676169303 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161308561 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276813037 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.152082254 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074539398 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144416953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145763242 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139427152 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.097436707 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19354255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014174006 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.509513704 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.41194685 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832457346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176988954 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015350405 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.186074978 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.16051544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934429167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195369842 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 5.152167971 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257228318 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148952664 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963002829 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822811531 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.706066911 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.457585928 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.458444682 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.599423226 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 3.649940029 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.416733017 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.487133351 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390400538 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.667698151 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198827001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.487504747 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099319657 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231801584 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.792532995 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.496345055 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151015821 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.367658398 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.523101964 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 3.024726294 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273650842 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.349055866 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173345485 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.055407207 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075172279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 3.341828176 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281111326 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.999691244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.328791566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.477549704 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933000471 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.219972618 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 5.137485264 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.851363159 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272242816 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.867811407 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.499484938 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.653634105 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.171766499 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.60560042 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157971746 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.581562703 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.496141887 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.471981953 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.234131841 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090542062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148504679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150090404 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13875837 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.133815185 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.010646466 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.389223565 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150142028 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37515979 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.409826395 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.408069499 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.056101837 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143098043 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138516039 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.438177594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.97900712 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270839978 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 3.59193365 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.643463956 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140428025 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.071886325 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074406359 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.832317554 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.148582228 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.112730349 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.363525128 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.34138136 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089399728 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.660434302 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.357886418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.394162478 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.153029885 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.412942011 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.423198496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872568011 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187722056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.239932836 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948439996 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 5.233002666 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.406134192 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.375938338 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938482439 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.390081058 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.194148777 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 3.021586943 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.138099733 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.371081485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.408763608 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.164769111 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.360715536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.87589427 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 5.146137344 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.559683423 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206269209 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.182315495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.280034895 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.331026549 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14748035 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2247218 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149113654 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149985655 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150106939 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184717462 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.168114768 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.249526826 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149912644 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228954594 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304730542 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.656437997 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141565956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.41671649 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.5147164 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.474358799 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210945282 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.137237054 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138304284 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074683346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272487166 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.584520273 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.41299029 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269127337 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 1.43961209 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160795174 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911629156 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.507771591 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.354879183 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.414098159 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.034738477 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140589833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.218372748 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 3.407817593 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15193688 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.352195259 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.371574829 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.475398478 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625407762 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.386537413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.488087747 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.430726335 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508695012 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139223932 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727515672 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 5.148225911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.93978513 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.231692291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.172668333 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.394259139 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14861797 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.529495074 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190374701 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 5.335510649 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.655430796 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041661483 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.415095813 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.123737712 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223346723 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.415523372 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.536432912 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.464175289 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209005518 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151059555 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.855524669 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276989042 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.014952568 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.405966646 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.139921512 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351126005 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.849447549 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149893065 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.417160797 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.456514992 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 5.135297991 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.009412797 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144979964 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.1509393 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.364016724 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.417842258 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.424479891 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14722191 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.149227219 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.95707381 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.416290545 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210283151 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071826708 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.140958066 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23951446 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.395622809 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160681117 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.82749245 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.851927418 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.436560184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.072910128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159672518 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65150017 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.485209476 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.479282308 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.695795704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.365691757 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.715124553 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103749292 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.413581951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145607994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.656146243 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.419224646 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.144601969 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.760562687 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152631304 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.412069717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.469862814 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 5.152814877 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058256043 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.097572311 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.364062219 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734838302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103214487 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144873043 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.19885835 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156527132 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27104915 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149674982 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.009172589 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078181416 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.861549146 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632827864 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143428332 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 5.1284946 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.940919499 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.774501254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147202986 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283055489 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163449244 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.848432713 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.433697773 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.395352503 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.762453013 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 5.123617981 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.142950561 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140966224 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067599336 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.335682933 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.519338929 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.437575408 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 3.525250212 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.234315149 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144650456 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.355749356 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351008312 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.139909322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268693587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.551973178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221998935 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.883753473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821382164 seconds)
  done (took 854.878361126 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.149622967 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 5.165199459 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 5.172300087 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 5.230689231 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.178344197 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.231619008 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 5.211568687 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 5.242305102 seconds)
  done (took 41.640591539 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 5.139912085 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.335754688 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152638368 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 5.137814122 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.145697051 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 5.14137152 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.307633004 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 5.149197399 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.145200519 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.147950753 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 5.140703058 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 5.135803197 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.447196327 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.166491936 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 5.138882318 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 5.121518608 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.143406482 seconds)
  done (took 43.160887093 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 5.159061871 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 5.30227983 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 5.17709687 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 5.172059784 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.099571745 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 5.153597196 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 8.06406452 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 5.195552696 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 5.139731741 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.345903153 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.471556707 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 5.152012633 seconds)
  done (took 67.492617592 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.148651759 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147580298 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.145943443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.14600493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.146172704 seconds)
  done (took 0.793600735 seconds)
done (took 1086.592804546 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.38843879 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.361994635 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.370347797 seconds)
  done (took 0.791423871 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.289006469 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.337243647 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.457159109 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.463064261 seconds)
  done (took 1.631404576 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.433826389 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.531629087 seconds)
  done (took 1.023841676 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.506723559 seconds)
  (6/14) benchmarking "18129"...
  done (took 5.157552772 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.537802012 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 5.138566531 seconds)
    (2/3) benchmarking "Float64"...
    done (took 5.136645902 seconds)
    (3/3) benchmarking "Float16"...
    done (took 5.136714641 seconds)
  done (took 15.476764829 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.145184152 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.146658115 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.143295079 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149419161 seconds)
  done (took 0.643811462 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 5.123851559 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 1.93241915 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 5.125517789 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.144823481 seconds)
  done (took 12.38579508 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.890642345 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.542225118 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.887296511 seconds)
  done (took 2.380432053 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.645658627 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.090189138 seconds)
  done (took 3.794806702 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.3990023 seconds)
  done (took 0.458051517 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.173540956 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.415635053 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.668985266 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.679633666 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.767780592 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 1.0113004 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.441453152 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.340348649 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.574985755 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.599036332 seconds)
  done (took 5.741337227 seconds)
done (took 50.976752531 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 1.510557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.500733829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.340479471 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 1.478502896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.3614214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.34059872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.354912224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 1.463394731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.974494644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.971530616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 1.517759535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.361737079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.299717092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.505329011 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.310491747 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.375276597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.360370308 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 1.525903624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.172018184 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.370463615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.36119734 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 1.105916908 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 1.362816056 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 1.11717324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.357841112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.290547274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 1.698577163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.372045654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.329758822 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 1.704532863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.289452666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.526143701 seconds)
  done (took 113.666810474 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.880161514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.137081839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.138581638 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.137709012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 3.500964058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.137713807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.138201931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.137192364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.119272174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.101356392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.138358147 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 3.49732622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.139443661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.138764052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.138941863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.137531284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 3.309410468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.905460851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.138056494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.138034981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.138036245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.346798569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.137956522 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.363571188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 3.292941655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.148820854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.097041001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.150945994 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.151604156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.137965186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.157082045 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.138366452 seconds)
  done (took 149.433513022 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.115895499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 5.138447849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 5.138406979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.138729631 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.138828793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 5.144463104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 5.139675854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.13910849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.8184487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.810491935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.159473428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.159990507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 5.162208492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 5.137396337 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 5.165729584 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 5.138142818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.162529004 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.164931622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.169317322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.168558485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 5.168506685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.890405428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.173692379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.951115092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.176942333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 5.170444051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.138912095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 5.169782401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.157116342 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.159980855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 5.159814758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.138756848 seconds)
  done (took 163.851281751 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.343936407 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.149610172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.150164166 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 1.079579864 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.150463553 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.147764918 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 1.08602664 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.345955275 seconds)
  done (took 3.539765013 seconds)
done (took 430.561186671 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 1.612149863 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 1.45397363 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.32537724 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.170124701 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 1.39265051 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.208078468 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.166418843 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.229886256 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.889978066 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.238916614 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.845241548 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.182433993 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.934710912 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.188993794 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.288608968 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.222477011 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.710488661 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.807245189 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.340610375 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 1.212779574 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.346079415 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 1.119809969 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.242028695 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.904821429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.958316511 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 1.163917215 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 1.334070167 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.723288435 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.176234205 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.330359224 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 1.926559722 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 1.543274722 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.180533322 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.159069821 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.218987957 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.197832789 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 1.503187882 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.179385668 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.282222946 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.928012106 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 1.214066577 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.78261979 seconds)
  done (took 28.89239076 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.135506506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.136939549 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.13652858 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.134697398 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.137676126 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.134186593 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136788097 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.13328991 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.133870842 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.13643668 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.133840468 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.134406669 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.134626609 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.135076205 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.133432712 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.134052903 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.138038687 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.138765846 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.136835314 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.133854909 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.137043001 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.137507354 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.151201795 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.135963903 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.136639838 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.137749099 seconds)
  done (took 3.621986403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.149269991 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.313971333 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.406249294 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.164502718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146472921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.149583846 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.164188169 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.151950768 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.149807726 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.14908838 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.242138968 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153628411 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166411013 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.413244876 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.160451598 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147716435 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.149117588 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148434346 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.321879756 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162131335 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166492706 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.150743048 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.166897486 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.160603145 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.151073457 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.569656253 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152868732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.616622698 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.15629888 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.240231946 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.189236458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.166100767 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.560682142 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.417260474 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.198387709 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152588148 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.148242097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.243128525 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152930292 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.148146477 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.164486726 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150848648 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.405744299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.638966332 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.158959004 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.146171584 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.631685319 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.254646151 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.187121433 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.161829211 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.412644121 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.16022392 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.150228643 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14806408 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.184635034 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159487356 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.148421727 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.468623481 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159374832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.165835945 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.151659616 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.148705803 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.325674018 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.15335482 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.314670555 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.157342389 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.153964367 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150316014 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.408414425 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.162098457 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.647447744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.159977919 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.148919442 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.242547047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.315024525 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.656350522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.157614932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.327787817 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.576981809 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.1695743 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.152652511 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.607917591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.175134487 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.152383682 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.15178511 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.150675459 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.148842725 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.193729819 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.163976328 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.576826066 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.648833402 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.480984217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.171939775 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.159522761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.151005468 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.468080255 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155235653 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.149572477 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.40086003 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.654881695 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.160047754 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.158203887 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.630591752 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.162269251 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.166859381 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155423406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.414631157 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.161709326 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.193576013 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15035626 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.156501554 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.1528472 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.165913967 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.15106078 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148717023 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.623768291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.258826144 seconds)
  done (took 29.497256656 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 5.14204994 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 5.157416187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 5.139580285 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 5.155522535 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 5.147148005 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146486459 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 5.141534834 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 5.140455326 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.147074158 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 5.140234726 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 5.140478351 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 5.140848093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 5.143542801 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 5.145698466 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.179854963 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14836267 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 1.751756095 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 5.138343141 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 5.141503768 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 5.139454125 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 1.790660328 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 5.14641587 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 5.138586536 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 5.139543091 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 5.142989106 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 5.138256691 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 5.141441684 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 5.172509392 seconds)
  done (took 117.401903255 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.148816006 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.263916489 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.162599302 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.176768988 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154281574 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.147228948 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.171666211 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.161020873 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.152739977 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14636108 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.146771708 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.207413224 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.157937761 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.247062771 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.176796403 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.175310454 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.251290397 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.153241658 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.147414861 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.147241098 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.176907252 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.140034225 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.206855218 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.270987257 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.166156586 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.261808436 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.148073359 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150029572 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.149205888 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.262417907 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.161107131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.206049493 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.173060126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.163757424 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.268346257 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.259168817 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.251561307 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.177573252 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.150425848 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.147215223 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.147704558 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.134786288 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.263260426 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.166968789 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150060726 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.254712996 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.164035546 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.150983169 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158586274 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.147405692 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.160920771 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.164569114 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.212078846 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.273361316 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.179255453 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.171963106 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.171453572 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.445760208 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.165549206 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.248859511 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.138859584 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.263714425 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.164183114 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.135467024 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.148570383 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155785916 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.176893378 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.175302808 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.251236517 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153025435 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.246558541 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.180305042 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.152077497 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.148711982 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.151492608 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.262706807 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.263753622 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.179748138 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.181664943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.174978539 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.140300977 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.149075184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.136545885 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.164379905 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.149563379 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.263100675 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.261264014 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.152631324 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151534329 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.150496776 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.151575683 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.175088316 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.269055155 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.179811271 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.241588622 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.211445531 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.217852257 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158492775 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.159060355 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.149808636 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.208279257 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.160324664 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.159833036 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.496465635 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.2260755 seconds)
  done (took 19.973584551 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.620608444 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.229027281 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.204647291 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.454952983 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.574001426 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.008489383 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.197978789 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.194541359 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.219356248 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.383472985 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.26253418 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.218169297 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.180556192 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.169064846 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.195781554 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.21811129 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206417678 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.527496364 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.325000672 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 1.309837049 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.20086534 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.46037361 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.509955976 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.599577511 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.228525103 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.538820832 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.871692899 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.361246118 seconds)
  done (took 11.54023576 seconds)
done (took 210.987746174 seconds)
SAVING RESULT...
DONE!
