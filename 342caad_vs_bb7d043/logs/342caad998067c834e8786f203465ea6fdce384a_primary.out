cset: moving following pidspec: 30768
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.308039617 seconds)
loading group "string"... done (took 0.476174153 seconds)
loading group "linalg"... done (took 7.902302456 seconds)
loading group "parallel"... done (took 0.171944477 seconds)
loading group "find"... done (took 1.259878678 seconds)
loading group "tuple"... done (took 1.956876049 seconds)
loading group "dates"... done (took 1.320461465 seconds)
loading group "micro"... done (took 0.244626017 seconds)
loading group "io"... done (took 0.656322513 seconds)
loading group "scalar"... done (took 40.988207954 seconds)
loading group "sparse"... done (took 12.643589557 seconds)
loading group "broadcast"... done (took 1.019272328 seconds)
loading group "union"... done (took 13.917977038 seconds)
loading group "simd"... done (took 4.814628516 seconds)
loading group "random"... done (took 9.663827061 seconds)
loading group "problem"... done (took 1.98410079 seconds)
loading group "array"... done (took 22.407262417 seconds)
loading group "misc"... done (took 1.428699232 seconds)
loading group "sort"... done (took 3.595619845 seconds)
loading group "collection"... done (took 19.290145083 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.452095458 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138192959 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14266889 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132095456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200708523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135820183 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.152653577 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.107264059 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.914270329 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174287082 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139687085 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486517671 seconds)
done (took 4.909755575 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.257450151 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080655928 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093895318 seconds)
  done (took 0.85530796 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08688356 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142187368 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088300892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073587998 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.088571455 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.073003787 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073464352 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.088381494 seconds)
  done (took 1.304350177 seconds)
done (took 3.184891482 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.719960668 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283372718 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200825223 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500165362 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.172447807 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.207551988 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.712159066 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.386213748 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.240553759 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099264287 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128519403 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.438795485 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12780685 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.729490128 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084423201 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120948276 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.172098814 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.523681328 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090307002 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088545863 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113142213 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150267355 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087261628 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09681861 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.179317429 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077660713 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.183458777 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105541177 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074772973 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276830494 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.195259381 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.726089089 seconds)
  done (took 11.007161511 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111071649 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13337579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075249945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.149272812 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132870556 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080382464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095601152 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074974881 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120381406 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176005226 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113484699 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13594435 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089418851 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076838809 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114157805 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227956782 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117567666 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116508369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078550621 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101100817 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116773816 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10870271 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087837515 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103910559 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164524698 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199370128 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10479436 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.118481081 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075552304 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1039103 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139585475 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1523084 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072561628 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076055082 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172370843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11901623 seconds)
  done (took 4.928186463 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105274361 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.132490502 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152354966 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166780477 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158693481 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137433434 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150723856 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105453997 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253296117 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176826656 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159527855 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139442786 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107899759 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075838043 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096504891 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07503652 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684920383 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16127445 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133812999 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093245432 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095619226 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081352581 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.723133813 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081998607 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08896022 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081070855 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087195406 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158735374 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078733764 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.170408126 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11734027 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0773139 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130904381 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201242206 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106273194 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132799721 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077068601 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090515502 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175380158 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081203629 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074544609 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120087372 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13053261 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130990272 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.074821993 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.089968985 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205903997 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073239347 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106864018 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.004148915 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175536953 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089608502 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074279242 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335881978 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11338501 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075741814 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09540072 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278775926 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124918806 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093718631 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076422903 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076736376 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09387208 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.731044228 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074808499 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.162106208 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09171733 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086812362 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094623115 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075440209 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098111893 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082274471 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.111985864 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102810525 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092803701 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076732839 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092235372 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074276888 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.093860927 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094557568 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089734088 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081564465 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092075182 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.073271751 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15575442 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.074412993 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094867139 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123637437 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091906029 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074784526 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125317 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077830886 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074866075 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132079621 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075974129 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1126624 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091973489 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136724121 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076065502 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1831985 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074910287 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123923349 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.080743878 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125366768 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104071288 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07685975 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09735283 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073547946 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091098591 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142975229 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076198514 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091159568 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076959685 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104670668 seconds)
  done (took 23.283191833 seconds)
done (took 39.894898191 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.342876978 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105224281 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105291429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104814362 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103923586 seconds)
  done (took 1.516592862 seconds)
done (took 2.24505276 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.26700005 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167456816 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072021601 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163248945 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088626083 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171183829 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154187256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.106059573 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178998728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.089015698 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158886752 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072510819 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072052619 seconds)
  done (took 2.516610177 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090092669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110497366 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078294468 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089438728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089288314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089731654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105911549 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095569802 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105445587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079999054 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072059845 seconds)
  done (took 1.735300651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088909816 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09313086 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09402576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088749143 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088928561 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089064973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105651341 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094198936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105873732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0809931 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072532331 seconds)
  done (took 1.728266385 seconds)
done (took 6.701326209 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.094530323 seconds)
  done (took 0.814294563 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.034571608 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.506576126 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120932398 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.168518635 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326532667 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216631939 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.612038912 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135431846 seconds)
  done (took 16.039010792 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110185552 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10936091 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077494414 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092701552 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076579815 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096383751 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076746657 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093545453 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079378225 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076163952 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.092400087 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079705824 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09500406 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079658814 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094607658 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077711877 seconds)
  done (took 2.200834308 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112997411 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11221819 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098706645 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085106452 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097408628 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080391821 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100141672 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082262498 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095185233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080525308 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10068296 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083850973 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098722041 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079738285 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098519337 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.100953992 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081954627 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098403537 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083958476 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099781003 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085010498 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096724463 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083433683 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101003579 seconds)
  done (took 3.072351478 seconds)
done (took 22.853215599 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.14854089 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081383126 seconds)
  done (took 0.962036748 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097421642 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112923634 seconds)
  done (took 0.949851299 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104687004 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092859043 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131210237 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093757492 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093993356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077405988 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124751315 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093048521 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07781567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078124115 seconds)
  done (took 1.707295869 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081473822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081354441 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101073664 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113768139 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088274336 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095995964 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083206355 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097404639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084166714 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092184404 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085662773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110176288 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084063015 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112885352 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098775461 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083737699 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102402 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08227314 seconds)
  done (took 2.420410208 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077574489 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079202057 seconds)
  done (took 0.899438992 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080809704 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075965957 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096100476 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096122109 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076772672 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075532858 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092557721 seconds)
  done (took 1.336913481 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.481610155 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139835498 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265930966 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081208309 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.116847499 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.310908257 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.092324835 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081571454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098620662 seconds)
  done (took 2.465512305 seconds)
done (took 11.477952452 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088007029 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096581703 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.124322149 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45791474 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113294238 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076540936 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.153883633 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254983587 seconds)
done (took 2.106936415 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.143840626 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333697887 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121181737 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069830517 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091028682 seconds)
  done (took 1.361861077 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075613393 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077894927 seconds)
  done (took 0.903206055 seconds)
done (took 3.157279083 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076977408 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075304031 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089568118 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075049916 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088568889 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073126804 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.12351304 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075287119 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073073278 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092399508 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074620447 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091837059 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075551611 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075367428 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089816707 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07282435 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09090401 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072956834 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073295625 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088441833 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075218074 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090910951 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0727482 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072674721 seconds)
  done (took 2.742242011 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103215972 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092362499 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082045217 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097511818 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079516193 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098090447 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081714032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091347612 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080676911 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094682927 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079527735 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095160789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077737491 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094738664 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07847281 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094909398 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080983832 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092463557 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078458774 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095848933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083049674 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091714131 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079620898 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097703172 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079310249 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096292865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078109573 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091500765 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081754121 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094898168 seconds)
  done (took 3.395889937 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080943205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072425765 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089412803 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08054945 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0889854 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078089996 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072529306 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089610318 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078049207 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089381448 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078561601 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072508239 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089783371 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078031182 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094706812 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076193242 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.102702478 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.185362633 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073023421 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09439872 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076098667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088816859 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076123569 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073302243 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088847859 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072285581 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08940961 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073188837 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073166012 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089503037 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076886483 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093940945 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073292964 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079284233 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094091463 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072378826 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093490149 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073324788 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077246053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088579029 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072821828 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089486197 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073158365 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080079702 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092859239 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07517564 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090017923 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078206621 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093559293 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081190379 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07306592 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090180721 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079003479 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09437618 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077525706 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072424397 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090273725 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072740519 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0944884 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073582479 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073069228 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089539086 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076252369 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089983583 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08958769 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096142007 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074161679 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07841868 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094291636 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075741233 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096034672 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088760554 seconds)
  done (took 6.81066053 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078705278 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099578263 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076194491 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074697843 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087493648 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073501789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096198109 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074459035 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091573769 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092351754 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089023657 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076261449 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07560744 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093972228 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074593855 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091955774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083969907 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087885467 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074052403 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093919191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074431498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096100345 seconds)
  done (took 2.61753732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215892784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09965512 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136418264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093316089 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110138228 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108650047 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081471881 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098991539 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082400369 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100028547 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083395367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096816881 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109346107 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084138317 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10017408 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085266514 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096946286 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085398341 seconds)
  done (took 2.62315446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089017721 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093211851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099518839 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092455486 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077602761 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094996786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082865678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108836953 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079256391 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093020991 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086792386 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095648701 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079151542 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092194602 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078857443 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092322454 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080158684 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076074633 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102320757 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097909925 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082985971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103148945 seconds)
  done (took 2.738348794 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093691663 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095091127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098129767 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096905505 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075632214 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.094548408 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084680706 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092862107 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086393685 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095059606 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076847278 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093414592 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084410783 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092290804 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083440679 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093465848 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079750262 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077117839 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095283952 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07548578 seconds)
  done (took 2.522624021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118833881 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10919531 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091256671 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119283876 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09166792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108860393 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119103057 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091363126 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107799954 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105456469 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107971826 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09167461 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119335282 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115610634 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092139245 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118897814 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118701639 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102364054 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107965959 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091513205 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121033411 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091162038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118972338 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107827358 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091627922 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108245632 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092186445 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115581399 seconds)
  done (took 3.737547891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076805677 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075903068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091502316 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074298566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073806604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090581687 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07403215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091276958 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076622966 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073449732 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093635871 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.07739548 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094756455 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076395206 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076401693 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093187928 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076058022 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090393886 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07428015 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073626173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092944546 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076357363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092905972 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075017024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073734606 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092537613 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07499916 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090140213 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076267328 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073576493 seconds)
  done (took 3.205498764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085285398 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098064754 seconds)
  done (took 0.949610449 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075283903 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109416522 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07468931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080349666 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098779462 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077097133 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103274017 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082813831 seconds)
  done (took 1.464516001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094758765 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111786275 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083459258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105383701 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094267013 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.109497621 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138712134 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100245694 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082812039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092386409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093979659 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093426921 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083033801 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093564828 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083143863 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083360674 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094566048 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087386693 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102062734 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080423175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099338213 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089458199 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096230718 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085133408 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.095122422 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088249168 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.105324208 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089188942 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096990874 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088523161 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099305316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071246737 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08132945 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100206695 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078150679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111028067 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089566861 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097733779 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085936731 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100423655 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086539608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092730198 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.082992963 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.099983877 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090999338 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098967411 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084096435 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075462193 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091611283 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07997505 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093635245 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077717582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08918256 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085257215 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097856753 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092232523 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096493863 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.079293928 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.080210209 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.096672362 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084124261 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096701962 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079532969 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098130989 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085011096 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09814907 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086079082 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092589462 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071492214 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078665324 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103149222 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100795227 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103492251 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083540987 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100850046 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077958123 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097888125 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083909815 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102235923 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08701046 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099234559 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085334608 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102867925 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077239422 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097627387 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.083938666 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096529219 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081242101 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.075270655 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110260515 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080153527 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096268953 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075353141 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104186863 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080892576 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097727211 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075781293 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084690199 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089293412 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08295722 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101664876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07770396 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104256771 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08283173 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100559784 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085181444 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105071681 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077333639 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097543637 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074348843 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083428389 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097690168 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08421967 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088509211 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080827456 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096035659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083795407 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103450745 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080753342 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098587027 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085991523 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101731597 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080073588 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073714851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098237268 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082626521 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104757441 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085630889 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097536218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07605674 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094097981 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082798006 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098424188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083594824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083970858 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098585137 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072275126 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095871459 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082831487 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10331685 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078664498 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095324398 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082946633 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.078236834 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098058117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083809918 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.096662935 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076662552 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100469547 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080303904 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093223684 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087588515 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097141125 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080343001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08103695 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106222248 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080262268 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101699522 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079834886 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100392616 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084190946 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0942024 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077454491 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097122445 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088161111 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096929925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076850929 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074368044 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101236421 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076172073 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099771198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077534574 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.096950587 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084092645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079188972 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099429837 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079303202 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111107486 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09124757 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101716991 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08438407 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.105900505 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082283524 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096995012 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082084708 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101754384 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083474898 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102463088 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.083225554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100343995 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080593862 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074280245 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102291857 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08650328 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.09516739 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079695622 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093780521 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081965208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102085737 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083200009 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083264634 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097201852 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078460132 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105230742 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081150352 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099921654 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077212895 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100403843 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087588955 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102178232 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084952039 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.104483984 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081855431 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076198216 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1051379 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079877589 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10130641 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077022899 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093276808 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077105202 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101864435 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081533636 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080326756 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090451911 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085755908 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103372762 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.078246904 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095006611 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083888456 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105562188 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080356439 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081402112 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.098964487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083728138 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109716019 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076906661 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099019703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.087929996 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100639843 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072456921 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.101876503 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080590489 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095628815 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081197152 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079588279 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099130107 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085070268 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100745574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071991946 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098719797 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081183961 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076771984 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094402589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085520134 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100445294 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081205967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104850854 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084613454 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100943058 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081912613 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099346851 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083823406 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101675021 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081788985 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102022118 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081437129 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077087026 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098809416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076965692 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097236793 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082220578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101674782 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078397038 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102429752 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082424249 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078624742 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.098568544 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084688566 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097258574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079679384 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095377004 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082049781 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096608925 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.078866293 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080564426 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094786562 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086479981 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100229845 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087442858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095821601 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.074828164 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100253602 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082070325 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083576729 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102545081 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084103168 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097721673 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083102105 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099140317 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088040883 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.093409204 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088328853 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10271769 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079166101 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098979444 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.078714337 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.079598143 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095202636 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.080257233 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102484226 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079118905 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099702351 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08458228 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098241287 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079202025 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079428064 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102484029 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.078432902 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103105483 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.072775113 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09471904 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078647279 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082593974 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104340137 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084110398 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099181722 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081555013 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102211938 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082053702 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.092764035 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096521413 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102649663 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085138307 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104898122 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078065504 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.079714054 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106932702 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072527025 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098606197 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079404834 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.093607844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087494253 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101914244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088388278 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.078103561 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095368729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.075334487 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102113735 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081348969 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.090081431 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079782436 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081276854 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.099033759 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081109622 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10176761 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08134468 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102380835 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086827794 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098732145 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.080791958 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101390741 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076325077 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.076649907 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095323496 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081191088 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10178975 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.076423275 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074988646 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10055267 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.080205789 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097310321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082024538 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097863873 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086128652 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100540194 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081842521 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105655984 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.073835626 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080915229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100124501 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082536976 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.094803131 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08337467 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100211933 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084832114 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.104202126 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083489293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096631372 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083543492 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079357266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100791761 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082968032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102161415 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.077640917 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103110194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087663294 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09700461 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081003008 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077886703 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098113276 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083386699 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10243082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081067705 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104431042 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081579602 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098085488 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085476619 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101033513 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08264053 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102207212 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080887094 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084934109 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095897427 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087143956 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096888099 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084203457 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098682347 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.076664913 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100167612 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083369068 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081755151 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102231734 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085045845 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096446309 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078236463 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097517188 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082000401 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106719665 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087944597 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.099583974 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082827968 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077184942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094011992 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084974465 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.094242214 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080590208 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099633135 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08574633 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.098681417 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.080028659 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081677506 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.105624292 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085061489 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102694065 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.076659639 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.102969284 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085943757 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099076288 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080624903 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097467605 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085194817 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.083817783 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099098783 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078257145 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106915541 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.083596121 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104019691 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081243701 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097195262 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.079432207 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077150811 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103739232 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.081427638 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104420726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081931311 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101275407 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088673429 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.096635847 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.079534156 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106932681 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082583707 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104680896 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077786581 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097320095 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086974785 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085435513 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096552413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077931028 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095242632 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082024074 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096331706 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078348926 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10725626 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087968971 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.081187221 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099800342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081239697 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096085159 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077542928 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096330883 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08495678 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099533474 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089699993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.078141753 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097416303 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07791679 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102002208 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082146374 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.100921699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076637121 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077856436 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.095840287 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081755569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104903724 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082671375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102715094 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082853044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09965242 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081390375 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107712027 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075811719 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.082781729 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108872628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08452449 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098417553 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085009185 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106963899 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085425932 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097067143 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084634882 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101236702 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080070443 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103295809 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08553367 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112706926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083627053 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.096945709 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082526448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082230511 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097502454 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086919806 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104574497 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085893273 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103274888 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081601014 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105260547 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082371098 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103603413 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081973294 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.101458542 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082728619 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078789153 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100147446 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.078086125 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104375715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085288942 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102483296 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.086726785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.077993489 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109588515 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.106111702 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084034281 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076020122 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.097826702 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078812476 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097773268 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085512475 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076646814 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101487258 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081099243 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101472616 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079797674 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104833536 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081815251 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105074088 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083497279 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072789132 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099818028 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.082135607 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099274142 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079607884 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102780795 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08630434 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.104234715 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090650881 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079724326 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.101014104 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080512612 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099393302 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077800374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104758105 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083203361 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080816223 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098069967 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083279783 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10532541 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08354518 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104810123 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086519469 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101156478 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.088232457 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106114779 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077221105 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075689088 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104734511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080831266 seconds)
  done (took 54.539902879 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125921091 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104535072 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074392148 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094541527 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120387522 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079363951 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073822088 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098392094 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078438601 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10892095 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074375724 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09428821 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116111104 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102378201 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119086241 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108499475 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074845964 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098583624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074891393 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098123322 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094657882 seconds)
  done (took 2.833115778 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101967801 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112728924 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091505858 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115690483 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105637598 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093057765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111687744 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112593351 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095899289 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106236573 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116627757 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093244093 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10719001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106147953 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087830221 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109287359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096494956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105152108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114275813 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091778566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109114612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11018363 seconds)
  done (took 3.112618543 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088551274 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.083423731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103099938 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074328799 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10164682 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074312203 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10764604 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.077061057 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08667897 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.09732938 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077352973 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.097519056 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083744984 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073407731 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.098142392 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.077160379 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151133309 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107584094 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082308817 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104074206 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078167195 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.100725497 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.078026168 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077417166 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.097554983 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09260791 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104336922 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083782732 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102577699 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.078365847 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084003419 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.096819689 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080209 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.099101699 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.078688202 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077410115 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102234323 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083227231 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.097219304 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08013792 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099087952 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.078366786 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083778586 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.100038669 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079840074 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.096743786 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080569478 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102388721 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.074553228 seconds)
  done (took 5.231091768 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11572567 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132038603 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101970967 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14336501 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117835113 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093098728 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105307378 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14135442 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077775371 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081323647 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120862051 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117033199 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103269342 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089643873 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102967218 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082696876 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104289554 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080284957 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109093526 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.079969089 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109666418 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087247828 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116776003 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115824091 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088679804 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102796694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079745836 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109003586 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113759524 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088811929 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109723165 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090936172 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11808989 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101455272 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079542365 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105577793 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100560323 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104371871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086215981 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09756149 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086752305 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109570438 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.08697516 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119432086 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104037411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084694758 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103860825 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076599732 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115294824 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086307828 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114600731 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117700137 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087767471 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10418976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0896095 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119146338 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103684607 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081626682 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107451861 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.094760695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097320867 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087923556 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116203662 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105542521 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093310858 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117421306 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.085247262 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108307412 seconds)
  done (took 7.878595142 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112352407 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108999919 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100015441 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120771767 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109310694 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.088651122 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108510666 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087981127 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109473982 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115205397 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089884694 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.157499087 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085152768 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115500876 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108633464 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089137533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109422564 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088051189 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109101958 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088688159 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10870134 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12053661 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089072398 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120749773 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121587004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085311896 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109130484 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089313276 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120210943 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109759149 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100514383 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109126471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088640839 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120349896 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121933501 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108128935 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083549126 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089627255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109537171 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108468576 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085890326 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120276933 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088377572 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106226256 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088558859 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109041869 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121012692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.101273225 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115855933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115117529 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.089049616 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121087036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109227401 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089742099 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120261599 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129564713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099470976 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119682082 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109176689 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09941682 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118975901 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12821728 seconds)
  done (took 7.438112799 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113765152 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11577938 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121307542 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074629497 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09951531 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087329881 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098676248 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.07865278 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114650363 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09478813 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117878812 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107397803 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091183618 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118188242 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108122315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09143217 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107987704 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088355763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114546211 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108365223 seconds)
  done (took 2.888672865 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089837609 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121301685 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081144754 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107877704 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083605355 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108782666 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082266734 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103771715 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08154753 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103078778 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093286476 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114481959 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080308842 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109607008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113015542 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088082634 seconds)
  done (took 2.398371552 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101292611 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122323917 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.103847889 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106274175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077548106 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104835679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083387079 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097630974 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076238228 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.117394334 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086744571 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108198069 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08289365 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099638802 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081161582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109586111 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076639092 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083688911 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103616952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103742371 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106628558 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082758011 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105447934 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.082527276 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104486878 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.106467464 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087831418 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078115701 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100305856 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083516979 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10352285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088555838 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097592064 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084902653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099851928 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077537721 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104616255 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083353664 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107620945 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083670012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099136761 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083400572 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082849208 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102761761 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076664395 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104339819 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076697284 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107413967 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081638875 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104151057 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083461608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10964231 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087018978 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.112079855 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090079651 seconds)
  done (took 6.039972593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095639288 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105620894 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076195324 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078172046 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105228018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.08335591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106886613 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083102738 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103618832 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07772956 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104526623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085417251 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103988548 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085387948 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104214377 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085819729 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075525269 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103100896 seconds)
  done (took 2.508977382 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086034525 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080269486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110127681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080201222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101654361 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082974608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097154506 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079555191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078920906 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101042904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080877236 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104080527 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078122317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.10375234 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080713105 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101352002 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08340682 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078345747 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101543667 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07733809 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103922781 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079242335 seconds)
  done (took 2.816667324 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117706924 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121335132 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.088577375 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.209061664 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121525263 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107317081 seconds)
  done (took 1.612174267 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105992093 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139047844 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081169838 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104986635 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09537688 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10728521 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085849609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106406269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119889792 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098820637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105982499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12071706 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099420355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116770791 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115592648 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095282692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107800536 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106521579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082164901 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129348716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085538383 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120433631 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106345651 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086166516 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106972912 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096768496 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120470135 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119578857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085572153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120297711 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116014062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086197486 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120597623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119849399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08421806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119927336 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106205773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110000784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116065829 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117839279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082774868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115181544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11965671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094168911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119571769 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085662618 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114217105 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106515624 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085955285 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134533687 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115461521 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118343626 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095020789 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120284407 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119728591 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134889592 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098548495 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117922296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116471472 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11882129 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096509004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115537812 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118049101 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099149184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11623352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117479839 seconds)
  done (took 8.000773495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121279676 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104408354 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085568345 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11967768 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11875624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085611479 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107673923 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086131875 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107154534 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083777216 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154654969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107295456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117569512 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097591281 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107086324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106231095 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086032297 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118250754 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082355847 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134439587 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108093363 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097650011 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117655554 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118439564 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120277699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094634616 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108067663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086133023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106836662 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107072314 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09406323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107077175 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097668847 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103681559 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118678648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086182865 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106946836 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094037938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108295021 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115775993 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09693241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129736529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106828909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085911104 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119951081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106803698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085760708 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103099628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087307715 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102978827 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099386828 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12160216 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120070815 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118628278 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086333349 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107144431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085856573 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107538611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085869898 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115770803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118952735 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086317048 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135446044 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107677954 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085555516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11910833 seconds)
  done (took 7.811787103 seconds)
done (took 148.668919943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097178909 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135288582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09455896 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170166225 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081199205 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.114245687 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134874908 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095469822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10255491 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080933403 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102367872 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083238562 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166370766 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081931225 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080377099 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105413066 seconds)
  done (took 2.579755232 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176057067 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288669479 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09808325 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10116197 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086075137 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081411084 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.101587132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088882021 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104088037 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080998765 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101977985 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082069953 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080556627 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103034535 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082504127 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102170014 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081051869 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080628682 seconds)
  done (took 2.777739532 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109095675 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.188658985 seconds)
  done (took 1.158319638 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117096455 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172496412 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268409913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149940837 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.131849868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095127917 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.152308901 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12261355 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202612025 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127067294 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104729597 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109586931 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135140274 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091485155 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111244031 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087587575 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137425866 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088396158 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111667149 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088977722 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134783802 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080173547 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.112630891 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08838236 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184519421 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124376634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102426468 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080754513 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088845509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110871763 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08715228 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115253686 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124884137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.145412297 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093260792 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.167520905 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.088059767 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107811445 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090435254 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.108340633 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094834658 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114430199 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095446763 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109845839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.080916519 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108912102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.080443763 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080872413 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11116308 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089149657 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.111873492 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.087222474 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.166213267 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.385788952 seconds)
  done (took 7.417435906 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795172934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148359907 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085878184 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.869484021 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133458576 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122541719 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.767135515 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132170767 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228087656 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.808680758 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101551043 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125199512 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222940079 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.225109837 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.94037997 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282483261 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.68081155 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122926167 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112846344 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146132215 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116224595 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134293421 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1048022 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423629607 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110088142 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085793382 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114310854 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095917485 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154711866 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109413917 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089544737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193942438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.236765391 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179230731 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110533205 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084385664 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107984033 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162117996 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239019717 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211599256 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173741102 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082701416 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107591079 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095131962 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127757436 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083118329 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179928688 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164802603 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16591926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111463594 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096593772 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117037735 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094924314 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.156345569 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106951756 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307836114 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290994673 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108192257 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094054498 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123193715 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261600315 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085604469 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220754287 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111928115 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209116061 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107649823 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753875119 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15991559 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109161673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093158627 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11493614 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090734772 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117666204 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162396603 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.401297996 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097387051 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111522749 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085395979 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22791507 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088833442 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085348096 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179024528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087584826 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115829555 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098858886 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119304393 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164967389 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.223254817 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119929624 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093532421 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112591754 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097155643 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110383321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.205781266 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218536863 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156185171 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209551842 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118839625 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158660496 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159517794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117666887 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.162632558 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091591526 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123451542 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118552008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189572205 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136558147 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108346864 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090510349 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115662128 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.118032768 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111779671 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092790239 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184738153 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456968679 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159997035 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082835086 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112280059 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094886123 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177781663 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092741473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259543731 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09475943 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.1605881 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116717416 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082961599 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115955206 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158135307 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119827422 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09388028 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119557213 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116334251 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.222460154 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.191662704 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120344836 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216342096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17498682 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115619917 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16739905 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116712159 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164136574 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094334053 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118518647 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086821956 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772921168 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120037113 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092805661 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112471637 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181560972 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085473283 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086314553 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108969036 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082444887 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793935268 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087966323 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106440649 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086254108 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116259322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093133705 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114134653 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089487796 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156395839 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2282136 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118634263 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09111124 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109051345 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15665193 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086881748 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110760011 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08600113 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108610987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093443877 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112235044 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087124863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164940305 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153510971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216916808 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.587523792 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086012726 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086186422 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224562294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108539092 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.258113265 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116455477 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220893135 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160061172 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083836582 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310327531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.161957023 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181453861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08850373 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187239617 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083286645 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0922184 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179053227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085578899 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114837071 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154213419 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09923832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119739546 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922809046 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085614033 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221823541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105542258 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.162869493 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087049525 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117867076 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289159818 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085752749 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12515993 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155839225 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088768545 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109849611 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.843893194 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109898784 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09544489 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117495148 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217684424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159625658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093631267 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115610108 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094904338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178429438 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.2058179 seconds)
  done (took 42.183599381 seconds)
done (took 56.974338433 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280072458 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20928184 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261908993 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163729514 seconds)
  done (took 1.876676476 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171357452 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123035024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140768968 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.079626978 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.147350012 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102882601 seconds)
  done (took 1.653124548 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359712521 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266074246 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211854033 seconds)
  done (took 1.723825164 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244325234 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263382914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320833543 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.386594697 seconds)
  done (took 2.203127746 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199059192 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097753403 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119680706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111578563 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164420836 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.199076843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137754377 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145416489 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10468896 seconds)
  done (took 2.214719139 seconds)
done (took 10.562753637 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.2798143 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119860756 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.172105242 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134224715 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131523627 seconds)
    (6/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.243320898 seconds)
    (7/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.23262729 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120779719 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.088389804 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.15198064 seconds)
    (11/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173958306 seconds)
    (12/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106072337 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.145538793 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.202795156 seconds)
    (15/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095297644 seconds)
    (16/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.209161515 seconds)
    (17/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.222368844 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096925702 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228423574 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.131415579 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.227502694 seconds)
    (22/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.18501503 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.081077762 seconds)
    (24/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.146999234 seconds)
    (25/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10214097 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093777333 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228998779 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.149386753 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.226886745 seconds)
    (30/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.212917974 seconds)
    (31/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199865851 seconds)
    (32/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.136410316 seconds)
    (33/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103719258 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.091873161 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.218189473 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130517853 seconds)
    (37/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095615704 seconds)
    (38/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.183787382 seconds)
    (39/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182051222 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107049368 seconds)
    (41/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.181069171 seconds)
    (42/286) benchmarking ("sort", Float32, true)...
    done (took 0.233916327 seconds)
    (43/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.186440412 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081038166 seconds)
    (45/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.186573698 seconds)
    (46/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.152191742 seconds)
    (47/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115013577 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108357082 seconds)
    (49/286) benchmarking ("sort", BigInt, true)...
    done (took 0.237835577 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105902428 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087304675 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112440479 seconds)
    (53/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095339897 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122782632 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089705929 seconds)
    (56/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093957449 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.116320071 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131851033 seconds)
    (59/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.090506669 seconds)
    (60/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.087377099 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.103376764 seconds)
    (62/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.134969053 seconds)
    (63/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117253431 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109322507 seconds)
    (65/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117271412 seconds)
    (66/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.135075374 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.120789658 seconds)
    (68/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177561401 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.161827535 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167468553 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174953963 seconds)
    (72/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.091580925 seconds)
    (73/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.12882587 seconds)
    (74/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.239900297 seconds)
    (75/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091190958 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122631868 seconds)
    (77/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.072592677 seconds)
    (78/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.115359441 seconds)
    (79/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.167215569 seconds)
    (80/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113828401 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081348729 seconds)
    (82/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097603415 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.122149574 seconds)
    (84/286) benchmarking ("sort", Int8, false)...
    done (took 0.190780848 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105995144 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205263007 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.081496198 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091398095 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.190742699 seconds)
    (90/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.106182286 seconds)
    (91/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.087275123 seconds)
    (92/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091125786 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104823846 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070101196 seconds)
    (95/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112164841 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160670292 seconds)
    (97/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.198253108 seconds)
    (98/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.093053193 seconds)
    (99/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10341356 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087332633 seconds)
    (101/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1071517 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.071244642 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.184736372 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06990793 seconds)
    (105/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133934563 seconds)
    (106/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08184029 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11294556 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183241331 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070599901 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087625464 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.134412912 seconds)
    (112/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094201748 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11441135 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.18392679 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091928142 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.113979405 seconds)
    (117/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.153307224 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111649376 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08820114 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.112633616 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.162593689 seconds)
    (122/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175195429 seconds)
    (123/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084678626 seconds)
    (124/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136790055 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09034489 seconds)
    (126/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178060928 seconds)
    (127/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17907073 seconds)
    (128/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.072127391 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104986493 seconds)
    (130/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088390328 seconds)
    (131/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.192925587 seconds)
    (132/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.09029533 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107290142 seconds)
    (134/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070881161 seconds)
    (135/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078750395 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115530042 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083171887 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098194786 seconds)
    (139/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124337937 seconds)
    (140/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105112138 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.110052722 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10809602 seconds)
    (143/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069415296 seconds)
    (144/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089664218 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113042947 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.081850685 seconds)
    (147/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176498116 seconds)
    (148/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070747328 seconds)
    (149/286) benchmarking ("sort", Float64, true)...
    done (took 0.235032925 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.104840362 seconds)
    (151/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138498234 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161573616 seconds)
    (153/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083050871 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09490065 seconds)
    (155/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.069302027 seconds)
    (156/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.085673918 seconds)
    (157/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113186052 seconds)
    (158/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069621419 seconds)
    (159/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.108975992 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108562497 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108402709 seconds)
    (162/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083163315 seconds)
    (163/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.084335091 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.18367838 seconds)
    (165/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08293128 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.108371494 seconds)
    (167/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.069607764 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.112557998 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072068723 seconds)
    (170/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078957695 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123827633 seconds)
    (172/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085249731 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117682056 seconds)
    (174/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.081033453 seconds)
    (175/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117667138 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.163217793 seconds)
    (177/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11384607 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095262489 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112561343 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.141711347 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105995955 seconds)
    (182/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081858397 seconds)
    (183/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109084163 seconds)
    (184/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093835769 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.23015692 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.080500877 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18746209 seconds)
    (188/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.105816978 seconds)
    (189/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069999083 seconds)
    (190/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070543648 seconds)
    (191/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.106474806 seconds)
    (192/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092568813 seconds)
    (193/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070766949 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114755066 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.089735389 seconds)
    (196/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10874609 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072323045 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082152109 seconds)
    (199/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11328722 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.111476063 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103689651 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 0.177406902 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081574371 seconds)
    (204/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080338137 seconds)
    (205/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113042871 seconds)
    (206/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083301948 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106835616 seconds)
    (208/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070128132 seconds)
    (209/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.13829588 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.107693385 seconds)
    (211/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.127891707 seconds)
    (212/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.094796192 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082686365 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.132048687 seconds)
    (215/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070348434 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.105304316 seconds)
    (217/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.14250859 seconds)
    (218/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09664079 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07160164 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081800801 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183844819 seconds)
    (222/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190501723 seconds)
    (223/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073984591 seconds)
    (224/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.201474422 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.108839264 seconds)
    (226/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.072307107 seconds)
    (227/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087864237 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.098085203 seconds)
    (229/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.106654863 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.106864294 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075901135 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071355532 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.107246548 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.08831277 seconds)
    (235/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.093773098 seconds)
    (236/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078887469 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081637995 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096223955 seconds)
    (239/286) benchmarking ("sort", Float64, false)...
    done (took 0.175456201 seconds)
    (240/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080077703 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.09767806 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114917496 seconds)
    (243/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085302913 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101339379 seconds)
    (245/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070192472 seconds)
    (246/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072361686 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107078522 seconds)
    (248/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071573152 seconds)
    (249/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239790575 seconds)
    (250/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224563089 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.177890588 seconds)
    (252/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082571976 seconds)
    (253/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133423844 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089823964 seconds)
    (255/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.096047114 seconds)
    (256/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088527869 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08119385 seconds)
    (258/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.103051092 seconds)
    (259/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070161076 seconds)
    (260/286) benchmarking ("sort", Int8, true)...
    done (took 0.224961315 seconds)
    (261/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084136642 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.105721778 seconds)
    (263/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085847663 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.116166717 seconds)
    (265/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089931282 seconds)
    (266/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.095827365 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073477689 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081438495 seconds)
    (269/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133533614 seconds)
    (270/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072887082 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.105310422 seconds)
    (272/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.084120878 seconds)
    (273/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069892002 seconds)
    (274/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107418486 seconds)
    (275/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072833468 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.082186681 seconds)
    (277/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.094273999 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080770789 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094885092 seconds)
    (280/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.083316787 seconds)
    (281/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.070149735 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098280198 seconds)
    (283/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081417766 seconds)
    (284/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084036768 seconds)
    (285/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09430499 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0701818 seconds)
  done (took 35.322289757 seconds)
done (took 36.220924492 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095456269 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147525296 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091547209 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135554441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095674967 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120611362 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091170551 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094649463 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11919126 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.097508218 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.117724943 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072536936 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117584821 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093312913 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.117038627 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11364787 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119624032 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089161119 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11067703 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081449182 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085146963 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.106760754 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083597014 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.096601892 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.09462016 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090635759 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.112784514 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093546186 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.107363671 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082003889 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.105451419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.089790832 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082136638 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120961421 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.089114333 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112106178 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093977505 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.116228385 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083586017 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082603364 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115567193 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082133444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.113479757 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089554269 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084385872 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104852732 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086281759 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120906551 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113541976 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112105089 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090402318 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117455697 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.091643244 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088719749 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.105750871 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08568417 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106090125 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113652097 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11078962 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087150158 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114331274 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091006437 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081629652 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110621831 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086517719 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117197043 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093378652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.105686032 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092996698 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.088201794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106433899 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086198041 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.10633376 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081847083 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091535549 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118168651 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081471786 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.108308038 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089288188 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.111340161 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.081928171 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084755215 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.108686653 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083772344 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085181926 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096705726 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080864465 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.112624313 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.0811944 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086664359 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112324162 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088743108 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108255697 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093432697 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106480424 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.082163063 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082517719 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107553443 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083877046 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.10610251 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.082483953 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08493479 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115960348 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083676906 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.10787368 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094863694 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082722126 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112840974 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081714844 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.105628933 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.098284172 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116675914 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.082543927 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087994898 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.106400191 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084568593 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.105378869 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.082574136 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082016326 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107864198 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084181154 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.08239324 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109258093 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083403458 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120612459 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081963406 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.106445374 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085609862 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081913313 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.112696833 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082110875 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.10659719 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.084497624 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080702476 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109374339 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082290086 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10849668 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085283762 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086262687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10863123 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.086563971 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.111459342 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.085021613 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081957197 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106109414 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076640584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112211792 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085111439 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08398145 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107598876 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083549937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.10689304 seconds)
done (took 15.771921393 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082533964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180433552 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144354133 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.116295482 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12802602 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.082997805 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117557506 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113667509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.109466207 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13852213 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10639048 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127727714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.12136937 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.106145465 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082487493 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086923802 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108824703 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098335779 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144968442 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12870357 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118620298 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.106772943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.112908364 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130777538 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091852922 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124640074 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083361371 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11066286 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085941181 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132591472 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103162913 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11098534 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083449422 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129650438 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099303791 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115503584 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082112177 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089663079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107072163 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082517928 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131311609 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128875299 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087948637 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088749784 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11110669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085282154 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108658818 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091666223 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1190872 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086487423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.122211305 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.114098743 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.110756686 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.09251096 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107077391 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093728425 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.116740946 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.085242678 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126481477 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.085292718 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082813681 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.111361657 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097282898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.132036776 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.087172166 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116691666 seconds)
  done (took 8.09055069 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099615903 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137017319 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100700335 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126238004 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082141614 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108265222 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083551778 seconds)
  done (took 1.699349323 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083471097 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109193573 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134730565 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109212272 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130517525 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.135124511 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088571622 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083585218 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128678265 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.085561301 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134763014 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124729598 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.10994742 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091748221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136663527 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083251993 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135892263 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08396411 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112019537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110102669 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112314425 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101900753 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.112077973 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083787421 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101961522 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.109607266 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157364459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088998335 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081489861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112470189 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082380403 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147903203 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101342941 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116913312 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083739363 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12889954 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102483684 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107240244 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099917819 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114402335 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101121422 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084322697 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109985611 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081653616 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.113504465 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097439642 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113531367 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08528481 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086394905 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133580794 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084631601 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126877004 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083754694 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113151447 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086148075 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087574804 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118455998 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085035159 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13281367 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081876573 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130727106 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103516592 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127283334 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103730519 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11177498 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101704587 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126462008 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.087234378 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086063588 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113696115 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104013205 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.107159403 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087128433 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123086419 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085717127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11010803 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135878691 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085342454 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120690913 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084556471 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110265201 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084956793 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136343691 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087812899 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083735815 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114142592 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087191785 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107835068 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083277749 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.08774433 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109503263 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086070573 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114429374 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084677371 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115988737 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105050586 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084944667 seconds)
  done (took 11.153712256 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085311611 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085280422 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11285954 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085247699 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110678085 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086443536 seconds)
  done (took 1.538080998 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113738659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111307039 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098024203 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114389679 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.126406171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134715071 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109373378 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120358108 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101865922 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.121912666 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108883276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136361665 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.140355896 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.089954155 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134327061 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.088862727 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135379411 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091140331 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095700614 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115767007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.102069113 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115291185 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090610103 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.129351323 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094160418 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.114393073 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091121201 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.122456309 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095687548 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.119931548 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.090535005 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119542243 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089903331 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119383904 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110854082 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116369734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088740433 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121759898 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091823818 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120629963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110623173 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115992847 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.095568732 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122052798 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093228527 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116213009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096556254 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115899645 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109091832 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122870487 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095887544 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114470904 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094166226 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122221661 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090305247 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119815212 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096035999 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135521008 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09109628 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116311895 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.086644901 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120785995 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09468912 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121043496 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094553052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121829862 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090543885 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115574357 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090575875 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115234185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09636428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.112540648 seconds)
  done (took 8.841032251 seconds)
done (took 32.268462734 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688732656 seconds)
  done (took 1.653992379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.867250765 seconds)
  done (took 1.834312719 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.072664156 seconds)
  done (took 18.06784761 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.46270514 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.553237444 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.951138783 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160887512 seconds)
  done (took 3.095570547 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945297497 seconds)
  done (took 1.931924037 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279818164 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23101841 seconds)
  done (took 1.483529902 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.820097104 seconds)
  done (took 1.804206255 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.437310735 seconds)
  done (took 2.418138149 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321856957 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156438946 seconds)
  done (took 1.467540686 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557707836 seconds)
  done (took 1.545744898 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.3610806 seconds)
  done (took 11.347792973 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240479332 seconds)
  done (took 1.234949641 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.286781898 seconds)
  done (took 1.271250819 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.576795859 seconds)
  done (took 4.562750437 seconds)
done (took 54.69008433 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094680997 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098246066 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123667034 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095561436 seconds)
  done (took 1.392818518 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100495697 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.091845669 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.125913334 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090565924 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126556023 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090655268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120974013 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.16550015 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091860275 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09193782 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118445794 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090205003 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121276991 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093423362 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115416116 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093915383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125260379 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092054035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122337898 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.091890444 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114806467 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094432083 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121108716 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090384914 seconds)
  done (took 3.576179364 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096736077 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090448875 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117739437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088796005 seconds)
  done (took 1.390214855 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096103824 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102215859 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.128148722 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.095542806 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128132162 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100774684 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114303211 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088039679 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142397629 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100015439 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112753906 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.11032208 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128249086 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095974332 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123897751 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08836483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.087305556 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128727188 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09524494 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122274403 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088464558 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12135463 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086434166 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129047729 seconds)
  done (took 3.610951335 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.165833626 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.123754209 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.10899775 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117828444 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.130878258 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137223028 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083138901 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137868478 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083624847 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125755104 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088323009 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162127168 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096829329 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109790711 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083244548 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082814808 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122944993 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.097010382 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.113359512 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097744006 seconds)
  done (took 3.264654705 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093921379 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088341325 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109662931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.0869393 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120119532 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091602503 seconds)
  done (took 1.59269935 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092752918 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085450743 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115551361 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086816812 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116127184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084663946 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083894884 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112226225 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086480035 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110503285 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087755484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083970888 seconds)
  done (took 2.147194282 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502591215 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114947439 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.087728288 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109722012 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095949962 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11006004 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102044588 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086284143 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141021567 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083780424 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112087309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087833128 seconds)
  done (took 2.638358752 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20592008 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095623919 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259359706 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347291007 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154568826 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162154613 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272059263 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160247138 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181452714 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135079968 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191650396 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128439753 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151695841 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17494041 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136688291 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.126155281 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170921682 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222288436 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120040031 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22676234 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133125993 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163131645 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176472739 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150087502 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136053047 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154730111 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092146642 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126309964 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170126993 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166860057 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170811705 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120463909 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137259346 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194678321 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230657092 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175995466 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275457084 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105700025 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17607576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164211152 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221412599 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137975695 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190560013 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152836024 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125699925 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176787294 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125863282 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20165684 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10280255 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138208472 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178126104 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172333201 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176873702 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133589911 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296526364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147139832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11684064 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177474821 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180725459 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184573999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163657691 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115659585 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180364782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180070343 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17441582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141201744 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161962838 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095224688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170977135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189535746 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171889738 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159404129 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207936234 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105361284 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158265359 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164532459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149818986 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175111797 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156755822 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.09114713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146384124 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133565245 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099531669 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192066026 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093534551 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198866982 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132171734 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.170119668 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199420622 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153960271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158148233 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159790065 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160100103 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117024291 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.114465929 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116276371 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149716227 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152263748 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102106043 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152413445 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139755195 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098501685 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148099431 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119905903 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129014567 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123886592 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160605019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161841325 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094942597 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162275241 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146655019 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119040464 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16526204 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181429619 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129875383 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128075909 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189322419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128582436 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130770272 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170874807 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18265506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152518865 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107625005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16327505 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188107326 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139250183 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185807936 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137291632 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103214763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137352914 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156830571 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152611741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154663005 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099871834 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151908772 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188097934 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092642981 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134561883 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171623077 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124477442 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099170462 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139497792 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105200307 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133908852 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138289421 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106065593 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153132969 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157545774 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150176386 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122851545 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138869796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186018728 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130324184 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147694767 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117602261 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117485899 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174874221 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181322992 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098612588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220206778 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163623531 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192519363 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160179744 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101279406 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17399549 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126577094 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088982738 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162149328 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156750469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159099098 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17830655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189568487 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163720306 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150276245 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145338602 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16165901 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133253325 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152484575 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13402613 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157312172 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154690552 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.0926039 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093051562 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125122751 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140231137 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10038642 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130131594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178047668 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160814786 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183727062 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156587772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138421735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177511224 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.096185742 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162240151 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167661774 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13721394 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179945595 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176837551 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164003978 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113505366 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169810335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117411073 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093578286 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131149419 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161497449 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102863137 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131850211 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112724189 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177292959 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16809943 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147767658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224301561 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164076345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186770475 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.091183027 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164657375 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164248846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127081022 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172500117 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106821463 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.145106938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174292279 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138915212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184790551 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157782415 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163838165 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190983511 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147133957 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09955158 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146555889 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162596809 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1373985 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135885324 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143015221 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133509512 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119985643 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.124582969 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095484793 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196358806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113712918 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172393612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143979297 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166037602 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123570387 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113418455 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158378765 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143435281 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083994017 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161340307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179507014 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14051418 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154648698 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169497613 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099220938 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.302874834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183264998 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178318043 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132732212 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139493475 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157696148 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128389606 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157146114 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175505864 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144879204 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175753535 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154484971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.104553367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132733789 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115849628 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147260018 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137948091 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.12779788 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122607491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134727393 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174087367 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13913281 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128872663 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16049209 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147252729 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.112547001 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141259355 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1970782 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155380578 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174285723 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146898899 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161028608 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194590932 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094519134 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127347921 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096214111 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175287297 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130489378 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155153163 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179668979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192860459 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15679201 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163518701 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106513965 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.11693551 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155129933 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117473884 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220723645 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112552178 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132796208 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182749241 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140439133 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099971892 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160366294 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281984089 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142002113 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170052619 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082828601 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273949729 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121742221 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1015403 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156971429 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166963452 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134858595 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.143823984 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160443516 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141445676 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128544122 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135076644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184557182 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200444158 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16488977 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167719741 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129825397 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155117105 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159875704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172497019 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112789657 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.135877451 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15850473 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177444317 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182407057 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102607961 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159718647 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158759883 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155871083 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165515834 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103668846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222626698 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10079414 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161439461 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13689664 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092761977 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155291192 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181375499 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132531709 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167734723 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154228887 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102472701 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123539988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120467833 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155634343 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138556525 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094685778 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167001683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.121050323 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160762403 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176382975 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100381765 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151766922 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11275542 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134544658 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141267281 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14188096 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105407688 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16205405 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17813545 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098806006 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172349031 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170628278 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159188559 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156151157 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141704146 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637024036 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126968473 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178415035 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143578581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179240614 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117096628 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162867876 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15608477 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147126501 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163057024 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117589265 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227009195 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16108553 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155267925 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099600503 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1420831 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140426339 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100222404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148339986 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159332493 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138999401 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105681856 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15450888 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142237002 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.102516594 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136188893 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180338993 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144174934 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170464054 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14686635 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134897327 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163095014 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166890828 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128360312 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127955875 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167433284 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139617161 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147902632 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100034568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132171297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177816079 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092304204 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157694347 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158117434 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156426209 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161119998 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102542933 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15812404 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14013139 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157553957 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100228679 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149373453 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154781769 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099750654 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126296376 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151976812 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123164379 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146372667 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124077106 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135428544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179834921 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090969556 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131151212 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28247193 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15477736 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188390407 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139616262 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104429558 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141621469 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114809703 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150613816 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158598876 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126803117 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101405454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128226697 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136170931 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138914313 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154269153 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183214449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125442984 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224505039 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.105879481 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277107454 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136343406 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124468051 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121139106 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.098607113 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140220795 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13139067 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112818766 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18567637 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177312644 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144503583 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102827681 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124370172 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.093494579 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130655334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158881678 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150987902 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126067073 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141648867 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083508965 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141814056 seconds)
  done (took 73.337819592 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154478886 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.225659952 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163341887 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220219029 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178550161 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229389697 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253560075 seconds)
  done (took 2.78952364 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.089499538 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141039588 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.124334512 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13273775 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113422958 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088687838 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.324282975 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129741458 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08610784 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.14381515 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129429781 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115146071 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489556039 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116082696 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11302054 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080433467 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113240503 seconds)
  done (took 3.620716824 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.302418916 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488751343 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.087491066 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193312378 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178437407 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091239435 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.726347338 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090766016 seconds)
  done (took 12.248547097 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114697669 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.107703743 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.157813565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15479229 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.113098417 seconds)
  done (took 1.751666219 seconds)
done (took 114.342163844 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093406706 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.096191137 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121742792 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097426253 seconds)
  done (took 1.490783115 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100133415 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073032349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104205604 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077290854 seconds)
  done (took 1.45137251 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189448508 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165978165 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400681227 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07480553 seconds)
  done (took 1.596169219 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109464761 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128330374 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100818639 seconds)
  done (took 1.438322526 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.101509266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097326601 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126882136 seconds)
  done (took 1.422850834 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100681279 seconds)
  done (took 1.191891088 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106173614 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135516222 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10842256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134139414 seconds)
  done (took 1.580848304 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093704535 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094842296 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136354003 seconds)
  done (took 1.418045035 seconds)
done (took 13.041962634 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10225693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426014577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386984361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133985363 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695100559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405254527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.997734235 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143583955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164760636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087954972 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133245057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669548338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017725221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345463299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005788354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345751191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669055315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116455507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087003213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116935411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982721889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116175278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088247103 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087054051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699062324 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392452455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117598569 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.342928103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115958724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096187046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374145657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117086989 seconds)
  done (took 16.667797611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094102107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175857534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100235952 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119576121 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095720277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089776584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120297266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089289861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179282096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11679519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105639033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116237715 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09248071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088300435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137680346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088167209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118255288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08753944 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11594946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088143005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135177167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088653299 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088966785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117046604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088150871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129586803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089333716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116567916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088454734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09578945 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119738597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088868932 seconds)
  done (took 4.564820117 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140284642 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184522287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099773656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151586545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169821333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090555158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195434113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143477454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153536699 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117165097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105119183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117711113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122861771 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118427979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107664687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117327948 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089271061 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117767261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088732195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116851223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107352017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115682911 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089253095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0883425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117838812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102996919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117789851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089300163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117396251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09711257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091289661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117334441 seconds)
  done (took 4.904529529 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092113104 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093028218 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133988614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104209456 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119086791 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091538822 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.121167734 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090842363 seconds)
  done (took 1.953080508 seconds)
done (took 29.188413687 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107055508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094139128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132088707 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101970982 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128222295 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101285663 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115823176 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100512565 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.101544125 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126517086 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.105156936 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116672429 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08997643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.1161088 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102296628 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092720961 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131549544 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098068583 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132382331 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102291455 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119749533 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099999932 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127862277 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.103003417 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.131245922 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.103271771 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104216658 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124798171 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089495327 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11965932 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101153394 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138853191 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091505861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.133002646 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093782275 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092245555 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119975098 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092023618 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131252715 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100067045 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124914009 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100696254 seconds)
  done (took 5.734992472 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.114344165 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.146554492 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109669804 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112590252 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090469848 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083759191 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143322348 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081105616 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113727816 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11323079 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106410212 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079649991 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081234206 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.105272908 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079903553 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078265188 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111905679 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078539334 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107709721 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079581839 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0818914 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105037849 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082575156 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080865574 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107093534 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083954013 seconds)
  done (took 3.673376774 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095787185 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102824289 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139260755 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.171374698 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122289149 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126314658 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097249391 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136483236 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10574556 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.088246415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120268031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116554403 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136843509 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095475264 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120847405 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103062459 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1321941 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09071124 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093101153 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138409559 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104727589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128381152 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100586478 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128698631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088461761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091930978 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123038593 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.098660933 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126104896 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096297614 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124031964 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091707156 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118600832 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.101147971 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094354947 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119823522 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107726168 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127319605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0975681 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118733387 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095568176 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090723749 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14011085 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157723208 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088418919 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095248976 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120855053 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098601835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119401713 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106123753 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126582272 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088137499 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091074243 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119041169 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089945588 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13467397 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090279799 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118930256 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.100963969 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093474699 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.130587826 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092860518 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133929939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089490119 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124070434 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090016671 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088460372 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117525999 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110401772 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124272162 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.129233125 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.120144986 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088882843 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126144069 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094476922 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095043088 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120090504 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103223445 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128765153 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092419429 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129949228 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090851897 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090557882 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136837199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090911902 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119886214 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089880276 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124677221 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.091365275 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089591292 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132251132 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087895546 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121965766 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102979 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118390229 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090045502 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094823165 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123179475 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088135194 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13280819 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094875266 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119710893 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.100225985 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119119446 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091846707 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09794939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.122958368 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088898564 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122578099 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09484364 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118939316 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093117097 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09103989 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121064819 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.098006602 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12603589 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092167916 seconds)
  done (took 13.94586573 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227209076 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213501555 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184679716 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261458506 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131424538 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116012753 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211165311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155899557 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090516888 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157369674 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167025725 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188734937 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168078022 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178735864 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16835087 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088353062 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138867526 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133652438 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212779568 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289913147 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108524958 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.129421572 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158707919 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126637326 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132955841 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098328133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136318486 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130820308 seconds)
  done (took 5.631061732 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10542496 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151562593 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094496853 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.141281524 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115777539 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119614507 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093125017 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120360548 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102662684 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133614536 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.08901945 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124729941 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096547131 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.098229305 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120363987 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097468902 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.12928105 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090010194 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122172116 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093899311 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.099797841 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137504242 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12269331 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089040901 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097825519 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119014735 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090153366 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14030607 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119031843 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11206218 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086829893 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128027077 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102394696 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120792959 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088890162 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.091031146 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121228829 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090571387 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.121331989 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087150604 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087447821 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110494514 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087613426 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134233963 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096227548 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114409209 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095397619 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125170387 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090011089 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086689237 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122201565 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092315016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122714826 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09730537 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090833277 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120004862 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092412653 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119332739 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095122288 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091576213 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117312422 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087027453 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124213264 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092830111 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129111854 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093606054 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117947744 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091948104 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093513881 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126693294 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091206582 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125702624 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086849675 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090824681 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122769609 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094853454 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.12243043 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.087882148 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089121498 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12092832 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078568026 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119361367 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077470508 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091992809 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.118047205 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087562167 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121356642 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095575581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135438095 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.091323216 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.127606125 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.090522064 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088861391 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122887762 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086492804 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122777525 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105914095 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140911275 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088956728 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.11714333 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.103627775 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091250092 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119219512 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079458324 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128058018 seconds)
  done (took 12.342068112 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12790125 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150182171 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091098959 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137984483 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122192729 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155367074 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096008883 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128235046 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090135884 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139146399 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089800494 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097891052 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121628103 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103525301 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155744336 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.09997678 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121849111 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1037493 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124255727 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136938916 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138008985 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108193427 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136860287 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089741206 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126430824 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105448019 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159367919 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104174385 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133482429 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107981526 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133913419 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126781719 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140390716 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093582761 seconds)
  done (took 5.235578847 seconds)
done (took 47.670834127 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213897181 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418977128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194803067 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.12481165 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.277148924 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.226586428 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206189203 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19373383 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.334716684 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195294047 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.435433803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.792330366 seconds)
done (took 58.739450116 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.229860157 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352800063 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486402225 seconds)
  done (took 3.979699245 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.735461001 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.153190896 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456322647 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195815957 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193961722 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491113717 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.981045343 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.6495372 seconds)
  done (took 28.244433843 seconds)
done (took 42.316568297 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.203869923 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.219260148 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.227102749 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18046163 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308135751 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223085043 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.458746087 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.288152142 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212015261 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189280019 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.216553086 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.195110559 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208587095 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.42330794 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196963321 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196502225 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.23285504 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.932708555 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609485231 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.204231938 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226846274 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.215355434 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.218253409 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205527149 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.200962128 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199141579 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211805068 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219174726 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.847958556 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195093272 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.225925234 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.570391903 seconds)
  done (took 190.587550439 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.195460517 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.31315785 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.413453629 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.252090784 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.736512405 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.393116582 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.34408267 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.885987895 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.214206513 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206839018 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.516385441 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196746081 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.570290482 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18399504 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231376618 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.279735271 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.37728225 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.585084006 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235151938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.345026658 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.222681098 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.383086927 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.319736063 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.500208314 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237995184 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.270025609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.224481044 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.238580231 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386403376 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.317410819 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.226417151 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.208342044 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.843136734 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050801973 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206698642 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226116571 seconds)
  done (took 150.462174214 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197248211 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196215969 seconds)
    (3/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197424081 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197579403 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230942638 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197128656 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.806250909 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808063641 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.767628647 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.582603558 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.705354056 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556284994 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198574822 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293314073 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214128908 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198959539 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213848115 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226005103 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199208464 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200379226 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777953489 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21175277 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.491583244 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.378745853 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.215664686 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232039461 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.597044886 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198699753 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232093313 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535864155 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250105998 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198438703 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.621932344 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.727664357 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316125457 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20105682 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232658063 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199578662 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481676496 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199447969 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200661009 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202990683 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918564045 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198660807 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.808588262 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202105276 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187676684 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200548019 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200085541 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.5499406 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.955364187 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.202397305 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200047951 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201796864 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200291222 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200534126 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234349159 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.545732071 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.304589118 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201341608 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20367227 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233111137 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201235356 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.340331938 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201423598 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.531335885 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.256961543 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.419692608 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784213893 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200624509 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300818879 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324046885 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201162177 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201040109 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200802944 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201532283 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201022118 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313471302 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200986726 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.643904483 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20193873 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382024066 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.220091995 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202501956 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.718616219 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303900409 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203254881 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613421839 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202554531 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203296878 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999884041 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300654699 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202894154 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.202523077 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202285082 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.643783735 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810870906 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.531975945 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205723915 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.668975939 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.205388896 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.655553302 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.783611829 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861784087 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20384602 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316894628 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383259056 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22225537 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203565479 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.722253393 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205523799 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262581848 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204197356 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.601808092 seconds)
  done (took 367.55189344 seconds)
done (took 709.728519039 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.82864235 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.814143332 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.931974619 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.810218818 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.766076085 seconds)
  done (took 10.28412674 seconds)
done (took 11.418776672 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398978513 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398312765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267522235 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400105945 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237324199 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419110721 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378908689 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.224480862 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310678175 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.288822259 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310352609 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258579556 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241042709 seconds)
  done (took 18.268038927 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555119208 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546166397 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269564645 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528046382 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248279423 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546911662 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410894798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430353752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421633501 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220599391 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218144639 seconds)
  done (took 16.531387129 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531534007 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53644791 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273232935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550866898 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24850997 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549896186 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416182493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438110239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424898705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221794115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219722375 seconds)
  done (took 16.546627407 seconds)
done (took 52.480209272 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.232835349 seconds)
  done (took 2.368318455 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251180895 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423783688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233566647 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223497171 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218750405 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.218677478 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226744336 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217355005 seconds)
  done (took 11.150750232 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212538042 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214910133 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.213149004 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.212330827 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213072064 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216360926 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21266283 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215545171 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218350636 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213859645 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.212332445 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215435157 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.215565764 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216395935 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215313456 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213194301 seconds)
  done (took 20.569200515 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214955292 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214612699 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212371412 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.214480062 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.213528595 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.213133655 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214686451 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213021296 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214475135 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21291037 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.214326629 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212741322 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.214374562 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212803369 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213974269 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214721261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.213946052 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213673919 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21841484 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214033807 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.214974143 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214233955 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21459718 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.214796777 seconds)
  done (took 30.279010275 seconds)
done (took 65.502808424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.860910081 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.911261802 seconds)
  done (took 6.910488504 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277431938 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.277337191 seconds)
  done (took 3.694889992 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218496687 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217167028 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217355294 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217264537 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.217251759 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2170882 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218610209 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217639069 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217880164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218344061 seconds)
  done (took 13.316019284 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218441433 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217880256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215903253 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217159314 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218586941 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214718615 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21850879 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217632198 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218711965 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215756557 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218758129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216077575 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218519627 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216493212 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.219729138 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215879591 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216098456 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21639081 seconds)
  done (took 23.049868446 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233335175 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239911615 seconds)
  done (took 3.613876246 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.346357217 seconds)
    (2/7) benchmarking "second"...
    done (took 1.258297923 seconds)
    (3/7) benchmarking "month"...
    done (took 1.346287934 seconds)
    (4/7) benchmarking "year"...
    done (took 1.314035486 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258365608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.705485529 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259532847 seconds)
  done (took 10.629747296 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220614704 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404009134 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.509876073 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792431153 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220837006 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224629759 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.084057198 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225365186 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226839232 seconds)
  done (took 14.049330779 seconds)
done (took 76.403970657 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.233359426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.212106778 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.627852984 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.235561806 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.229997587 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512282248 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269258984 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337009096 seconds)
done (took 37.800761785 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215184366 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210269342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.992835475 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.223901469 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.329012017 seconds)
  done (took 18.897219852 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.301009115 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552672367 seconds)
  done (took 4.995340089 seconds)
done (took 31.250803928 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222155649 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221678833 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219376638 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221564598 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.219913459 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218712345 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219064999 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222268944 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217577477 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221543801 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221865169 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.221324978 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.221878596 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222436759 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219165675 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21917342 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22230638 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220896514 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219628669 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219654035 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22266405 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222231106 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21991126 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219752794 seconds)
  done (took 30.439682959 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224381101 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221174837 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222396638 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222183081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219851867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223042007 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222984314 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219962732 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222329606 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221902223 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220492851 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.219828859 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222869031 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220818225 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221739745 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.222075044 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223083837 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219957398 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224124537 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220606525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223041984 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220835386 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221152637 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222931241 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220477863 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22115174 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.225031692 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222133284 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224589776 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.22137802 seconds)
  done (took 37.803274044 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228958532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232223317 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223636194 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224792619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224332867 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223524463 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224802289 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22414838 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224752892 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224627322 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225433978 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224978704 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225566679 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225163156 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225010728 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.224534027 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226016938 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224947855 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.232540281 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225035676 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225629566 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224255051 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.225484503 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225020233 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.224930889 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.225278644 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225469337 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225729649 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226583502 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225877806 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225699093 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227970945 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225557755 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.22679919 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225964239 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22612319 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231476923 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234941992 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226130109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226949706 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225959624 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227094919 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225979619 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225817905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227169514 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226150547 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226942688 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226827411 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.226073063 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227154667 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227802154 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227936532 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228147509 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22703294 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228072048 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227059414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226893444 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227076985 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227687947 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226300328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226615682 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226275494 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227940153 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227945238 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228090936 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227189496 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227831496 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228085084 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228061459 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228327097 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228439454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227272221 seconds)
  done (took 89.466707374 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228170496 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225212509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225925172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225427965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226208723 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228054226 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226488477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228743541 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225789311 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227828611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228091682 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226953561 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226000494 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229689057 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228912464 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226806222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229015987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2271123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229616945 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230353446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230052721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227969714 seconds)
  done (took 28.15902071 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229947867 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232350526 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226855451 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231386369 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229371338 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232136377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230367868 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232345797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230720529 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227633701 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227415375 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230517134 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230484912 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228200094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228245168 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230198907 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230373552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230418844 seconds)
  done (took 23.290398626 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228082283 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228785225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.230885947 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228046588 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229145277 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231115675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22934097 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231908282 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231297219 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229445987 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231199099 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232007839 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232171052 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229683769 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232083488 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229576586 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231807978 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229078361 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232180127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230583205 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229530647 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232106858 seconds)
  done (took 28.222830941 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232228986 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23246408 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23030056 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230468289 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230738022 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232355481 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232977946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230137675 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233304021 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233822428 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230638815 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232565338 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232139549 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231786686 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.2298158 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230316707 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233123259 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231602733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232585835 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230914687 seconds)
  done (took 25.787298695 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236461197 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237677392 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237421548 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236698878 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236565582 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.237614317 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238257454 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237942719 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237238565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.237679438 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23810539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237449706 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238668992 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238262809 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238046889 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238155931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238002084 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23737106 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237568298 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238475526 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238186373 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23800986 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237406061 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237609539 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238150572 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238340332 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238586226 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.238414602 seconds)
  done (took 35.813825659 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236014369 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235526824 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232880548 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233720052 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233952443 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233945941 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234268847 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.2336103 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235382264 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233006003 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.23695668 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23626927 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23636223 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235668144 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236987609 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237865048 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236032393 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234714865 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2346716 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236417086 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237321294 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238768694 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.236859573 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235353345 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234989399 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237556079 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235625895 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.23562153 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237593168 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236094073 seconds)
  done (took 38.227268662 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282911938 seconds)
    (2/2) benchmarking "in"...
    done (took 1.281026012 seconds)
  done (took 3.722991509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235014766 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237268924 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237520875 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235982876 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23645817 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238243254 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238448618 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235277462 seconds)
  done (took 11.051062827 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236502093 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.2390911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.238294956 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239104644 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.240841121 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.237141152 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24582174 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258682849 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237693557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.23944871 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.2470763 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246314663 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241145626 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238357653 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238365657 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240337376 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237653811 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.241559139 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.242527023 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240012992 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243259667 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241147763 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240844942 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238076643 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.240579716 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25081547 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.243789671 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.240558749 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238835843 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242999112 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239737526 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236252794 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.242882396 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.242820778 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240104455 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.243192644 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248444404 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262566349 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.246330567 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243557599 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242483676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238021858 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241116085 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241793953 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242400677 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.243930096 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240847263 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238954665 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239729542 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245326348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248187207 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241023297 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.239559072 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243988907 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.243093051 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248395826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266183579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245341089 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25144057 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253272161 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.256549088 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.251015954 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244227037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245673455 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252839016 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267481717 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249681284 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259506541 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24101256 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242118117 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249131025 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256337894 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269261244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246078066 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245459955 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243939999 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243595698 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243651056 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251071766 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265189224 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.245782662 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246153106 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254456227 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268457708 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.243427309 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246402686 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246966993 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247524127 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244968353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256195309 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267206793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244542024 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243437399 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.244366118 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244855617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24647389 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242629101 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243745378 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241896038 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.24507983 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248503505 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.24868303 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253947327 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247495413 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247215779 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252462492 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246701587 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24377976 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.249686661 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.245694848 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248263018 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246983175 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.251667692 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243276549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249357973 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2541389 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248782713 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246367781 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248357113 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.246706354 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255754449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.273544054 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.246812714 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.246648913 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.251224575 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262435017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248493683 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.24828511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.247206086 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244013729 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245412087 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247996751 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248043433 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.246929956 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248808583 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247104253 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244350412 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247049964 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250109523 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247567877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248132823 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.247265346 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.247571459 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249404612 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250567398 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248238556 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254524712 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248206124 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247389349 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247617682 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24527783 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248038246 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247742646 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251461012 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247084173 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250859158 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247562356 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250884609 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250016695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247881312 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248681206 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248481928 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253136181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251646599 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251391529 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247863962 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245823941 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249533549 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248567218 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248535081 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250632009 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.248070907 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252856662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.260456962 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249870259 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252012089 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25133739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25363763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252831496 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252228393 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253986779 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.257485816 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252715213 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.257181799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.253043144 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252016295 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250885545 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.249415282 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249423954 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252547686 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254265703 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.259451369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26317136 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276473436 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.252492989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254370936 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251393023 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258403821 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253633735 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254566706 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251888479 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25425552 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250889049 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253567794 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.252556547 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253747622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25078386 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253070488 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25321324 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254693022 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251849774 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25172855 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253385329 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.250163176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253059268 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254664244 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252405994 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24931251 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251065152 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252062173 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.252904089 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255225776 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258564927 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250653759 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252886551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254050941 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.252465357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251466664 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.253977764 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25316212 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251475542 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260292862 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272015781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25258667 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259605945 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273160713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252240479 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255330311 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253479156 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251288537 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25610218 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.262638966 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255110186 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.256411175 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257246619 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253226969 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253844943 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260229631 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.251629221 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253340196 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25495515 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254212711 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252263947 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254172566 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253824405 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253861319 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254918333 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254212079 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254863224 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254749682 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.257554944 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257580079 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2575576 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257953514 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.266183975 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.259409437 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254757129 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.256327634 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255881063 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.260227162 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254448454 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259183564 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255807141 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268393167 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285241364 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261188276 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255630547 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25734427 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261144916 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257764202 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259418557 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255246502 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255698199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256097917 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255098389 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25447077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256643527 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258613226 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257516918 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258476578 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262025765 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257773443 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256097114 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.259854004 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260455969 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257777992 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255644767 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257826875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258691585 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258455956 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256387433 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256617267 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265342927 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276392289 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257547075 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256614129 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25733984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256936905 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257077536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260868505 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262565429 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.2697274 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260754312 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267007416 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.2594741 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267182471 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260929165 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262673833 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270087557 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256314985 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257179959 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257740786 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.262177726 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266990164 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.282098141 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260373392 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.265888507 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261792901 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.262434736 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259170712 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262108927 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259709566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262303733 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269082074 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283859217 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.2633464 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260558384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257055743 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261608033 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260385019 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258378052 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261514161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262631581 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260033534 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259202185 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258120693 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260553229 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261692706 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261076991 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.258576413 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.260652818 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266933966 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283507795 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268555678 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261653117 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267459631 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263858731 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268976792 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284588739 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261716436 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264784905 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262213748 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263042575 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259827093 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261644112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264025681 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26351053 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266817149 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263776953 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263795099 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261675398 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265000366 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261046363 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274149217 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.291362016 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264093675 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267615038 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261242823 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263636009 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270700661 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266002982 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.26152354 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.266460525 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275302679 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272324494 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262287293 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265562024 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262177695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267165075 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26357362 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26375107 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265517845 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264152277 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264163918 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.266202403 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266886888 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.263564416 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263254863 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264499366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265032058 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274210389 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266548195 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264333023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26752184 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26614546 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.264046555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264220002 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266581464 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264516129 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264549331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265925253 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272539106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272297186 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265689492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262745726 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267488685 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.263301804 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.265477041 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267558498 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26732985 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26740828 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264751765 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268426956 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265764023 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263594414 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266181376 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264999331 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2659978 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269277878 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273498146 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264958348 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.262744507 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266255432 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266175159 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264599403 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265361189 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.273005139 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270178904 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278215304 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27497883 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273572274 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266861484 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27041021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.275682775 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266335339 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266818577 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269766696 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266555261 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268020819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271738004 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269995895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273838556 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267254741 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266132693 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275306538 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.289457794 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27002009 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268887838 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271453884 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.26766746 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264568783 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26789618 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.267363636 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274664378 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288189099 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271052759 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267878968 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268786473 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27050052 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275800725 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26830161 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268447267 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265526284 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26739041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270744398 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268056047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.266332321 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.266816422 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267899088 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.272031379 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.275325444 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266995113 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269949096 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.26826124 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268129611 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27243984 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269954605 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267193045 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266859457 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267872689 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272019282 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26909384 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270388467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26791886 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270445821 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271886735 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272473627 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272747538 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.280654267 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.278064402 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268586236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268603718 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270212947 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271589781 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272959199 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273451831 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269490225 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.270488021 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271407766 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273900365 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271022732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274171619 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286698017 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29444782 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270516674 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269949281 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273880701 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27182824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.26823943 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271982573 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272465636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274908881 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.283218683 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274089209 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278164107 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29163257 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274399169 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277675923 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.276464045 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.279934816 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273551088 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275673445 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275940078 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277487433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.289722988 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272703362 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283279461 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304093566 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291227473 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272265687 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.275422382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272169192 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275251409 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273795887 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275324042 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.273078179 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27323423 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275380444 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273878428 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278306803 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274555896 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275003187 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273344603 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.272746074 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.273690492 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271424969 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.275921338 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.273790121 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.276887307 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277324559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277423104 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27333654 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28674165 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301278517 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.275275337 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.277321098 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272228001 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276645879 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.278924666 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287068301 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283581253 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278156921 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.277185917 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274429883 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278131699 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.273962591 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274849676 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274687232 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.275140597 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.271582182 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.288358245 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287226883 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279369499 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275081652 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278291725 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276295919 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2752599 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27871944 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279026916 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.276701266 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278220332 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2828379 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276472773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275345327 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279457962 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285099748 seconds)
  done (took 752.383633083 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274875366 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27373122 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273850523 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27381124 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274218218 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274304173 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274280808 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274323281 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274966448 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274658675 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274727858 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27518281 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27380577 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274597196 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275222397 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274975833 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275235894 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275125739 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274675164 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275211994 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275076767 seconds)
  done (took 27.961775164 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278796431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27549389 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276149094 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279147285 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27606633 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278265004 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.27585035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278434359 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277559834 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275625858 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279333057 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279213624 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275884106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276592989 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276136954 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278644196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279000838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276247348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27931925 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277581826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279112588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.277976332 seconds)
  done (took 29.302179646 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281522226 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282619049 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279085516 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278391052 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.279980906 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276972813 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282718455 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279877327 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280039704 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279674131 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27881517 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28109055 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287260353 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285494557 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.28087952 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281661787 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.423534325 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282502881 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283246669 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283131929 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.277458286 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285836051 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.277872252 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278560399 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.279148736 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283272968 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281949535 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281968989 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.28455483 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.28224542 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288914527 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.281487607 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280628656 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28174698 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280361386 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282198533 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286232067 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284515026 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.278717692 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281037126 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292007446 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305890103 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284448728 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28854432 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.282077574 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281728902 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287229733 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29398099 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.280570594 seconds)
  done (took 64.202452265 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28279442 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282149622 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280176758 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283418477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.282862707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283387797 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283248321 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.283227069 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280446635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28101026 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283725981 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28091618 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280618193 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283046517 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283762071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280761723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280965137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280973294 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281440459 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281284863 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280446945 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283526703 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283769131 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281686346 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284606014 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281420805 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281423148 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283646474 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281734369 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281624112 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283472721 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284049048 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285098144 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283006796 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281943428 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284336034 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284846393 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282376037 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283939504 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282111161 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285015933 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284124613 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284630766 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.2851382 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282597685 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283602231 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282758538 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28280187 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282972441 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285502773 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284702176 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282848935 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286040947 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283428977 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286520995 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286880086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283422523 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283278756 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.286584833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282825061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282746843 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28635177 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284217804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.285589084 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285081289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284705073 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284462751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286671131 seconds)
  done (took 88.466952693 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28970073 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290223958 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289212907 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289563625 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28906931 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290459906 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289613051 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290745683 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290066127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289811592 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29012967 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288443249 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289429403 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287232766 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289716039 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290914156 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291497075 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290776868 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289756888 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290631009 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.290874369 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29057357 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290795002 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291106023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290493212 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291248933 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290446275 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291356615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290772565 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291295031 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290930643 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292281263 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291640139 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292199417 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292306039 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291671472 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291875183 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290999809 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292428542 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.292278312 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292490355 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29227283 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292395389 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291608754 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292342027 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292557074 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291898668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.292771974 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290401313 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292313815 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292445182 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292228083 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292243512 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292445007 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292303866 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.290323713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292504141 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292095195 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293594305 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293783759 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292150292 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.290106414 seconds)
  done (took 81.258076757 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291322046 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29099207 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288942391 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287695748 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291275442 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289303376 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290760566 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290859229 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291025333 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.290838817 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293141856 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289852058 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29030727 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2919802 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289555365 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290669591 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290251608 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.289874854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291944787 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290690275 seconds)
  done (took 27.018330776 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28896147 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292712329 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290082968 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289591328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292128992 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289721656 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293139928 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29213373 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290246894 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293395611 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292775674 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293335919 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289195286 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290898735 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292942616 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290824962 seconds)
  done (took 21.871071243 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291713075 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291928908 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295582625 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295289642 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291520693 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289674326 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292916131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291879414 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290370196 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.293531913 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293971416 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293694251 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293389937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296404639 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291579175 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294776742 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292292897 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290923491 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293726992 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.297008512 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292823262 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290510805 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29386389 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.29334361 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291897054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291784254 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292688724 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291530853 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291594122 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29522327 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291864515 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.29225212 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292128709 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292108344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297560531 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292953614 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295217216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295013165 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294853852 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.305071683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295549236 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293395593 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295295119 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294931263 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.291723344 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296051938 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292669072 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293653401 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293524857 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293454995 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296383658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298362907 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296799256 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296508884 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295834122 seconds)
  done (took 72.371734229 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296206276 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295806766 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294614969 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297278397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297109435 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294960795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296143946 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296096846 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294372203 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297074792 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296117578 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299182981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295417421 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298447036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296205368 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298466728 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294695955 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294738091 seconds)
  done (took 24.546120563 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295221382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296066754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.297621498 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295264433 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294482188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298227784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295877629 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296484294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298923267 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295613338 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29565835 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298030207 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298803287 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297757438 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296177462 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295295366 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297354339 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299116191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296538509 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295757251 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298995427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298966591 seconds)
  done (took 29.745199239 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.297321388 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297762938 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.298528366 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.316832112 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.319158856 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.323350487 seconds)
  done (took 9.067721767 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307838499 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299619691 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296564541 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300572957 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299455678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296005976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297459493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297584933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299020794 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297225275 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296827975 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299228929 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299684612 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29721094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300211428 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300363868 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298548056 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298561486 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297909202 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300630293 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298494674 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300095087 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297733699 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297662331 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299959484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298401945 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299815855 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298852284 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298655372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301200283 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301729296 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298696886 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301573294 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298736761 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302147615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301360701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298236433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30088276 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301733863 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298409318 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30066918 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302106137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302444049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299349355 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302166351 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299098677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298884419 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299119622 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299339814 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302951664 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302290859 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300158077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301630911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302295533 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302453384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302890142 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30033452 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300464145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303165297 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300210059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301933367 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302401843 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300881576 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300968652 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302858759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300542163 seconds)
  done (took 87.048065919 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302034185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301031099 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300837282 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302113529 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301748344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300537912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302356139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301752458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301391006 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300123953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303517306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301196052 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302224808 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301666568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301845707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302304761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30297328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303687781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301416343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30511465 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301720789 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302540078 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302482698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30201085 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302992998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304553956 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303065387 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302755272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302758973 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302389554 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302946617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302678424 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300927737 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302377625 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30349865 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303429112 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303564876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303084728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303665692 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306381042 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304131097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306511904 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303461448 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303195999 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304338443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303152806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303577288 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303690489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303966043 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303994214 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303787218 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303687816 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303406491 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304620909 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305045083 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303915902 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304824717 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304879663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305192394 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308080034 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3049838 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304780674 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307393573 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304449794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304902601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304951152 seconds)
  done (took 87.23913502 seconds)
done (took 1755.610260719 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468357494 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.423587776 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.305511717 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.319305358 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.307022362 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.327815068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.322315855 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.306363429 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.305117027 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305861297 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.306541468 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.494930819 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.340997897 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.306507998 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306531738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400695127 seconds)
  done (took 42.771300198 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335659696 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313510168 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437548832 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331482708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335969045 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.514595012 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371239873 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311327687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.507604569 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358298857 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.027620921 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337603611 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311283615 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.531468989 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332569209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514062936 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.584327445 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.038643405 seconds)
  done (took 30.718392447 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.829582799 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.337359879 seconds)
  done (took 9.391313214 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.334138853 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312284121 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314540006 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310856017 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.302497432 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.321560802 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.310587952 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.308972619 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.51497553 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.456828347 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.319565608 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.321897228 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332507287 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312390632 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309066964 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350615301 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486791117 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310918578 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308882374 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317671618 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312159174 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401752108 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359527502 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315539656 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453374183 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.493936866 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319498167 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320892011 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.446993307 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.312263505 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311821666 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.31355934 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313560745 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.254441738 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.825426423 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307760869 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.358615521 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321335824 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311436095 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450549088 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.314226037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317049103 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306826095 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.828221715 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462368915 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.443595024 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.7683195 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320243529 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315638187 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379888792 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314810037 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.316278492 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359396265 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.134385949 seconds)
  done (took 112.179802574 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.341516003 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.709269461 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477680781 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329311722 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015389434 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.94281885 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330485194 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.642291993 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.347035716 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307982213 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.647055638 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.859818685 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32925229 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.359488359 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.458015938 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.337559715 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310042699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.144850077 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326820147 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313589916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834390115 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3110859 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309209489 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47977585 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.350367496 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798916973 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.947712966 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.760928765 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331097158 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30886704 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808134434 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.33351038 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321775087 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309948918 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.587174276 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704416107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679580283 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.314427212 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3383266 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313526228 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.332117636 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793499166 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683114148 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310624834 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311042131 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796481543 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.310172344 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.315555661 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.312058816 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515464677 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.954386451 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.311038145 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.866703003 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.311783853 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.683512742 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386793652 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.378386591 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827665878 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310501904 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.411246081 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.335184308 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313542032 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311374756 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311578047 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312061294 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69323585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.429562206 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312524203 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689832778 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802424712 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334028361 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871238253 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.197998878 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.343186679 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.408738024 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311031686 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.94697683 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838380816 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.31530252 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312741567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678497459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314049054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.650304621 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.331092625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313796339 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852221163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325910291 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.315702759 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.312109387 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.312888918 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.009079777 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314613172 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617055626 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.336811577 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.312983256 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.312850237 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.333266643 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3206439 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31358489 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.313943817 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875017416 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.339298895 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.31094546 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334934916 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313680526 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.316661444 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.312780161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.315291191 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.535395202 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.872209039 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.320108151 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316146949 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.315067262 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.337713704 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.485922731 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.314997192 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.654568125 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317192875 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322341988 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.316226808 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979233507 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347053052 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315179733 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.321070945 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.25685221 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.525991711 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335170719 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.316887812 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315024904 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.336012106 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.667330523 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33850943 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.394887818 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317804278 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052159386 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.37294472 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.343443964 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.61625266 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324523546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317142238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319767246 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318033104 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613104033 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.599275871 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.357954757 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316647053 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.31694452 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037011916 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.379689246 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465392737 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335933862 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.357961232 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.515756775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70988228 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317585938 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.943717654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.318197052 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533092406 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.317891332 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629099508 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841657389 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.335473071 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32300099 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.056547638 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.054319826 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.004486318 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.32179131 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.657024486 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.335850589 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.792652879 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31914515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318680128 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.810488094 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319053911 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324599368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.319282452 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.319501403 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386974332 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494675714 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.485590695 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.327146795 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802606455 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.361663313 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319866274 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326643985 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320466536 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.665376622 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344318043 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.321234292 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.36238886 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320361614 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32448394 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820512348 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.276506924 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.32237228 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474236419 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987090484 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.339395745 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319814012 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.020757471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.011610376 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864195293 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370876653 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.660695142 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.319271943 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.360950149 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.928679651 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341893027 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824965403 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322714223 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.320765684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953879329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.339563208 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.669963095 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.321289418 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.323162164 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911861885 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340008178 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.326712681 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.792975398 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.358714298 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571199358 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.322414384 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.331094827 seconds)
  done (took 1108.806175661 seconds)
done (took 1305.090278485 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.322107007 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32529126 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.311858022 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324173185 seconds)
  done (took 26.526130504 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333350471 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328639803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.332526018 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328042087 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331202362 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327725202 seconds)
  done (took 9.224788993 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.725932892 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.325599623 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324368923 seconds)
  done (took 19.618691081 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554542446 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.711767823 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.693238121 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.737891488 seconds)
  done (took 10.941664567 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333945543 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.334463915 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332774927 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333280282 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336637155 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336478745 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333282798 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333140924 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.33545485 seconds)
  done (took 13.25178367 seconds)
done (took 80.806138522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.310241172 seconds)
    (2/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362006853 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.330385083 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.600893238 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.712499948 seconds)
    (6/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.732375747 seconds)
    (7/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.348479761 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.393918742 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.350794708 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.923992918 seconds)
    (11/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.448505295 seconds)
    (12/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.106110207 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.757807907 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.328842594 seconds)
    (15/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.324897869 seconds)
    (16/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.891683868 seconds)
    (17/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.170475093 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.350742599 seconds)
    (19/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.324272307 seconds)
    (20/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.38554074 seconds)
    (21/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.096286256 seconds)
    (22/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.045430426 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.755644275 seconds)
    (24/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.397990749 seconds)
    (25/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.312941824 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.335878116 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.346040111 seconds)
    (28/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.337000214 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.333292196 seconds)
    (30/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.110498112 seconds)
    (31/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.044942069 seconds)
    (32/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.802294304 seconds)
    (33/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.372750279 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.487133363 seconds)
    (35/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.004006261 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.300731158 seconds)
    (37/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.415411235 seconds)
    (38/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.314599932 seconds)
    (39/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.330696899 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.016641943 seconds)
    (41/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.522335532 seconds)
    (42/286) benchmarking ("sort", Float32, true)...
    done (took 6.332769543 seconds)
    (43/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.653183138 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.339262308 seconds)
    (45/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.028418878 seconds)
    (46/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.375768103 seconds)
    (47/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.442105611 seconds)
    (48/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.355247411 seconds)
    (49/286) benchmarking ("sort", BigInt, true)...
    done (took 6.327289978 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.331991462 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.17060253 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.439530719 seconds)
    (53/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.32725871 seconds)
    (54/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.875676401 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.591597461 seconds)
    (56/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.439940097 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.346628756 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.160477451 seconds)
    (59/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.715615515 seconds)
    (60/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.317742813 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386935454 seconds)
    (62/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.752568951 seconds)
    (63/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.341209816 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.043879222 seconds)
    (65/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419804194 seconds)
    (66/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.715848712 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070606569 seconds)
    (68/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.334308402 seconds)
    (69/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.449806784 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.355134821 seconds)
    (71/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.633209835 seconds)
    (72/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.390500302 seconds)
    (73/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345207909 seconds)
    (74/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.410828638 seconds)
    (75/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.435512717 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.089224618 seconds)
    (77/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.318962952 seconds)
    (78/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.353371282 seconds)
    (79/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.317500715 seconds)
    (80/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.356367735 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69948997 seconds)
    (82/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.335368917 seconds)
    (83/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.208310065 seconds)
    (84/286) benchmarking ("sort", Int8, false)...
    done (took 4.419377123 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.339328196 seconds)
    (86/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.316930113 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.620434299 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414533548 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.316589188 seconds)
    (90/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458150249 seconds)
    (91/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356948438 seconds)
    (92/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.412208275 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.757602784 seconds)
    (94/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.33501794 seconds)
    (95/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.903807835 seconds)
    (96/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.317369474 seconds)
    (97/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.885453309 seconds)
    (98/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.123727066 seconds)
    (99/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.062136246 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.449827962 seconds)
    (101/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.458352835 seconds)
    (102/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.827989923 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.943231043 seconds)
    (104/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.442411811 seconds)
    (105/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.198536193 seconds)
    (106/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.339758601 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.531044017 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.580107165 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.317597019 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.857811709 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.344574906 seconds)
    (112/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.461687577 seconds)
    (113/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.414774187 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.860345166 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358131285 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.591019317 seconds)
    (117/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.092117352 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.224295516 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597839931 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.29522091 seconds)
    (121/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161638501 seconds)
    (122/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.366264988 seconds)
    (123/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.898752217 seconds)
    (124/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.217832719 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.446835936 seconds)
    (126/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.319677202 seconds)
    (127/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.842917335 seconds)
    (128/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.320057455 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.200688432 seconds)
    (130/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359088539 seconds)
    (131/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.319057593 seconds)
    (132/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.355160465 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.337967823 seconds)
    (134/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.31986621 seconds)
    (135/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.05691769 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.377735157 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466393978 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.319062765 seconds)
    (139/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.310656617 seconds)
    (140/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.334633752 seconds)
    (141/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.349517091 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.334731613 seconds)
    (143/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.137046322 seconds)
    (144/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.418479515 seconds)
    (145/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.212814529 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.107433279 seconds)
    (147/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.333236111 seconds)
    (148/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.32188114 seconds)
    (149/286) benchmarking ("sort", Float64, true)...
    done (took 6.334195044 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.475013897 seconds)
    (151/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.332223781 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.33971004 seconds)
    (153/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.362282649 seconds)
    (154/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.278378562 seconds)
    (155/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.563237725 seconds)
    (156/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.399585395 seconds)
    (157/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.360254603 seconds)
    (158/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.228746099 seconds)
    (159/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.44846599 seconds)
    (160/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.343460632 seconds)
    (161/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435083723 seconds)
    (162/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.454555562 seconds)
    (163/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398062845 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.359701179 seconds)
    (165/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.334246715 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.36827998 seconds)
    (167/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.753557471 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361982955 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.55361641 seconds)
    (170/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.858818506 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.126265868 seconds)
    (172/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402175362 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377100739 seconds)
    (174/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.214475366 seconds)
    (175/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.346927918 seconds)
    (176/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.32284685 seconds)
    (177/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.381322379 seconds)
    (178/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.077786573 seconds)
    (179/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.383566242 seconds)
    (180/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.338522871 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.765427361 seconds)
    (182/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.932398705 seconds)
    (183/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.399643175 seconds)
    (184/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.425376704 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.407063822 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.412487306 seconds)
    (187/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.163236073 seconds)
    (188/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.60914114 seconds)
    (189/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.53500521 seconds)
    (190/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.32341305 seconds)
    (191/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.339283821 seconds)
    (192/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.364406194 seconds)
    (193/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.322666898 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.425720075 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.556244939 seconds)
    (196/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.486834626 seconds)
    (197/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.323354636 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.022179413 seconds)
    (199/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.363807151 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.098973201 seconds)
    (201/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.363896244 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 5.373873159 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379934208 seconds)
    (204/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.442708698 seconds)
    (205/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.363453177 seconds)
    (206/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.425626893 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.173847085 seconds)
    (208/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.712433156 seconds)
    (209/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.920379728 seconds)
    (210/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.340243298 seconds)
    (211/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.799121596 seconds)
    (212/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.049480846 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.347986662 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.223476139 seconds)
    (215/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.674655033 seconds)
    (216/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367311257 seconds)
    (217/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.35373391 seconds)
    (218/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.342654042 seconds)
    (219/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.326714564 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.296975912 seconds)
    (221/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.447144957 seconds)
    (222/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.44378625 seconds)
    (223/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.343210505 seconds)
    (224/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.071086084 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.339448545 seconds)
    (226/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.427047945 seconds)
    (227/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.610715123 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.347815699 seconds)
    (229/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.378718004 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.578035428 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.357191603 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.329237112 seconds)
    (233/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.362912121 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367127484 seconds)
    (235/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.066849261 seconds)
    (236/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.235642225 seconds)
    (237/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.325271269 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.370735294 seconds)
    (239/286) benchmarking ("sort", Float64, false)...
    done (took 5.735857808 seconds)
    (240/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.869370221 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.860325447 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.730648799 seconds)
    (243/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.349954558 seconds)
    (244/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.608877735 seconds)
    (245/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.250945267 seconds)
    (246/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.351361606 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.038635905 seconds)
    (248/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.327269376 seconds)
    (249/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.379553009 seconds)
    (250/286) benchmarking ("sort", BigInt, false)...
    done (took 6.34087469 seconds)
    (251/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.326701726 seconds)
    (252/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.34733503 seconds)
    (253/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.017499854 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.427139807 seconds)
    (255/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.676468274 seconds)
    (256/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.367541351 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.424013561 seconds)
    (258/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.966030857 seconds)
    (259/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.671423618 seconds)
    (260/286) benchmarking ("sort", Int8, true)...
    done (took 6.342829291 seconds)
    (261/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.373274731 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.450374411 seconds)
    (263/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360460394 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.143816007 seconds)
    (265/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.361620161 seconds)
    (266/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.336405676 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.329129343 seconds)
    (268/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.33532629 seconds)
    (269/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.429127127 seconds)
    (270/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.328669041 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.406398333 seconds)
    (272/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.342011377 seconds)
    (273/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.084602077 seconds)
    (274/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.46668389 seconds)
    (275/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.328900243 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.86733185 seconds)
    (277/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.540919294 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366674627 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.914516614 seconds)
    (280/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.448775043 seconds)
    (281/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.258857707 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.336263361 seconds)
    (283/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.652746665 seconds)
    (284/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.468306 seconds)
    (285/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.876683755 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.473308913 seconds)
  done (took 955.179334535 seconds)
done (took 956.424625124 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376093558 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372052935 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.35300824 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.373407617 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.466043729 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53644465 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.3635976 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355332512 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400262489 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.4041931 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.352431707 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.536167071 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.355613977 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354697751 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.352284699 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368721275 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.581106563 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.356507446 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.370918745 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.36330491 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372177438 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354084337 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404805153 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.53658052 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358712272 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.357810775 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.359701166 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.37501616 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.466831785 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.359005517 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.357742139 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.36776574 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.508514648 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.35417585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351457808 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376479544 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367111651 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365325285 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.358922744 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.387701975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.072207808 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359088763 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.357844941 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.356785391 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.356561722 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361402163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357659883 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.361399813 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37063448 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372207833 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.082329075 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.373552018 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.360485514 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.356234315 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.366763481 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357202208 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.359541954 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374616155 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.37652841 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376770571 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.499727594 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362012697 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.360091016 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.375885369 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365783489 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.130279986 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355685936 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362256789 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.078694657 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.365545986 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.120581465 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369240952 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.359095184 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.371415382 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.390091275 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.51567094 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.352845882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357479381 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.366213762 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.356918763 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.368933872 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372643337 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.363085439 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360297548 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374092074 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.541211639 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369967357 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.360744499 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.367457042 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379685827 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.366990147 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370220703 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362242565 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.354181208 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369179756 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.36276903 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.363364046 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363965774 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365627564 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370997434 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.968730502 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380136602 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35667986 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.357064639 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360010909 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374033364 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.061897388 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.365717765 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382273029 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407732471 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.36263477 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.507875502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.364804027 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379344303 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369997673 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364643112 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.356276689 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.59234287 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.049660803 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379610975 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364144471 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.360015224 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380961388 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.363313989 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357869698 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.610268556 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.366094734 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377254266 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.483185263 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372428494 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.393230454 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360331738 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.36470077 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.398848709 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380988103 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394337777 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.366559723 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380282132 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.378381178 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358956631 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374275353 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372570699 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36356313 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.367984306 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.356112548 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.403319878 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37825945 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377023478 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384829428 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484525043 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.359922461 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.595298732 seconds)
done (took 233.406269233 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.4228464 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.361919942 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.447932398 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361450756 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.464231521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462941954 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.35888697 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.359021201 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357987763 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.740527287 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358861459 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359768487 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.354416058 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359390122 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443646775 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360764773 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.3597764 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.78212023 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364984034 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432447052 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.360134596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359708232 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362016082 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.826665661 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.361366782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.361147067 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.433257254 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362827003 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.708006978 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.357668589 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.359878022 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.781761733 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451977147 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.380349478 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371745783 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.370544253 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464366787 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.383555989 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444984778 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.445443501 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.457625361 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.403876915 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.358185197 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.359609879 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.365043763 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.367175688 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.361042423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390335048 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.364061509 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.361554247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.705958274 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.373327738 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361086877 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.361551983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.361548567 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.396403777 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362213855 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.367033974 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.454846121 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.367319058 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427054803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.745995512 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.834400522 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364939985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364296527 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.362541773 seconds)
  done (took 150.73268121 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429999226 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.43627988 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.483701944 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365429763 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415675759 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.489237593 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366127995 seconds)
  done (took 11.261266962 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370274427 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365874455 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415128214 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415649015 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.369449456 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.544287276 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366597197 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377446394 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.363151484 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417084412 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366694867 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366955646 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373629503 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.359710978 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413829152 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.377801635 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.480814038 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367338362 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.370275195 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523194919 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365356705 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373534125 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.419269268 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378146285 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368931349 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372446307 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.18813181 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371085698 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364851811 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368137401 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3637573 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.443000516 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368851139 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.368874513 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36517335 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481494569 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.370379199 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366104419 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.36789144 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.36304812 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368492842 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368204689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367968224 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365229053 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369453403 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389337341 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.36794355 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.368372121 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368200668 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.369045699 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417489068 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.369150501 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.365328344 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.365953084 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422689435 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37509641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.372098876 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366942799 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370138628 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36585381 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525037507 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416533555 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369301299 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415965688 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369794972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371051646 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.369291659 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370631377 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423947392 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.36845134 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416777449 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.36691495 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549647097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393064367 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371253194 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372359089 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37188679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374017332 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.367487602 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375885907 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368386099 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369635713 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375926156 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368808714 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368281039 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.536321275 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476000413 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368599002 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.382874523 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378099361 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368372898 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424397371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371821882 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.368404998 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422322857 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.485643616 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.423483417 seconds)
  done (took 157.022021516 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375339374 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379263222 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374416816 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39342143 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372449098 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37059756 seconds)
  done (took 9.54595657 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374330147 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374381786 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.37181486 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373533749 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.375354217 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373422132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.374897778 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373524516 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.379403703 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.372821347 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.373625496 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382849472 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373365496 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375758415 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376024531 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.373175241 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.377034644 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.370720784 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37343256 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.376539771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.476065174 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.37589255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376877835 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375274494 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377606164 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374384586 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381537462 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373930213 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.373149376 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382074613 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379320345 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374005838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.374197519 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.380533544 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381317332 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375121225 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378186751 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386237584 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372710062 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376204026 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.387012601 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379097898 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375456219 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.386439969 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376180132 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.380994761 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.390542569 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383504861 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378731426 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384720567 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.387713627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376718636 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.376049965 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387685795 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377245358 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400017678 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.391349958 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.379482836 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.380379576 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.379099969 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379588664 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377095548 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378717404 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.384158614 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.373892895 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.387210665 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37863812 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383894856 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37938655 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.377147911 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.386952238 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375888204 seconds)
  done (took 101.645761821 seconds)
done (took 431.479420945 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.506744475 seconds)
  done (took 7.793107134 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.874873846 seconds)
  done (took 8.162864374 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.127531619 seconds)
  done (took 24.42337122 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.424113983 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.457689031 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.408879091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.373326705 seconds)
  done (took 26.951230113 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.650499541 seconds)
  done (took 7.938017577 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.380763604 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.371940486 seconds)
  done (took 14.042221112 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.805733125 seconds)
  done (took 8.094388769 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.402292168 seconds)
  done (took 7.698182043 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.397666795 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.398644796 seconds)
  done (took 14.09889829 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.35791243 seconds)
  done (took 7.646613962 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.156294325 seconds)
  done (took 12.444728317 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.377596101 seconds)
  done (took 7.668332472 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.417406164 seconds)
  done (took 7.705748096 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.29331224 seconds)
  done (took 10.580952681 seconds)
done (took 166.536116344 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.372521042 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373823963 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.372143618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.370591005 seconds)
  done (took 26.77785389 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.412844549 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.412931358 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.415195199 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423868485 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415570101 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411814771 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406351499 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405166731 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423333565 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.415737633 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.41439525 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.415996463 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.411488729 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.405523701 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414973529 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.415833353 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424580281 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415494505 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405506275 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.416502488 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.380768284 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.425060571 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.416470165 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.380912306 seconds)
  done (took 35.175457332 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.901475798 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453535453 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.536434268 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434275586 seconds)
  done (took 7.615187321 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.432717887 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433845235 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.450009949 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485976913 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.514764836 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.443713148 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406635586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.402928971 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389384338 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434511325 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510357641 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450395038 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.523871026 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.380969327 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563991759 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381849827 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380795933 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434257158 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485659585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500585912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382375644 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.433674292 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.439026424 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451260843 seconds)
  done (took 36.005132617 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38259855 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400323298 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381577233 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381299186 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390670517 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.381875541 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.382806381 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.383073869 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.38290739 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.388138507 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.380952101 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393912229 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381850723 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38195041 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.38891227 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.383641077 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.388347153 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382126392 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.382043919 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.388014959 seconds)
  done (took 28.999204842 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.376943836 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.292124977 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728254677 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633262921 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.377042595 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.379693386 seconds)
  done (took 29.079993373 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.465661159 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.610884629 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384666888 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.799098841 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.878735123 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385370234 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.385261285 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.653033345 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.027468317 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.033201525 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.449888275 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461459702 seconds)
  done (took 20.829681994 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.377853777 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.381928386 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.386520433 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397199191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.447022287 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389109846 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.391118302 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.378808734 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.450967508 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.455886863 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391346045 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.449303134 seconds)
  done (took 38.192756584 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46714059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427818792 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.447194466 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.463964123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161957141 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59658047 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446716707 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143219453 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.385219111 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655870468 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384907666 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470985431 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640386925 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383509525 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383298841 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.475796712 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609364699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915811238 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385187095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.78836224 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408989477 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393445696 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.870853613 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655223025 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599573665 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.367287447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.644239182 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159364093 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708461758 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397371424 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39620192 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385307848 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658205897 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091280905 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501835972 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63462039 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389364724 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933241986 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.387530126 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.778407134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386489085 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387699451 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395500351 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38566044 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320116286 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390351467 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157666156 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.391083893 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.09753673 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386669737 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692890348 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484313216 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389131748 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959712765 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417748411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39338289 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.38926312 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483798803 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955522732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.0503535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397483611 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.324000946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39491297 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.789315588 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065015276 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393280582 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.391573167 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391008203 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350689196 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.803104858 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404170857 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526312257 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411767415 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049042942 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160226547 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398939503 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349701187 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985184261 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390707586 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.321977936 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616265715 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165128799 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32782051 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.335337416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321819927 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146974907 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397562581 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.04438297 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410938478 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153737964 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665695433 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40938723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411992105 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612579735 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.275640071 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389689343 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.404627865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506581601 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40996692 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.154805108 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375082824 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396269986 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646112586 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.600499289 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389108848 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.475945095 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926826225 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417914631 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.412156585 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406987483 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647278004 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.039345319 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406270064 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368236838 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41019664 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167075024 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18692907 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395720959 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393645448 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394973094 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692240352 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.223071418 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274143356 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458028927 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399635368 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390229201 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.814387389 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242830034 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.272720342 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.636720007 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433289115 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404357953 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.394620499 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416887015 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.393041943 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406984334 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.173251063 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616555285 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40081184 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669176468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326331559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529438473 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408330034 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.615313052 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.710975226 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.396593707 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653765257 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393134415 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413936803 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425983985 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41184908 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491690126 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413847581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.399254718 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653916955 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.396373909 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397209853 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.82251375 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171630407 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397496433 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402405423 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397461138 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045445343 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367426993 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399247169 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.288063163 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407144406 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460978861 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400249047 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64726975 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.958502002 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415577979 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400134984 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.391341141 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621592645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404170888 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.812264634 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474555317 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932243043 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.068683538 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408979983 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.328261914 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.105450125 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.087171196 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394765738 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588865926 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395283888 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.642578659 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410118234 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399852192 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047341215 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396934938 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.823037745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.401616849 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409799194 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40089414 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395370657 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.977154989 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101558153 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414603448 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410231689 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537932213 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410294903 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330405684 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.912572484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401660818 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397472725 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.171578907 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430722069 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.82351064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28978131 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659206843 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418430637 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702511968 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.911748726 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430893457 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.403598705 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400983965 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398651563 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.420531635 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405552577 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.408390264 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.82917074 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84692698 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963841781 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302512453 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993690931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.774436113 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.40073463 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.303494061 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172386756 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355091404 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058427667 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662073529 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169182476 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443741747 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942644848 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.721430431 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301658998 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70872091 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632133229 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.765051941 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.409167946 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71277648 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614490257 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433980654 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401993608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36575716 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.688142216 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01726245 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420476616 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502737916 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174048078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421223478 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.178047418 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.413664515 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.217040665 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867930003 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.052994512 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.849976616 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420328442 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41696574 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279989609 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40746753 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929515636 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085511702 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413331036 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.945163336 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362092879 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655877905 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.415055462 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.4047806 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.313723488 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.40498743 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.657498449 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706591372 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340743333 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414301259 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996335045 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.266570929 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407420762 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401981663 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206070477 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403325891 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740950385 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.407208491 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.911071388 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4072023 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.3366678 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336678661 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.094636026 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407475446 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371929384 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939656006 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.407689595 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409836355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411710742 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252104646 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660349512 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.416903065 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0703497 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6340222 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406704079 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444088574 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407408808 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416645221 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.391230012 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285770042 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639802182 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425258358 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628366912 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.487870484 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.317402829 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.457437669 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615973112 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.310188328 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404584771 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688684162 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118194827 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.419805981 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303069318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433240316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42166861 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422781148 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402943589 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445088977 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475907482 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6617918 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418618929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414478121 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872738499 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426875765 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407669709 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420170266 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500159062 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417128456 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.921856898 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179899103 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068125006 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220240512 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068838794 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72304817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411274802 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409244665 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362996522 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558059358 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935156313 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679773878 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526297221 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.404433519 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429742426 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407812323 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417541817 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621392616 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681701159 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.282637622 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42497668 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.073966167 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.30908977 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418533925 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.619379222 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950132874 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014349051 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530612079 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.420715674 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.188309034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68223503 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499975882 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40901314 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005267144 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.409857168 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.258986601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415189505 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412220121 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556040435 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714786217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128729442 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.440366194 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.565475408 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.182113557 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.089201504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671154554 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.014728593 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673932283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074730577 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20195172 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675302192 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47909115 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667830275 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.526259001 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557704229 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.414923772 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.308137815 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410636486 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261816307 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.121483335 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.420748585 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078405223 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676308211 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.414001863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.423375323 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435937559 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.421837999 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636299044 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187760506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637133647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42094789 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.416611414 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.985270902 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085093976 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.728166054 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37058721 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418564073 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686859495 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648379113 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436705492 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.864434058 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.123101426 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019507304 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.387633833 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432124767 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418916111 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208927682 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077094079 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.934189584 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95387015 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073405759 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415272105 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68846439 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.417541758 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42348369 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692133405 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417623587 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416404784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.675515118 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076904417 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308563796 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.42316207 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.930381823 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.351883666 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643720011 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456752693 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383616074 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427364727 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.900646819 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436347181 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53318716 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425268994 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.424626192 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426124795 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.170785264 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694169747 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.41972946 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.412354111 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.425605601 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423509771 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517677593 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050667545 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440481522 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.089668198 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.769524705 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673784462 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416988484 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.404424943 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.419545115 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416036358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193474227 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451602136 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433401113 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025025842 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.416459133 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429245526 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419707493 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632107402 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626759189 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419057005 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672653565 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433443853 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433730769 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321967892 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189809796 seconds)
  done (took 1705.103998471 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432826993 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.46435113 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.449669004 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.469009352 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.470853117 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457872045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.429613522 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495113318 seconds)
  done (took 52.999331738 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.426468346 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575771261 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.450145397 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.426574778 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.426717538 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.418293411 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.925919774 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.431544286 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.42460016 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.426574631 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.42900726 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.435863863 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.098308128 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.427258468 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.433214439 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.414223696 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.428458056 seconds)
  done (took 66.937816285 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.231230697 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.658643571 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.009286575 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.443144589 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.425487277 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.453063139 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.420795559 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.451482762 seconds)
  done (took 55.423992225 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.434853895 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434547237 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.436161146 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.434939617 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435397643 seconds)
  done (took 8.507005131 seconds)
done (took 2112.937960269 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423364513 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.425604636 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.42291944 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42509443 seconds)
  done (took 7.027581645 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.403744653 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.150098601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.405688427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419385464 seconds)
  done (took 18.709740925 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.423559905 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.419497718 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.224639203 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.103736083 seconds)
  done (took 5.660864717 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167181704 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.176502104 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162652517 seconds)
  done (took 7.832803084 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.415316389 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.419171592 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.41816358 seconds)
  done (took 20.580089535 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.723192651 seconds)
  done (took 3.051865435 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.561855542 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.613047941 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.796948906 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.783193504 seconds)
  done (took 8.083542595 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808089142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787363186 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.603323142 seconds)
  done (took 6.52648066 seconds)
done (took 91.647753569 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.774872004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.438715498 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.621673152 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.750585508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.64644764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.623276954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.706316393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.712212907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.256826701 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.24248602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.74852411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.647962839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.659695654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.440098101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.648585427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.440786595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.649063833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.829764834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415465747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425347444 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.699844064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.390129997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.583033957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.41106893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.653256133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576521804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.971585319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.440431329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.423815121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.994845676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.577049126 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433432363 seconds)
  done (took 200.162514735 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.416955101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.435322054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416425905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.434956211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.417087862 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.41815589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438022219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.448748255 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416812017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.446897557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417982688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41776621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.437609195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.420177702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417872395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41734175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.426757255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.426424094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416777583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418301235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437443983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431905333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418277862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439248915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422476866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419216331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.454564394 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418376511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.429387369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418215207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418849289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.441375802 seconds)
  done (took 206.986148434 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.418766015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418850725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420810971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429366275 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.427414249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422183803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421827678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.418670387 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418794405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.419145026 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.439814644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41958795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.421226837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419269821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.41794606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418852441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.436068159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436840698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419474111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420284231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419585976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.422855599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.419582269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.432118038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419900566 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420941804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.426814902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419714151 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445119166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.435461325 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.421296712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430103762 seconds)
  done (took 206.910589341 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.624392612 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428391306 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.429194794 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.364396765 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429113435 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.428709066 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.422229076 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.62691538 seconds)
  done (took 15.08661695 seconds)
done (took 630.47445251 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.92822754 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.626702094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.640696674 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449330943 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.339866376 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468095606 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.449719736 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.639263555 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.398210784 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647480181 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.831817832 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.446727108 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.986470378 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44703958 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.727462548 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.555386484 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.368511498 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.472837481 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.793188665 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.110207366 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.728010809 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.02160036 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.643275616 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.393728731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.01099256 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.025322684 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.271263576 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.355389608 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449511726 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.799989627 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.298821281 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.560761421 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498171247 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.501881903 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.559691113 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.557975461 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.528701001 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517690276 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.643632591 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.776967683 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.080708494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.209951193 seconds)
  done (took 98.096540269 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.418384736 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.419976996 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.419683697 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.420049169 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.421347061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.419629561 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.418782452 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.419508325 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.420018588 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.419606615 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.419774925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.421118431 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.420342395 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.422669337 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.420219546 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.421091029 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.421919479 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.423140084 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.420341228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.420003361 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.420945475 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.420697883 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.421670695 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.420826485 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.421348039 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.421329319 seconds)
  done (took 38.272453474 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43392689 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.700173013 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.888866805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438519021 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433619792 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436637372 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.524340345 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434127258 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436114651 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43590575 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.600891519 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436380416 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470455082 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.914188399 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435558714 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433987307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.434341105 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432491293 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.710826545 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443405998 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.54611829 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.436311333 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.524659453 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.444646664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.458138533 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434558573 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.439612006 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.033844209 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437270825 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.600142546 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.38310659 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.523241714 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.97393441 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.901673718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.378639223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.439695856 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437001271 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.605626736 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.438563339 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.435663827 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.525699771 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.437099902 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.899328111 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.137145574 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.45651094 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.437445786 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.057810322 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.602519202 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.735468193 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447563361 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925852629 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439204779 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.43841146 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.43798103 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.729660049 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446377988 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.436514519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.079726002 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.460720377 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.526720268 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438656076 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437661785 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.714516313 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437426203 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704727978 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438283716 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.44555974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.460113651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.899089513 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.442479126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.167242666 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.46049066 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44188011 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.605221011 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.707683699 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.095533594 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.445220474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724023386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.989297923 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.529620561 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.44542934 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.0292588 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.533715746 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.44481361 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.444649727 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.443315942 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442208203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.494760305 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.529550763 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.099149381 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158113138 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.112023445 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.553482805 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.449763158 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.442646075 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.085235035 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.464328126 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.444308877 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.902307734 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.165292882 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46368455 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451197272 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.172384588 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465540159 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.534637282 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.449608606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.909599131 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444418197 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495924405 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445145573 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450741578 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468073337 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.534867775 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.447076756 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.444167054 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.138053897 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635582641 seconds)
  done (took 190.567354289 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.438217883 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.436306113 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.45359667 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.436694022 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.43812731 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446142277 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.437425711 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.438402183 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443448292 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.43624027 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.438386538 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.445905761 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.440377427 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.458520432 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449635848 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445330155 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.09341647 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.439560973 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.439163534 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.439561449 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.272067371 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442222085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.4395955 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.438872942 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.438740286 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.441173165 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.447720087 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.442146187 seconds)
  done (took 155.207061439 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.447721568 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.102297071 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.450251379 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.598323156 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470367502 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.445309584 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.599713604 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.513371526 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.448397547 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445473499 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445514776 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.798619749 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.449176565 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.0460656 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.675709515 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.60002232 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.046604264 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468193718 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.445822403 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444335229 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.600691023 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.461200779 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.800139804 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.107024707 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.450591731 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.10704802 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43900052 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.449225669 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.447745949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.108553325 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.446865835 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.800749469 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.538085024 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.517904103 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.108466627 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.048570485 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.066150752 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.62022286 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.446409231 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446244255 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.446752586 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.43758603 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.109401118 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.450029632 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.447604644 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.103253958 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.468937258 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.450104688 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.453863524 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.447386925 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.517032286 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.517328984 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.803932263 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.113753599 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.537388696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.460860888 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.60024509 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.850211997 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.454891765 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.050350474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438387269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.113870681 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472743203 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438866459 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449927755 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455777644 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.631597509 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.604516575 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.05347495 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47072112 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.050901096 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.649832567 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.454940792 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.449204174 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451553698 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114354731 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052493657 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.64941223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.612959437 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.681568508 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.441245121 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.450833726 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.441007338 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.538691017 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.450499452 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115924035 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.073676253 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.472956574 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.4536237 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453895986 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453079746 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.658845325 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.117472731 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.540296134 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.048974539 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.828282746 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.808795789 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.45410188 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519446422 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.470754566 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.809667394 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.454551472 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518619586 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.920323677 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.811299006 seconds)
  done (took 174.632158581 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.725463364 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.797863086 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.552316839 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616985634 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.103590715 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.059709729 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.847692966 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.614283241 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.573882509 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.736756075 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.738625176 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543298241 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.689316702 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.535297125 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.216601529 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527752043 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555238038 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.612422145 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.599576494 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.570146691 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.16634332 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.76505716 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.666592747 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.562868262 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554862575 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.344401451 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.054497367 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.032983318 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.65225973 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.918655136 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.022520045 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.654524426 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.519713747 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.192437233 seconds)
  done (took 70.683149577 seconds)
done (took 728.79436956 seconds)
SAVING RESULT...
DONE!
