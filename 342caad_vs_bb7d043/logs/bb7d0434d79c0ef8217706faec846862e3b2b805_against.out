cset: moving following pidspec: 27164
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309669712 seconds)
loading group "string"... done (took 0.474315467 seconds)
loading group "linalg"... done (took 7.887248436 seconds)
loading group "parallel"... done (took 0.172062753 seconds)
loading group "find"... done (took 1.256697922 seconds)
loading group "tuple"... done (took 1.94283554 seconds)
loading group "dates"... done (took 1.323432391 seconds)
loading group "micro"... done (took 0.244038976 seconds)
loading group "io"... done (took 0.655706504 seconds)
loading group "scalar"... done (took 40.918681963 seconds)
loading group "sparse"... done (took 12.771881112 seconds)
loading group "broadcast"... done (took 1.021496231 seconds)
loading group "union"... done (took 13.96922137 seconds)
loading group "simd"... done (took 4.85812781 seconds)
loading group "random"... done (took 9.710806965 seconds)
loading group "problem"... done (took 1.988041669 seconds)
loading group "array"... done (took 22.504549448 seconds)
loading group "misc"... done (took 1.433700081 seconds)
loading group "sort"... done (took 3.605700496 seconds)
loading group "collection"... done (took 19.329800475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.454942151 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138763097 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142345277 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132882131 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199962255 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136204455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154055452 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.108042718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915542156 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180610888 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140796038 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487521883 seconds)
done (took 4.943027048 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30152649 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080695812 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093038627 seconds)
  done (took 0.876313529 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087570415 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.142436831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089349499 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074199336 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.088980164 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0734404 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073549542 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089500789 seconds)
  done (took 1.326703907 seconds)
done (took 3.291068622 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.717503735 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283942819 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201962224 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501322727 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.172425195 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.208214656 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.719464158 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.369021981 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.24131471 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100081922 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128601254 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.438499072 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127598224 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.71436962 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084020005 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120624499 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.173332704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453214984 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08780202 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088836682 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.112127472 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.150089625 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086927019 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096682776 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.180444218 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075507283 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.18378358 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104212322 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074373898 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27641846 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196522264 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.732570183 seconds)
  done (took 10.936809306 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111873399 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133843765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075903232 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.149975377 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13607639 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080413526 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096802663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075253736 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120173923 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176818975 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116211281 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13658281 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089937027 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07730682 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114425393 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.22722342 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118650724 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116550361 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078735746 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102654147 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116693438 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109635536 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088442275 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104098708 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165526929 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19973748 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107269978 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120548113 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077686414 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106406241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140277589 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152122305 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075553718 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076691271 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173351891 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121208635 seconds)
  done (took 4.983568709 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186833809 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098780948 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167660605 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160126405 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140435575 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151898696 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106182686 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254812966 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.123334562 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160002453 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079998291 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173639538 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136911851 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094403729 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093665819 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080112888 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074653413 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683891884 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169716219 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130708132 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094285287 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096792051 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.096981812 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.073163783 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098105756 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073596609 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078770214 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.127890508 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.677376776 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.139901542 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096870105 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168373382 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.117572829 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077710702 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131499713 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188211381 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120730446 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132380102 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077276391 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073025311 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176252063 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099306551 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075160018 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120604655 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129354689 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115257998 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09136886 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0757031 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221559409 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.074730328 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089731848 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.035502372 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.174250044 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.087458851 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07350805 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336331178 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113940976 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075278952 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091931055 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26989615 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.089423261 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126208413 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078513561 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074698093 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094826124 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077280587 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.736119382 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090928585 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.092876979 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07698212 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0847822 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093916728 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091488031 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082435109 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08220371 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11189558 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075115548 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095647816 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07543609 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092259992 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076001415 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111850094 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081036709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09123698 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143095984 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.087303443 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095519108 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123142597 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0772781 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090417867 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124402706 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078247963 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075238171 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132874303 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076266913 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112455431 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09247638 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.136997713 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075765964 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.184994599 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075677122 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123066999 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081851803 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123085548 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.104863356 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077525423 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097926038 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073537587 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091601423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143692426 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075261593 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091836593 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076355253 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.105844151 seconds)
  done (took 23.225938834 seconds)
done (took 39.838267684 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.343232187 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104330175 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105736912 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104690928 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.1032981 seconds)
  done (took 1.534591723 seconds)
done (took 2.279469984 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265871621 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.167864346 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071782442 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.163689416 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089402175 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.170974548 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154067776 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.107105438 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.179342005 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.089464025 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.158975341 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072788307 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073012853 seconds)
  done (took 2.539140464 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091253711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111417256 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078606449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089695271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088877711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089979899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106463945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095830058 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106374458 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079987815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072581646 seconds)
  done (took 1.755852504 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090347484 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093043743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094844615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088607626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08925542 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088904793 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105787963 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094993747 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105977358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081071735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07274747 seconds)
  done (took 1.749572223 seconds)
done (took 6.782297338 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095589781 seconds)
  done (took 0.838658842 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.036319304 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.412525873 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121459216 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167079516 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.325990463 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213673888 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.605846873 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132489359 seconds)
  done (took 15.954484336 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.125449055 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098007176 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077818251 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094782084 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079466188 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096911295 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079426466 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092854155 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07666603 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076270664 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094558605 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077665808 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.0949933 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078885447 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093102775 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077199311 seconds)
  done (took 2.226340146 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11419208 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11240102 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099163489 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085046297 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098416848 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081233098 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100418228 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082142545 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095825686 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080880355 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101006433 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083438924 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099092258 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079530232 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099015844 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.101814826 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081105001 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099283246 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08397196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099548699 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08497638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096955407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0840332 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100226627 seconds)
  done (took 3.09544401 seconds)
done (took 22.861050511 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149280809 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08107104 seconds)
  done (took 0.982130487 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097780423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113063572 seconds)
  done (took 0.966071712 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104261091 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093196973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129912245 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094619602 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094079805 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07854172 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125816358 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095412872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078880964 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078484034 seconds)
  done (took 1.727214485 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083419456 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082190013 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102610728 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114144297 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088941428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096196343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083039225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097616946 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084584137 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092720059 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086167053 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109428832 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083966326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.111149096 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098768273 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084072872 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102928256 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081067621 seconds)
  done (took 2.4409854 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078767922 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079881807 seconds)
  done (took 0.918257844 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081548065 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076292051 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095243172 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095173458 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076771404 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076234643 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093044686 seconds)
  done (took 1.35305816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483078613 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140521515 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267777048 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082309316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.117058016 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311983677 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.092655582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082005923 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099998566 seconds)
  done (took 2.492215482 seconds)
done (took 11.631323896 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089247611 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.097187773 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.125512258 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460109028 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114029889 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075839632 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.154480701 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257426264 seconds)
done (took 2.130824746 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144025456 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33624052 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121374367 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069940561 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091519342 seconds)
  done (took 1.382730958 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076554565 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07843017 seconds)
  done (took 0.917539161 seconds)
done (took 3.208058117 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077269467 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0754446 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08966205 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075354443 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.072593598 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089693534 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.123881878 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.075508639 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075183018 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093229237 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075670848 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.093021563 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075817341 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075051134 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090855739 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073225675 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091361993 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073944356 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073061692 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089244676 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073257482 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091506395 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074053064 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072901613 seconds)
  done (took 2.768888962 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104737118 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092913024 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081833248 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098456309 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080382418 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098266693 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082138647 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092059383 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082153004 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094949853 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080185291 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095883526 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078204663 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09649013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07840935 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09662461 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083501799 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093505944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079011638 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096697617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081334372 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092691993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080391498 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098129875 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080178046 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098012564 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077999847 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092487458 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081239658 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095493036 seconds)
  done (took 3.432761452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082898207 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07332716 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09042326 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.080605865 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089372474 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078218448 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072526542 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090529844 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078697358 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090041573 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079001511 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073647213 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09014385 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078447396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094759824 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076783948 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.217113537 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073539849 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073915919 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094825771 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077112193 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089899752 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076740377 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073202918 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089323843 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073159456 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090623782 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073409723 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073749501 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090016937 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.075969801 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093143805 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073526768 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080293914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094802236 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072979312 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094313997 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073237363 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078048349 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090000647 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073687216 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089826965 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073753969 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080680628 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092557258 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075587641 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090353907 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078398072 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093908404 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080910264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072875474 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090606435 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079384374 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094324154 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077608359 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073073994 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091101326 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073145813 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094305693 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073240104 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072757273 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090277423 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.075855491 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090160323 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08988891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096161285 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073462891 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079063787 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094524037 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075975149 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096126815 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089480595 seconds)
  done (took 6.857376505 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079878306 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100815571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076015702 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075500947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088853671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074136128 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097176062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074393532 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091560583 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092484245 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090588602 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076118439 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075547207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093937202 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074204401 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092583477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084375793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088095634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.073701512 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094425606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074805967 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097275165 seconds)
  done (took 2.64186491 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215985465 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101353821 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137478841 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092495697 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111358149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108941978 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081373699 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100010045 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081639625 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100143969 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084056674 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097184579 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110156734 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084044789 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099986698 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085357562 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098016026 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086168602 seconds)
  done (took 2.647422105 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090345387 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093311612 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098502717 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093213848 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077682237 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096085342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083563212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108904342 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079925612 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093610948 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086875353 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095665891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078960508 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093458552 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079436289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.092350474 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080161973 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076937774 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103335493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099047872 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082946485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103774264 seconds)
  done (took 2.76458452 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094630337 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095701657 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097692662 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097613597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075785192 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095168184 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085479199 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09365537 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086527979 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095539836 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077475358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094567343 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084923086 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093810609 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083296121 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094029637 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078786105 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076239822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095857138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075555574 seconds)
  done (took 2.545712564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117420538 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108634201 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091746164 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11985213 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092483363 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108582974 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119202103 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092105936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109171299 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104511902 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108139707 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092317711 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120107592 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115426687 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092715969 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120381637 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119878273 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10313754 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108509175 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092446946 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121283674 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091403166 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119707903 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10871238 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092392213 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109591364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092168915 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115935509 seconds)
  done (took 3.765320969 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07747911 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076174375 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090900189 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07401079 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073406355 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091207498 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074416634 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092101924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076684443 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073611982 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093495174 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076905965 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095934037 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07661645 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076875425 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093865409 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076451998 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090759623 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074005546 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073858316 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093394769 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076561679 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093720662 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075040558 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074321523 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093688729 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07422765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091594912 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077021494 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074278968 seconds)
  done (took 3.229650076 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085143207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09955307 seconds)
  done (took 0.965328275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074656498 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10945625 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074383666 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080352084 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09889387 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077759114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104043084 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081852016 seconds)
  done (took 1.479359539 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094906174 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112796246 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083149973 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105797024 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09598162 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.110943209 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138592629 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100057706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082373832 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092817207 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09407882 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.093109754 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083029742 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093701646 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08347003 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083325159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095232915 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088162004 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101603829 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079528211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099669955 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089215902 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096896868 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084682778 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.095548305 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088053328 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.103798211 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.089001221 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098167089 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087396395 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.099129803 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071042378 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081646331 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099932318 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078865065 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112027828 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08983725 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098397517 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086318999 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100443909 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087567797 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093482084 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.082972162 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.100776541 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091637525 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099811522 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083438071 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075884757 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091941922 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080221658 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093521306 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077417917 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.088860777 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085692384 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.099046268 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091747911 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097129097 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.079331674 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079771278 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.096744458 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08393196 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.096922502 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080206412 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098222637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085447297 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098017513 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086100371 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092371537 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07217964 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079080594 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103970275 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100971785 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.103536402 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082647905 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101771153 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078365012 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098470792 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084709836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101972039 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086690917 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099905683 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085222064 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103869083 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077070494 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097621023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085457377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096807217 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081075846 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.074429286 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110621569 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080759829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095257037 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075380578 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10426632 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080498197 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098867535 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075361661 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084473614 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088772706 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082900271 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101143264 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078058499 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.104347864 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083129542 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101673757 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085601342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.10493564 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076863104 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097611375 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074795863 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083955895 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097802202 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084556746 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089659347 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080658619 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.096873364 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083727989 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103015412 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079695503 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099618728 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086272138 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101193107 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080592104 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074220187 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098719209 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082196761 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105458192 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085604662 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098284819 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077416684 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093284047 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082401712 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09946547 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084307927 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083151645 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09858386 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07216109 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096180125 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083085042 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.103961004 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07779575 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095480629 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.082904857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094906081 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081679991 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08325822 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0967655 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077407632 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100007035 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.079949105 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094000258 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088481069 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.097176853 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080972346 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081206009 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105161737 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080092609 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102081265 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080756769 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100807031 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083462577 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.095017821 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078224417 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097474321 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.088864774 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.097480413 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077104712 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075288901 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101700315 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.075587457 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100002485 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077066326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.097762983 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084958616 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079295497 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098872415 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079085963 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111690649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09109993 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101671764 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083536853 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106233098 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082879827 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097722656 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08258877 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101495216 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083773761 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.103081218 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084235823 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100700156 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080706924 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.074351568 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101968167 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085884625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094751134 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080391246 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.094337286 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083014641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.103168621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08409601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082827764 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097504499 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078017811 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105873764 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08114332 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099791485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077159516 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100315876 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088457533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101383012 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085717665 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105308872 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082215875 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076471003 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10583054 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079493861 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.102060715 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076677999 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09321795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0770587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102541225 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081683204 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080169028 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090014988 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085331771 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104789782 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.078334813 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.095476883 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083348499 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104955869 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07939148 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080742928 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09957357 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083932693 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109857562 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077895982 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099847712 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088229495 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100709653 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072310893 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102119338 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080994407 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094659225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081015841 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080354027 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098897366 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085065406 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101010795 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072273243 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098389895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080987359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.076169071 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094685323 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08479897 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100753281 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079946154 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10619076 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08464409 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103284068 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082679855 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100697371 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084779 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102009202 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082015756 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102115773 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080921825 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.077440431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.099045015 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077360129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097848255 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082673445 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102481506 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078437136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101798696 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082676214 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078334305 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099524346 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084054402 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097945513 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078971487 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095081972 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082214989 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096626067 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.078913642 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081196741 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095437816 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085912302 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100061236 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086156645 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096907543 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075199824 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101193734 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081612651 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.084367644 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102533048 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085452312 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097950581 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082238623 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.099604271 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087608545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09428928 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088157993 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102964569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079183814 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.099963883 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.078842698 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.079984748 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.095421752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08081447 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102752459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.078881316 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100473253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084658174 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098796091 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079644129 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079522472 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10250708 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.078478943 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103276833 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073260884 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09524521 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078526539 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082574924 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104703548 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083919755 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099834291 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081455398 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103677575 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082239973 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093353048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096610092 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103546708 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084316835 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104727382 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078550762 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.079786096 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106736573 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.072389679 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099759425 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080271991 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094233421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087109976 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102439198 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08767938 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.078052693 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.096431695 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076408374 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103462926 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081119164 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091348627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081034488 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080967639 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0988584 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082135717 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102347601 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.081053409 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103425633 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086325934 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099907937 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.080503132 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101355921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076451768 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07711163 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.09581853 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082234924 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102872193 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.076651213 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075615151 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101763182 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.080519206 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098022587 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082754552 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098306112 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086709558 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10106749 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081783197 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107348132 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.073491757 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.081224514 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100732394 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082681528 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095941235 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.083103137 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100586852 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085740421 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105277115 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083334226 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097248348 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083538511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080245352 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101599149 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082944826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.1028417 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.077508932 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.1040558 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088131952 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098318669 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081710478 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078254072 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.097806218 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.083668119 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103560294 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.081859958 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104693197 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082627128 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098987134 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086349338 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101270641 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083316958 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103302899 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080994838 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085104798 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096838106 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.087939753 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097514611 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084850005 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098367026 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.076908383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100789449 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083892717 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082369383 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102203252 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084488371 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097187824 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.078161422 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098051108 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.081536588 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106876043 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087491736 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.099913678 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082519496 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.07663929 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094588731 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084927217 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095353411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081068999 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099652734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086477426 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.098661727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.080470004 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081491905 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.105917079 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085251268 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.102642387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.076579457 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103376542 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08581681 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100091715 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080809825 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097358308 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086257914 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.084661548 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099985206 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078642809 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10682697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.083770791 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104368004 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080739757 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097650134 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.079247354 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077903387 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104033442 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.080534546 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104332289 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080918439 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10216314 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088915456 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097456132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.079398121 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107883235 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083891898 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105748507 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078170685 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097371847 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086223311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085723755 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097095793 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078257156 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095574532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081225514 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096453316 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078039545 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1073934 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0872217 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099589348 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082585049 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081615441 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096883768 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078483418 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096815824 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085638813 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099753045 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08961468 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.077898656 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09749755 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07748436 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102372883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0828367 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.101571032 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.076416484 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077541675 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096567773 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.081415801 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.105728573 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082735366 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102740155 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082947931 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100285099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081287677 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108126552 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076301477 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.083091498 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109469439 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084993753 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098841541 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085313283 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107523134 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083988635 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097033218 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084700447 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101177756 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.079598868 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104286915 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08588468 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112994023 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082552737 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097581366 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083265894 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082118549 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.098129778 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.087383531 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104821412 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08578185 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.104293274 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081111515 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105267404 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082316989 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104527028 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.081739279 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100782302 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083513916 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0795129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10161039 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.078157621 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105140554 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085351184 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103455246 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08684549 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078478773 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109311252 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.106348797 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084612204 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076410137 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.098171118 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078664397 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097261569 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085213978 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077492733 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101048602 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081513294 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102346879 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079747649 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104934875 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.082058872 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105120378 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084247663 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072953394 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099978007 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081822946 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100100375 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078480756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102927274 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086378812 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.104681369 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090465733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079498368 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10062212 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081361604 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100082756 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079196045 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105551409 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08361705 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.081115879 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.098140044 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083319714 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105694681 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084050163 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105214461 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086644164 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101622119 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.087962048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107307451 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077195915 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075977488 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104915026 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080035794 seconds)
  done (took 54.699315791 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12463837 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104794721 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074434408 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095408531 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120091899 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078718522 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074569424 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099526551 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078634389 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107772767 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074569087 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094986697 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116065976 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101789419 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118308744 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109676146 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074833123 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099555052 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074809904 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098151229 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095490933 seconds)
  done (took 2.853911718 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103222741 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11348098 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09060215 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117172224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106339961 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093423931 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110576739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113583583 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096658085 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10662367 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116521468 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093372498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.107120888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106642594 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087359761 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109461115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096770353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106639684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113903447 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090957184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110046895 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111273091 seconds)
  done (took 3.142023459 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090107473 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082240615 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103451551 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.074071958 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102858351 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.074335373 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108154596 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.076499188 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086921405 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.097138854 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.077086911 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.097242356 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083168067 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073864118 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097861775 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.076309731 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150865085 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10743989 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08285302 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104987951 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077446726 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.100879692 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077329906 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077105983 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.09807097 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093387945 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105009394 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083573776 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102387374 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.078029665 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.083238643 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.097026591 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.080222893 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.100101356 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.078277988 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077677343 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102951974 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083519903 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.097863223 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.079967565 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099923321 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.079015737 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084419411 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101087136 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079963712 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097406565 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.080851072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102792815 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.07455138 seconds)
  done (took 5.260752569 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115003138 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132735082 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103529137 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144588521 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118461729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092843885 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104714352 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142175299 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077798542 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081096495 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120997532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117686826 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10307747 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09022937 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107281893 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0831 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105223045 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078293057 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108729766 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080107366 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109240133 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086408951 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117957592 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115170743 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088016038 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102521775 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078995688 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110517438 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114830754 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089356198 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109398356 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090461189 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119020019 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102220084 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080280833 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.1061289 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099483889 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104400111 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086145526 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098046936 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086030939 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109374232 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086934657 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120938329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10451659 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085257516 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103878147 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.076912009 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11605875 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086232222 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114733956 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118138984 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088024704 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104976446 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089479391 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118978292 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103746184 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08203744 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.108342605 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095122308 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097677037 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088446676 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116445591 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106567099 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092656091 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117235973 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10541583 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088925723 seconds)
  done (took 7.908434031 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113415704 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109763122 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100352602 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120307968 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109181056 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08838306 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109402146 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088754774 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109402065 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11632492 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0891417 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156700251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08622756 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115477239 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109355333 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088527673 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10883181 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088302575 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109705651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089587922 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109322363 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120645069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089127575 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121393847 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121644438 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085551965 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10952607 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088777448 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121089395 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108388409 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101238754 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10964868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089036014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121457472 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122575153 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10964988 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083947125 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088913102 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109383181 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109527368 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086441642 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121024076 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089404613 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106615416 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088332894 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110222016 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120627734 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.102264323 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115602335 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116336197 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088699155 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121007191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10958425 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089375261 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1209029 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129133543 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099407483 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12071405 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110072744 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100665334 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120642357 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128664193 seconds)
  done (took 7.473099547 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112662707 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116394746 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121093276 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074984417 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098541393 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088209288 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09868885 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077902298 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114953334 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094888604 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118187477 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107859913 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092172035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118466276 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107450206 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091815995 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108612645 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088133346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114777511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108274272 seconds)
  done (took 2.902755056 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.089543572 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121507487 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.081043366 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109205475 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083363878 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108489451 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082278431 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104111359 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081103733 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104303466 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093689711 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114504431 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080670144 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109130281 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112754716 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087658511 seconds)
  done (took 2.411374119 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101349804 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12274527 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.104960844 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106915908 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.078316971 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106569827 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082902196 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098655753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076742232 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118279382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086503854 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108283352 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083088965 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099492531 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.08149308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109784988 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076642037 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084199392 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104044905 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103833842 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106921254 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103650526 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084510819 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.082259014 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104616092 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.105842691 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087137606 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078306395 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100226186 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083288326 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104257668 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08874027 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098655663 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085001211 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10027002 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077843202 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104424594 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083927764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108288338 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.084068427 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099579344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.083483556 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083158787 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10354942 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07630769 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105016332 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076241805 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108339079 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.082088753 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105583708 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.083625127 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11010249 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088023613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.113416398 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090805919 seconds)
  done (took 6.072765789 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095499499 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106466313 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076093403 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077378051 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105602228 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083068899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106645105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083071746 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104100864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077904395 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104408701 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08573748 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103930968 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085446358 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104166475 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085815166 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07547271 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103452296 seconds)
  done (took 2.523920846 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087236663 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080458045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109430497 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080208521 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101645097 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082835948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097883971 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078938266 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078290722 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101368779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080823663 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104245395 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078902643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.103712793 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081434925 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102259638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08297622 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078918081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102014384 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075476187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105030943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078691605 seconds)
  done (took 2.836077926 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119967785 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121131132 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.088655665 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.2090452 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.123026427 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.10668474 seconds)
  done (took 1.633192814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108825781 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140223583 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081986485 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105083546 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095304298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107504454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086079697 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106533151 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120358397 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098463626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1076698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120648508 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099060634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117966392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115567148 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094324166 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107219918 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106236384 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082196838 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129485107 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085774259 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120641834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106980717 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086052431 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106896038 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096804476 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120845577 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120269492 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085526292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120331851 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116681606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08543605 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121628259 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120643472 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08360966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120269045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106251685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108694407 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115207949 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11890191 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08350781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116279914 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120973961 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092849392 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121041539 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085397415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114382562 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106721577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085933786 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134869992 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116958003 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118096242 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095795347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120244531 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12020676 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134849298 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099456933 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118788172 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11640826 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118389519 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097103144 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115925877 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118078073 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098896577 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115488425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118196142 seconds)
  done (took 8.032797786 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122780617 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10457315 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085669459 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120569084 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118897567 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085716941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106781406 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085692566 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106638733 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083537932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154277937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106610185 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118783032 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097625308 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106803926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107163269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08631496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119161925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083003173 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135297456 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108024851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096806243 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118814758 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118877901 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121052033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095388111 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107152632 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086036538 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107168157 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106746007 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093004184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107846316 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097049454 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10390431 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118160971 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08617585 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107819511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093171629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108180578 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115608585 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09782294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129634684 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107223414 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087243075 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120465428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106835961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086394843 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104226608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086661184 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10345978 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099584081 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120767592 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120006663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119518702 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085730471 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107860475 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086644578 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107153851 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085697771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116189133 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118550879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085911252 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136100379 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107439725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085974266 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119247802 seconds)
  done (took 7.836369306 seconds)
done (took 149.45018537 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099102501 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135839193 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094939241 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.183799403 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081845628 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119924864 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135213589 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09505859 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.102658421 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081449437 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102586212 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082937145 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156622419 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10290899 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080597043 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105131802 seconds)
  done (took 2.629606102 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17854389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.289453477 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09852805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101552038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086049948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080886358 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.102325219 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089613046 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104529023 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080499605 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102439212 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082416071 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080506948 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103410219 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082740905 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102298899 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080694047 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.081552405 seconds)
  done (took 2.802650609 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112515195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.222467473 seconds)
  done (took 1.21347299 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119507673 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173290541 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27043176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150102119 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132653804 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095061856 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153188926 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123490341 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202459113 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126328808 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10368703 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109757143 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135712192 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091796212 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111567198 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088069838 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137748867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089081649 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112862452 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088789233 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135071726 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080604396 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113374879 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088400129 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185530656 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124643451 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102671408 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080892341 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088511219 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11129029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086984636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115508999 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124674669 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.146259404 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093376093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.167849906 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.088748561 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.108201106 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0899804 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.108288235 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094847737 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113896358 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095303241 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109817373 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.081257745 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110057226 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.082286532 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081042555 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112155304 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.088927747 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112728356 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.087211618 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167165542 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.322606106 seconds)
  done (took 7.395323564 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.802882487 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14932239 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086553558 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.869448574 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134227838 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123041228 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770434696 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131537969 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227763544 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.810511122 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101275435 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122448028 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223404119 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223863482 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93847539 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303477554 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.683744509 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123525001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113894306 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145671884 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11587894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134706147 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104085066 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.423504037 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110427446 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08658663 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115165688 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094568592 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154843285 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109282492 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089374634 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193652921 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.237710401 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17836148 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111073626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085488614 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107777527 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.161971955 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239621499 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212692744 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173358317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082027518 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108357343 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.096159327 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127946426 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082460024 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179691528 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.165986813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.166790026 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088370988 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119041351 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117217439 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.094501332 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155698255 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107294414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311741195 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288343595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108928064 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093916775 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124472567 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259779792 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085173277 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.220471938 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11152105 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210384027 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085952301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772542342 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159982773 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10808269 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092932051 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115063522 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090492747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118238769 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161700763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400509993 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098222405 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112547389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084581576 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225845627 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086689231 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084654538 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178212675 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087163182 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115717894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09872845 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119481698 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.163820401 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.219560592 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1203849 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093106043 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113101085 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097592567 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109366999 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207609532 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215610165 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154822529 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208697362 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119326953 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158165295 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159613917 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117845598 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.162663841 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091929388 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124065488 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118708883 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189282559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136964219 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108467097 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09009055 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115384358 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.11725927 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111363458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093213296 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184118058 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456200171 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.159800006 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083041133 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112495282 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094941989 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178404345 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093127194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260273434 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093840349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16075817 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114928615 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083084534 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11568765 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158620462 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12089503 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093368296 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119986716 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115478161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.223258808 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192600722 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122587337 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214678016 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174848337 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116250154 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166482274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116702369 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163350085 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094354519 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119113103 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086823053 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767678305 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121612731 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093349781 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114836897 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159021858 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108122803 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086040118 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109668736 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082404714 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793951485 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088589107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106330683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086682229 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115825054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093076521 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11450217 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091576401 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156217854 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225871133 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119206472 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092814613 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109205993 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156424662 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.08671183 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109624682 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085900495 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109541769 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094618199 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112601927 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086913089 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165915467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153903884 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217192511 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58582553 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086012627 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086495542 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224608383 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109167304 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256580944 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117149341 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.218729123 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160701188 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083559278 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310843737 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16293086 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182229075 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088666562 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163963022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105720455 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091765425 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180048735 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085725159 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116034205 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153961122 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099363151 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120179106 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.917263664 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085972459 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2220681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106022857 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163100094 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08700875 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118976123 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286497013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08610296 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125655771 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156978893 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089767977 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110231305 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.842835227 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10991599 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095014451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116467093 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195349023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183140852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09335698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11653793 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095009804 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156821223 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229841429 seconds)
  done (took 42.223546886 seconds)
done (took 57.137879538 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280009523 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209857154 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262673417 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1638619 seconds)
  done (took 1.898768459 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172718786 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.121974525 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142360113 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.079912381 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152773071 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103017693 seconds)
  done (took 1.677243748 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35961801 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264685966 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211427917 seconds)
  done (took 1.739452654 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.245152748 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.264828707 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322814139 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.38777924 seconds)
  done (took 2.231487206 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199429035 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09748989 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119882268 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11260136 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165103823 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.19966156 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138240048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145617277 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10456752 seconds)
  done (took 2.238700204 seconds)
done (took 10.690504674 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.27553702 seconds)
    (2/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.238681803 seconds)
    (3/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.225538831 seconds)
    (4/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.145215874 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100859467 seconds)
    (6/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.168023997 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.149648552 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.231574803 seconds)
    (9/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.233016276 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12593324 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.174620862 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.095450574 seconds)
    (13/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.195936874 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.114018449 seconds)
    (15/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092966137 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138434596 seconds)
    (17/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202232068 seconds)
    (18/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095946847 seconds)
    (19/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094178578 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112909858 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090775853 seconds)
    (22/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.22301812 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11271676 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.200384128 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.233689489 seconds)
    (26/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.089373708 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.259105692 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.199550517 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.229249883 seconds)
    (30/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094273311 seconds)
    (31/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188836112 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.097075976 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116105618 seconds)
    (34/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070034503 seconds)
    (35/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113134971 seconds)
    (36/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.13792106 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.182030662 seconds)
    (38/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.194646163 seconds)
    (39/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120177312 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152372781 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.113802151 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106981649 seconds)
    (43/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.23233245 seconds)
    (44/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11609146 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.103523408 seconds)
    (46/286) benchmarking ("sort", BigInt, false)...
    done (took 0.224195032 seconds)
    (47/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.182578314 seconds)
    (48/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.199536571 seconds)
    (49/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131556974 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.150773437 seconds)
    (51/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.094332328 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.165653922 seconds)
    (53/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102873895 seconds)
    (54/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207974983 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10801278 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.116638194 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.193974702 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.104282998 seconds)
    (59/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080902766 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113143537 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106945688 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183706204 seconds)
    (63/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.224200711 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097140647 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111744483 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.211108098 seconds)
    (67/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148879956 seconds)
    (68/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119715939 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.069348379 seconds)
    (70/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.121279837 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.093382429 seconds)
    (72/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112477203 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.164900399 seconds)
    (74/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174861138 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.116449428 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.081539011 seconds)
    (77/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098052159 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175093917 seconds)
    (79/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10740612 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089391429 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091982486 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.105586908 seconds)
    (83/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.134770639 seconds)
    (84/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109780802 seconds)
    (85/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081025309 seconds)
    (86/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113382657 seconds)
    (87/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.110464174 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188902582 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070246598 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132639432 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.072187433 seconds)
    (92/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131528232 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167671151 seconds)
    (94/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.137446478 seconds)
    (95/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.080042153 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.095403504 seconds)
    (97/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09187939 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114610978 seconds)
    (99/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110691372 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.187181597 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.104923527 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070338877 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.081891864 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.167541118 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081435346 seconds)
    (106/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10538208 seconds)
    (107/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080264032 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132149671 seconds)
    (109/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071680495 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.135123438 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081003763 seconds)
    (112/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.177724052 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081550329 seconds)
    (114/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122248096 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.081132987 seconds)
    (116/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070765128 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115651671 seconds)
    (118/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.082315438 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.13075993 seconds)
    (120/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197953308 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082211465 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.1851598 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116175025 seconds)
    (124/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.070359037 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08971032 seconds)
    (126/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.097470636 seconds)
    (127/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.1242362 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.11257111 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150706852 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113540094 seconds)
    (131/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069173799 seconds)
    (132/286) benchmarking ("sort", Int8, false)...
    done (took 0.191751787 seconds)
    (133/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095240565 seconds)
    (134/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.174384604 seconds)
    (135/286) benchmarking ("sort", Float32, true)...
    done (took 0.23497348 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115481617 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.191604467 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082581604 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081798014 seconds)
    (140/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.166871457 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090146501 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105979133 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070006532 seconds)
    (144/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093747017 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.093574635 seconds)
    (146/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09147163 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117282648 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10859419 seconds)
    (149/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241311575 seconds)
    (150/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.178372505 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089401198 seconds)
    (152/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094448941 seconds)
    (153/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07149471 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117532839 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.109475115 seconds)
    (156/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110452093 seconds)
    (157/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069839078 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088626599 seconds)
    (159/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.094336537 seconds)
    (160/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090415932 seconds)
    (161/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.102535708 seconds)
    (162/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094490947 seconds)
    (163/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080840366 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.13492639 seconds)
    (165/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138956648 seconds)
    (166/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.151517221 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08660105 seconds)
    (168/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.094209696 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.085594538 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.099435592 seconds)
    (171/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082512911 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.118052548 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104335579 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088372682 seconds)
    (175/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148810693 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097738749 seconds)
    (177/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083684689 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093356145 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106772514 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.114664324 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124789062 seconds)
    (182/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.086180929 seconds)
    (183/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157502446 seconds)
    (184/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083953255 seconds)
    (185/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114143643 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.227170719 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072381446 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081077008 seconds)
    (189/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.194411088 seconds)
    (190/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166734622 seconds)
    (191/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073632204 seconds)
    (192/286) benchmarking ("sort", Int8, true)...
    done (took 0.225931911 seconds)
    (193/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133517791 seconds)
    (194/286) benchmarking ("sort", Float32, false)...
    done (took 0.154591296 seconds)
    (195/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.096733813 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072913935 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106179042 seconds)
    (198/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069817395 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.091992678 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114232293 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090752172 seconds)
    (202/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.119375516 seconds)
    (203/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.126996161 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107282466 seconds)
    (205/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.069902952 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.080674495 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.107736915 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084199469 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.106421234 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082930414 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072567521 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184240543 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134078161 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.082933003 seconds)
    (215/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.107915611 seconds)
    (216/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084085112 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072688187 seconds)
    (218/286) benchmarking ("sort", Float64, true)...
    done (took 0.236332853 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16717549 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073273557 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.099735413 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088269252 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10783394 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075836611 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.083990015 seconds)
    (226/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.099481577 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070512529 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.107825223 seconds)
    (229/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072059963 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070282413 seconds)
    (231/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.094575823 seconds)
    (232/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084652984 seconds)
    (233/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080157064 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112466716 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.082201368 seconds)
    (236/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.179703073 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082129512 seconds)
    (238/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120462954 seconds)
    (239/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072441926 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113514281 seconds)
    (241/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082079898 seconds)
    (242/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07121209 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116147775 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095085478 seconds)
    (245/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239290536 seconds)
    (246/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109071583 seconds)
    (247/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083712143 seconds)
    (248/286) benchmarking ("sort", Float64, false)...
    done (took 0.177060928 seconds)
    (249/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165771752 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109840168 seconds)
    (251/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084109866 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113322757 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071220719 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07246225 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095620216 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071002782 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080894615 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106758391 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.090082579 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106623354 seconds)
    (261/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081701209 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.080780299 seconds)
    (263/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109547392 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071533863 seconds)
    (265/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071389175 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.105574986 seconds)
    (267/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086567155 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.185908562 seconds)
    (269/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070333881 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.115738499 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.107736607 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120789169 seconds)
    (273/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081049358 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.106092253 seconds)
    (275/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072713514 seconds)
    (276/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.06978489 seconds)
    (277/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.108855701 seconds)
    (278/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07146454 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070457297 seconds)
    (280/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.108908562 seconds)
    (281/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.078337758 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081130459 seconds)
    (283/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10737841 seconds)
    (284/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082198933 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108813656 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082069144 seconds)
  done (took 35.478228794 seconds)
done (took 36.393311983 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100267815 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148345302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091987742 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135473413 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.095316541 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121023242 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091165486 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.094881781 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11926382 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.097368323 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.118780458 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072801591 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118361514 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093141507 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118102684 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113438421 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120689909 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089105331 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.110333245 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081941113 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.085899258 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.107241744 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083982101 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.097364156 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094007129 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090177843 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.113035921 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093572708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.108085657 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.082376815 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106757388 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.089704895 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.082219671 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121343336 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091673371 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111111447 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095093295 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.116878359 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083903499 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082811011 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115647529 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082710937 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114283326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090701698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083696155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105492895 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085457233 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121800882 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114182576 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112600649 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090283148 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118259142 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.092508255 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089743603 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.106219876 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085727057 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.107341361 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113938823 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111477175 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087939546 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.090220021 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.115033263 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.081105437 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110368774 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085330852 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118122925 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092811783 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.081502401 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116962076 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087899597 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107612431 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085660209 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.106493039 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.082222285 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091860084 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118256857 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081111053 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.10877671 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089516941 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087447316 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10613341 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085220087 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109696105 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.084428341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085250062 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097555444 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081420759 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114006083 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.081751032 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086061399 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11294617 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088871945 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108590802 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093817894 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.106429186 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.08170156 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082369597 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108373744 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08376515 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081617573 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106682981 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084839889 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116489538 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08378901 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.084214403 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118964748 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.083254831 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11394841 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081917211 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106727678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.098243935 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116671796 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.083691242 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088161111 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.106330525 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084234005 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0816386 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106535292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082273027 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107096944 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084017282 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082408656 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109698931 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.084292129 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121754284 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.082178253 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081705956 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109231533 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082238705 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113536642 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082710696 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083063677 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109059987 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080762327 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110809755 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.082547017 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08412556 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109872402 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086081422 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109938907 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.086173228 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.111710499 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.083697475 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082220944 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106711833 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076472026 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112193922 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085423301 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084345123 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108434063 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.084305302 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082083208 seconds)
done (took 15.818171145 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086467986 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.181345882 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.14441092 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.116532061 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128689535 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083138165 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119171851 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114187895 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.109173746 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139319677 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106287482 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127277868 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121202602 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.106859176 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082458262 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086289146 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.108621096 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097901447 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146588112 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128782022 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117868356 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.107376354 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.112412169 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.131202353 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092071047 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134368172 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08396997 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112017265 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086538246 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123981641 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103396936 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111800929 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083093994 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130234557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100349012 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115372204 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082756893 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090234748 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108302547 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.083168426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132368657 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129798193 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.089152811 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089208283 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111897893 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085313677 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109846619 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091620578 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120091571 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087054516 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123233809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113180426 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111376059 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092508188 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107084474 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09371298 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118152269 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.085401528 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.12739279 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.086161772 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082371668 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.112021386 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.09812621 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.133899195 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086702538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117417815 seconds)
  done (took 8.143763526 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105065252 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137891812 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101476306 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1265705 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083209032 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108242496 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084398174 seconds)
  done (took 1.726228894 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086587322 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109841998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134456401 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109890343 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131671626 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136266132 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088732374 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083829456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.128787664 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08496908 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134232225 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12397712 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110654941 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091977607 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138120707 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.083480873 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137003225 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083902206 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112554038 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110656625 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112597806 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102230062 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.112332672 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.084041917 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102397174 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110893562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158342474 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089275428 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081693774 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.113340692 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082563764 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147592322 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102087106 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117311737 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083745277 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12907915 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102535577 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108302135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.100655471 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114959241 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101630572 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085031792 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110779849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08241223 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114347313 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098018614 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113577078 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.085724904 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.086768525 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133746959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085693036 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127144554 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083765412 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114266433 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086383489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087635494 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.119265277 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.085233651 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134568281 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082319095 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130800233 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103990264 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128346923 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.104033209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112338657 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101788481 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126824269 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.086992881 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085845969 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.113755793 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104210223 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.107837949 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.087285379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123648843 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.086852556 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111024746 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136934703 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085945335 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121131832 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084722662 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110994588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085723579 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137309252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088204442 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08460621 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113918726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087213718 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108251145 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083638495 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115507701 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.082560927 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086086914 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115676075 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.08523152 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115286154 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107368431 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.085337359 seconds)
  done (took 11.218763115 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090685478 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085026309 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114159782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086358651 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111423268 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085508705 seconds)
  done (took 1.565437447 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117609162 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112239903 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098837057 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114822995 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127089013 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13537001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109927141 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120901834 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.102299131 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.123076157 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109423543 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136891894 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141087565 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.091152118 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134706017 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.089590633 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135741373 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091661204 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095981465 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117611165 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101907245 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.115602238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090687271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130455951 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094721529 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.115863542 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091301257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.122133771 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095917242 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120501914 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.090252033 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120354122 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090086831 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120899004 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110346243 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116274744 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089111661 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122835196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090876632 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12094099 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112028806 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116052902 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.095904049 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122807888 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093783407 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117493688 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096410354 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11716435 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10947023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122238304 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09694539 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114974564 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094517361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124176968 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090724413 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1200033 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096490149 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137510139 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.090405463 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116998615 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.087078481 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121894415 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.094266343 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121130349 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094230704 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123180218 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.090903772 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116938138 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091177646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11537182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096766895 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.112656789 seconds)
  done (took 8.904507239 seconds)
done (took 32.531572442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68621755 seconds)
  done (took 1.672900864 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.819663866 seconds)
  done (took 1.810146565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.501451358 seconds)
  done (took 18.521447011 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.463846756 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.55346943 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.954712614 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163362892 seconds)
  done (took 3.127644311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962935497 seconds)
  done (took 1.970749544 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2812554 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231277074 seconds)
  done (took 1.512302864 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.849231955 seconds)
  done (took 1.854804314 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.430416762 seconds)
  done (took 2.432602873 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322839003 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154558851 seconds)
  done (took 1.488070904 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558312963 seconds)
  done (took 1.566479683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.666473125 seconds)
  done (took 11.672873666 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238548663 seconds)
  done (took 1.248669536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28719481 seconds)
  done (took 1.288394042 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.646009851 seconds)
  done (took 4.648732684 seconds)
done (took 55.80996502 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094831368 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097625056 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123979798 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09483136 seconds)
  done (took 1.408975332 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10050627 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.091151397 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.125694473 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090670109 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126856937 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090722023 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120668385 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165930049 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091049809 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09243318 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118064751 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090406018 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120623717 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092777371 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116030249 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.0945982 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124904195 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091182352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122202715 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09231127 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114620124 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094325649 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120731687 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090103916 seconds)
  done (took 3.587387435 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096368261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08953518 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118990587 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089113562 seconds)
  done (took 1.404416342 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095992745 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102128728 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.128013184 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.095292801 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128285628 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.101564941 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114093984 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087812159 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116116295 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095774633 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112193448 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109805422 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128220125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095084782 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123561875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089192582 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085646269 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128593391 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.096120238 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122735258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087895539 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121427616 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086112142 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129635335 seconds)
  done (took 3.593108993 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16607917 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124250185 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108815552 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118004243 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.130321774 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137620936 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08274614 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137340474 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083033235 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126178159 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088375108 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162426064 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096915658 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110347604 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083592099 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.083247308 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12303472 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095916332 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.113505159 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09711606 seconds)
  done (took 3.278596703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093756777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087247275 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109845732 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086554819 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120655936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090749103 seconds)
  done (took 1.607380943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091765926 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084974387 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115768714 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086518414 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116112948 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084490801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083577314 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111628218 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085488272 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109948548 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086903218 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084062997 seconds)
  done (took 2.160413546 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50315862 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115725881 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.08732604 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109914288 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095484719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.110513647 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101773943 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.086032134 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140747484 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.084029606 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11297514 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08755406 seconds)
  done (took 2.656081476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205481378 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094991574 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259383895 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347035303 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157085958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162566505 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27803583 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160538265 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181680872 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136230664 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191129456 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128190037 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151908613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176056857 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13776461 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12625649 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172235118 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223316448 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119362477 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201393955 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159395899 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164539803 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177221778 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148911003 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135334922 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12869665 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117552276 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099043256 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169139966 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166213592 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196642586 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119780087 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137930266 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195087403 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228868506 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175091344 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27599085 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105102016 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177021453 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164966459 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221250784 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137944292 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19002936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151903562 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127213394 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177780286 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125994893 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175801444 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128856903 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137935522 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177353798 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173370161 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174169751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13284399 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296700171 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120587791 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144029253 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178391644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180565275 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184837423 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164046498 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115945998 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179653764 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178318641 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174206523 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140888611 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161278939 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095556683 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168833324 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189844675 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172166818 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1589791 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.206880978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105576299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15996253 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164933182 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149418492 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173669151 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130263323 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117691154 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146674871 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107036198 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12562679 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190351137 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094137199 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198272245 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133610374 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168879026 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19836952 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152900408 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130128446 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159230942 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160597939 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144269361 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086341171 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143807839 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148781714 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151808733 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102960698 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152859426 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138554182 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098004673 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149188783 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093057514 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15679242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123619516 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159970147 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132847202 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122125818 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160986181 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119791794 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147176124 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165324456 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180828265 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130395504 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101760244 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190289149 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15487698 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131869949 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170677689 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181102881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.124334367 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135569988 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164392052 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188893024 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138842744 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184556853 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137474304 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103421916 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13727761 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15631633 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125507149 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154125453 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128455932 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151373153 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186327945 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.094398882 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135787001 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171210022 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097292902 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127516584 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111526067 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13411281 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.134527241 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111298061 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135036343 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152958089 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156589946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123145447 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151736566 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13940709 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18549555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130839527 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.120584281 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145343601 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089749618 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201602878 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180202494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099740162 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191983846 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163938199 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217981624 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159646651 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102100023 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174416194 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098392899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116915321 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162465544 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157899707 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158407776 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178245293 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188986681 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163460109 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149203545 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1171223 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160515367 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160951534 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152845342 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.106543545 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158274231 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154579349 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119466432 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094160727 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125680715 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112218637 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128459996 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102036025 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20471077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15930258 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182228424 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156764855 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111900269 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177718984 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123968577 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161413767 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168297401 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109341208 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179639059 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176699129 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163807429 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140346878 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170672644 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089133874 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122331754 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102365237 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16045383 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131715406 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103176586 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140482174 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177953272 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168151924 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14791239 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196806262 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162933512 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186746815 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118921361 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.136308533 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16472833 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155770394 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.174052494 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107034403 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147419881 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174464206 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110856943 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211600163 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129253307 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164050302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220021082 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.119824031 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128844077 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146645761 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161202051 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110764416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163035234 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14314122 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105892827 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14741207 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.124149055 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095290199 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168397012 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142265544 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172562616 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144119479 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165608751 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096350558 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140855899 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157619682 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115344009 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113621073 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163030253 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17987851 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141377728 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154558196 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140680918 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128289649 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305346542 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185577482 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178834944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133679336 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139997104 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130663587 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157393068 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158193886 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175179604 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145222849 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174602012 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127234639 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132674977 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133353647 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116846398 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148389736 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137420737 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101220498 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150551861 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.133821132 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172401603 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111891545 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15876393 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160169598 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148036032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113086113 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140881776 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197514527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15503707 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174118612 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.11874402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161039856 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193246767 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123427637 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097881903 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124903691 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175716424 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10099848 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15728237 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180246177 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220123197 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156840655 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133422063 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136172348 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087841223 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156033606 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147017467 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193731099 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140457406 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134025576 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183559762 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113217756 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128777009 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159508728 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280451017 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115631461 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169775643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111105735 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27178069 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095890929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129538395 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156006514 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166358286 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107052791 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.172223409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161868771 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114465284 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157470017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134654978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183900986 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201225235 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165281315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168696677 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12954886 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126496219 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158819582 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172054946 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141422581 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.134892769 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131201609 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178171891 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.18255697 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131026479 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159672411 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158925013 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126993458 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193425941 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103588549 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194222388 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1295043 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161795884 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108854117 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12182714 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155603883 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.17987586 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131486855 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13910608 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154426834 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131299999 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095425297 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149023452 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155444593 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139199643 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.096163523 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169004226 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.122445192 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1306814 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17639443 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129470727 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150846317 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114096126 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135503278 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140669583 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114809533 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134557978 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135312059 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174987143 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127280105 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171633974 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171717874 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161065372 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156670227 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11260687 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667206913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12616926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177694886 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115089273 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179431018 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146479465 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162857734 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156777155 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117568801 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164430927 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148003221 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229121442 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162263015 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155097904 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100269437 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143791306 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139586407 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101670014 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148734394 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159225899 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108924806 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135169184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154488528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140588182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.102139486 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135343173 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179757974 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115445221 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172708917 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176167213 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135487879 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163411228 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166512017 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099211663 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157740299 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167666425 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139922292 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146941385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100715629 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132034756 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176859956 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092960006 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159385244 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15838685 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128079967 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161590742 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131610507 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157586154 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140770984 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130545008 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12824041 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149782919 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124158504 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128286499 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126283601 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123946496 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150556437 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146810015 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09498231 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163955257 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177799797 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092209306 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130331822 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279026425 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154846667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186489501 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110931765 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133611008 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111343066 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145288826 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152140811 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156901381 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098074865 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131074841 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097810734 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164957408 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141070318 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125943489 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181615484 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15373303 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193903877 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135295993 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277822016 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108509088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151708986 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091207833 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127955547 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140498576 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103770149 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141408328 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18523712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179132627 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143558189 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103726248 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124366815 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09427106 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131434873 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129438151 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151171064 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15639337 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140645713 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084258991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142596362 seconds)
  done (took 73.397616045 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209645646 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150442735 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161167435 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218384327 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227898967 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.301113451 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228332259 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253925087 seconds)
  done (took 2.85540025 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090260319 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141581971 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.124119886 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132161431 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113902581 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088673609 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.322944045 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.129526233 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086827821 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.144446194 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130336889 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114998358 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.488117242 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116362696 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.114039501 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080469941 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113600185 seconds)
  done (took 3.635696095 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.29761137 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488735296 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.21485909 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194678424 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179314252 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091385324 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734689262 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090790087 seconds)
  done (took 12.398784827 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115917398 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.108551243 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159165071 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.156618633 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.113357506 seconds)
  done (took 1.773527061 seconds)
done (took 114.754273624 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094713324 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.096072299 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123714686 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097397311 seconds)
  done (took 1.511026718 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100823629 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073090623 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105032544 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07796178 seconds)
  done (took 1.47144701 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191333844 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165514154 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401038345 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074941397 seconds)
  done (took 1.615540637 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110826098 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128781784 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101123298 seconds)
  done (took 1.461530252 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.102312435 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097379378 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.128306912 seconds)
  done (took 1.444545621 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100846988 seconds)
  done (took 1.212674762 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107013899 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136909194 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109009956 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135695491 seconds)
  done (took 1.605659112 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094277234 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096329785 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137843813 seconds)
  done (took 1.441765537 seconds)
done (took 13.234922558 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103682468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423464548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386761387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135424863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694804767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405971402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.002416208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145779874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167095313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088621431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134460991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66977164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02106157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342980368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005326314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.343486291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668769638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117671641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087249677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11719217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986781225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11679984 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0888096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088316145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698863919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.393585713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11916399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.343035019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116596979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096838959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375291691 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117674976 seconds)
  done (took 16.708374973 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094707472 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177583675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099792188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11916286 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096098057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089604502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121232414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08913894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181950692 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117951648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106397704 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117307777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092762205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088255394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138805539 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087785073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118431066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088455491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11747035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089415279 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136484223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089005435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088150576 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117897544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088168806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130749069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089611716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117433249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089651192 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096101126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120706774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089520113 seconds)
  done (took 4.606828372 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141012832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186840233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099305762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153617167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171070184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090790168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196634186 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144333555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153672983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118711648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105702617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118385797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122721572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119371901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107715171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118505151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08934994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118796313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088847765 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118011295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108620856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116474085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089872858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088236452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.119159226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102640149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119053694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088854117 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118043688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097059841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090791939 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118479109 seconds)
  done (took 4.946328202 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092416435 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093305942 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134332422 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105421016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119717736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092772439 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122150413 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090896944 seconds)
  done (took 1.975940141 seconds)
done (took 29.350887458 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107455796 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094252514 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132234338 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.101563458 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128946106 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101271695 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116667156 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100184987 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.101599851 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128161649 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103951592 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.117549388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090064298 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117209861 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10327967 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093138242 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131699934 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.09769616 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132761372 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102049411 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.120789968 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100556928 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127735306 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.102806742 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.132449446 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.103854503 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104795076 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125401905 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089523768 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120554213 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101563068 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.13935336 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091100981 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.133518324 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094119471 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092590414 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120375248 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092899466 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131897869 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100364865 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125486188 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100783326 seconds)
  done (took 5.768857836 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113918201 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147704156 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110285041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113329941 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.0911288 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084034492 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144262265 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08141637 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114265433 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113493569 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.107601652 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079809274 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080976933 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.106419575 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079470351 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078141206 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.112885012 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078290833 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.108970917 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080277133 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082280979 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.106089276 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081936973 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080836831 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.108180137 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083989554 seconds)
  done (took 3.708201586 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095627769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103227663 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139739102 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172391071 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123519112 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127369925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098025098 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136386657 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105248159 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.088507934 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.121336152 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116993785 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136275739 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095289948 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121226965 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103686804 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132410824 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090593559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093519986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138856846 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.104669982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.12980469 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100206039 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130135351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087933432 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092137662 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12305131 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.098975334 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.126377644 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096896164 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125272118 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092623317 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119703914 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100580258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094035946 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.11996283 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107826787 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128635211 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098388691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119942904 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096445551 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090941898 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140644839 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158759019 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089903175 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095164959 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121572342 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097041802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120754205 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106443887 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127582448 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088523917 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.092007537 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120504144 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089914168 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134791748 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09036827 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.11992566 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101998857 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093483758 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.132518705 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092163379 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134593896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089867396 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124697616 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090258423 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.088889479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117512948 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11174577 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124898954 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.129605386 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.121060401 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.089433237 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12619022 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095376653 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094996074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119216708 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103115779 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129299545 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091874252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130167358 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090791734 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091285095 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137215045 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090674137 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120892459 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090074757 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125005644 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.091678423 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089695562 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133858431 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08798881 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123019142 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.102272759 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118449542 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090014509 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095989554 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123559874 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088282526 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132256695 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094667646 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.119741292 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.099550535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119009122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091960297 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097962262 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124068893 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088824041 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124016393 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.095124093 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.119841681 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093470189 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.091493799 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121661327 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.098313597 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126255563 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092091783 seconds)
  done (took 14.019944777 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227329725 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213922553 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.185152125 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261888226 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132960479 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116302183 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210084259 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156282316 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.091041311 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157153618 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166535692 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181106539 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169484559 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179341363 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168883416 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088324517 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138620258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133473206 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213962698 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29248641 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109201501 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.129987866 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159159009 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126136402 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133677325 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097671616 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137623114 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130782548 seconds)
  done (took 5.65621988 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105379707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152949612 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094665596 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14117419 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116105174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120842364 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093339165 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120652182 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103061803 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13414809 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.08867345 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126160605 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096312992 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097443154 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120614959 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098727102 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129765432 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.091179641 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122856309 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09385038 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098893954 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137343909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123190431 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088848247 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.098829917 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118600561 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090238979 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140904311 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119998154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.111503838 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08725964 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128400905 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103104014 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121048769 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.088388048 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09083638 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121739735 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090533098 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120860686 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.088050288 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087774679 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111115753 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087896526 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134673025 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095984027 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115196797 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095793891 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125509878 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090356954 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086637407 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123019462 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092975574 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12230302 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097046385 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090753538 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.120273004 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09241931 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120157883 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096539777 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090858111 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118416852 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087257908 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12412675 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092048979 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.128972684 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093514587 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.116932059 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091813752 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.094012424 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127810002 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091223393 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125644843 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08704226 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091108854 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.123158966 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094853649 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.122725764 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.088468194 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089177533 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120866932 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078752208 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119437352 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.078231704 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092189599 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.118599197 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087877172 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121746738 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.096448383 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135371953 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.090470456 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.126836056 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.090832292 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08814453 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123691692 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086514771 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122411515 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.106825278 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139757879 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088889226 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117439081 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104566881 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092454374 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119578179 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079379967 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128544623 seconds)
  done (took 12.388555228 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128112599 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150745079 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091368165 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138036992 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122783566 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156516142 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095888333 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128554403 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090699763 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139198447 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090350576 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098266973 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.120425103 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103397626 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155766736 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.100125892 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122132533 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104452743 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125711235 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136173582 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13911362 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107893847 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13731635 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.08936978 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126691699 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106189815 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159642139 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104238162 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134236536 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.10816677 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135195449 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.128227219 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141850557 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.094526697 seconds)
  done (took 5.269337677 seconds)
done (took 47.938064882 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21636369 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.455759076 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.217964062 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.140598464 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.239844378 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.24084227 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.229303133 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.223934755 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.488597845 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.218855945 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.442512386 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.873982054 seconds)
done (took 59.135871629 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.284122606 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.381980683 seconds)
    (2/2) benchmarking "String"...
    done (took 1.52536267 seconds)
  done (took 4.069725859 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.822809156 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.215443244 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.481678568 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.220363084 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.219806435 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.514338268 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.033610123 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.712130612 seconds)
  done (took 28.544439135 seconds)
done (took 42.871735526 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.238280592 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.264571215 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.243113427 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.203255793 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.334295099 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.24135547 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.497171805 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.346917289 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.2455931 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.202900014 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.238749347 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.235829628 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.23212959 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.486002911 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.221515102 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.217096263 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.313796693 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.914734306 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.64261091 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.220427394 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.224314591 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.283951317 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222169635 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.222454549 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.285704911 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.227408888 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218221743 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.223476463 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.080371247 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.223360203 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.246885248 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.641309262 seconds)
  done (took 191.787550913 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.218839578 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.316799528 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.437362521 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.247493303 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.791248371 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.418188058 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.364087086 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.872177019 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.240158146 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.250195335 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.521714491 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.220069629 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.564786839 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195901842 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.25243498 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.302992931 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.494277235 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.579794265 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.261760197 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.377017133 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.239921129 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.379655071 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.310219759 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.496725018 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.242285465 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.297664462 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228336818 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.233545974 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.410912323 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.422523513 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.268369519 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.240163685 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891612615 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.075203161 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.222615497 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.235598876 seconds)
  done (took 151.271899208 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.219429018 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.220146933 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21908768 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254908149 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.221523696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816987305 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816059419 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.791056671 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.562027461 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.223781184 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220285391 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.782504084 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525911974 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221871916 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316864411 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236172989 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.22652086 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237723108 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247249517 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225317648 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221430481 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817778107 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.233797701 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.220868317 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403953872 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.239446519 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256145908 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621813007 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.426824454 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224124812 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256018356 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.563181859 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.274859143 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221746447 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607812763 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.743854908 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338471383 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225595333 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256420557 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222649494 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.508550631 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223427314 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.223361916 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226063221 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908693931 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.222961724 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821215951 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224770899 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23928978 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.222630222 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224570338 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.623966428 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.962375682 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224036812 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.224007194 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.22520739 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.223898892 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223234584 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.259195223 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.767976067 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.232842194 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320701599 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226757858 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227271206 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258705372 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.224219738 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.66636291 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225319167 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.454468396 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28260206 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.341155147 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.845918074 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227737607 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327562139 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.349082578 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.224378846 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224264587 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.224819989 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.22595216 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337520212 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225696396 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.6763738 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.407382065 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.244354341 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.754719018 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.325439394 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.225983064 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.66746028 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.224171963 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.226248112 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046694146 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325126536 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.226596178 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.226690557 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225831489 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.680015514 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824979541 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.566236804 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.2303031 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.20143189 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.233003459 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.68866016 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.825466336 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.894319865 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.226754149 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340478391 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.409701418 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.245719866 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.226739426 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.768986995 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.229518846 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282744989 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.230551924 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.625536945 seconds)
  done (took 371.105545553 seconds)
done (took 715.316251003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.85308272 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.849812262 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.9619668 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.838289048 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.801797643 seconds)
  done (took 10.461160416 seconds)
done (took 11.618178795 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.425918913 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.426459661 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292029599 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428634377 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260655021 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448371988 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408051945 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.248972019 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336800289 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.314820059 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335319836 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.283333737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264464731 seconds)
  done (took 18.630512787 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562229059 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608302106 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291503182 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.557332034 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268569637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549727994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433157469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445384201 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444516004 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.243714231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242457757 seconds)
  done (took 16.805432902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.559639494 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.562014041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296013049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564320801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271306371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55872005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436353988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.479851134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444867613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244560678 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241888253 seconds)
  done (took 16.818347912 seconds)
done (took 53.412572208 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.256458983 seconds)
  done (took 2.415143157 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.27409173 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.446573626 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.260663762 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.246559991 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.242479725 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242972973 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.247302102 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24063926 seconds)
  done (took 11.36207597 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.237410055 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.239246805 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.234234888 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.234822653 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.23825921 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.238276004 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23904107 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.234622765 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.236195912 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.235672303 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.23927122 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.236750651 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.239959882 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23846816 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.236246046 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.236437257 seconds)
  done (took 20.955591192 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23790388 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.236255316 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.236970962 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.237412679 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.2368638 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.237175558 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.237882515 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.23747077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.236000337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237411855 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.237657221 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.236063502 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.237685227 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.23727969 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.238050859 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.237588797 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.237190345 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.237414523 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.242667819 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238369213 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238559902 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238684513 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.238343478 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.238772981 seconds)
  done (took 30.868700668 seconds)
done (took 66.761502923 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.931307297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.061943722 seconds)
  done (took 7.154447943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.298885932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300168803 seconds)
  done (took 3.763008927 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241629336 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240796978 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.241484889 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.2423014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.240454167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.242142103 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242220616 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240606979 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.241525629 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.240417347 seconds)
  done (took 13.575493275 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.241806425 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.241260361 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.239068998 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.243395036 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.24101911 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.238404296 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242802471 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241572999 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.242094323 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.238858041 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.242328201 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.238733487 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.242346428 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.238585462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241991636 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239727692 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239371595 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.240608776 seconds)
  done (took 23.497038774 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.255911818 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.263770117 seconds)
  done (took 3.683212712 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.370245846 seconds)
    (2/7) benchmarking "second"...
    done (took 1.281463506 seconds)
    (3/7) benchmarking "month"...
    done (took 1.3483938 seconds)
    (4/7) benchmarking "year"...
    done (took 1.337814173 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.28093289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.746132736 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282235463 seconds)
  done (took 10.810212008 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243974094 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.426742895 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.542402667 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.816542426 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.243969259 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246604955 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.121649902 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246035362 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248444638 seconds)
  done (took 14.299658136 seconds)
done (took 77.946302546 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.262950267 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.236653213 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.699397115 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.245411783 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.27262283 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.534389799 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.271238026 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.359810608 seconds)
done (took 38.048246764 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.243526059 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.228003835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.122634395 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.245942852 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.372361841 seconds)
  done (took 19.1341972 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.355330479 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577592443 seconds)
  done (took 5.097344716 seconds)
done (took 31.641017077 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244327125 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.243313969 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.242962524 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245060023 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.241834325 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.242219556 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242658674 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.244891347 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.245788397 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.244751623 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.245414208 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.244928602 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.245209371 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24628389 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244155013 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242646025 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246495477 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.242194015 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24203676 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243050994 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.241920449 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245901068 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.243412613 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.243541858 seconds)
  done (took 31.019601186 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.247359619 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.244694193 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.247118449 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.244762209 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.242958342 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.246043781 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.247173615 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.244110731 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.245759713 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.245673134 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243894305 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.242340088 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.247286445 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.242492172 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247181933 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.244825625 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.245907976 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244714204 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247907411 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243960996 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.246581631 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244418574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.245058828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247738741 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.244993704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245303662 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.247335769 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.245952872 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248210387 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245297299 seconds)
  done (took 38.534521885 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.253194802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.255983163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.246410225 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.249059558 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249341938 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.250445873 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.249229304 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.247986873 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248987562 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.247583416 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.248232658 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.248001691 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.248432776 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.247985018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.249638574 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.249099504 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24840564 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.254956477 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.249041602 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249340884 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.249070098 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.248821496 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.24877872 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.249061046 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24966379 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.249205611 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.249447321 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.249458336 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.247924574 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.248873534 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.249588273 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.248604795 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.249219267 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.248540629 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.249181278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24884752 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.255286615 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.257413412 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.250502751 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.249567851 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.250096604 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.250702455 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25048691 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.250172871 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.2504773 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.250968519 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.249772655 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.250616236 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.249513781 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.249313908 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.250241358 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.250761331 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.251161061 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25133388 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250719544 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.251280459 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.251076154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.251531 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.249625051 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.250371749 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.251899502 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.250899867 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.251991391 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.252300391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.251478952 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.25137884 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.251348892 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252529213 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.251366112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.252625395 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.252801588 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.252457892 seconds)
  done (took 91.192805542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252082678 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250114845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249345596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24885527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250152212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251449993 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250403225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252975127 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249779681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252714632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252857852 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250359601 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249665561 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252203951 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252274111 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.250026758 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.253602327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24975322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.253016233 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253962751 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252695668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25082372 seconds)
  done (took 28.702534336 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252639825 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255610051 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.250352078 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255614253 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252439862 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254883746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254556436 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255924502 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253373972 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25174943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251448348 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253938682 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253991603 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251317245 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251485064 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252932869 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255303 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254018166 seconds)
  done (took 23.735213099 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.252781483 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.251555659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.253934586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252174932 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.251685469 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255710637 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251124084 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255146591 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.25427764 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.252724496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.25684631 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25479561 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.253521348 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254450087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255983573 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252063817 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.255460088 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252980825 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254382372 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251912012 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.251670232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256445132 seconds)
  done (took 28.756626119 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255217941 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2556642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25324691 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253467364 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.253172877 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255204852 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.256729076 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.254236552 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.257775372 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.255343498 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253666771 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256260042 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.255261911 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254609527 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.255252116 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254090455 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256462653 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256562985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256757807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.254536656 seconds)
  done (took 26.280225482 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259396484 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261865586 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261638854 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260896036 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261637182 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26152912 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261051466 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260909405 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261587935 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261173427 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261456863 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.261192815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262107154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.261977479 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262482405 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262724989 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261277974 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261085992 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261846814 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261757188 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26259073 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261632778 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262228921 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26191768 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262577683 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261616428 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26257909 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262122041 seconds)
  done (took 36.505910987 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260186725 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258406655 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256867007 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256909672 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.256687184 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257223467 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25770568 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25687219 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258714056 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256912246 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.261080598 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.260283558 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259632409 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.260036014 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261019792 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.261054968 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260051997 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.258419192 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258079522 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257087204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.260210229 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261348901 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.26091782 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.258176478 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25803021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.260867757 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259153127 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259778037 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262184225 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258048425 seconds)
  done (took 38.953018194 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.305319177 seconds)
    (2/2) benchmarking "in"...
    done (took 1.30522417 seconds)
  done (took 3.792408298 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258111424 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261141735 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.261460001 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259316194 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.26047114 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263061015 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.262418165 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259043488 seconds)
  done (took 11.266937969 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.262109827 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.262019751 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.262954245 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.262917755 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.265335597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.261445786 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270023722 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.28361436 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263579223 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.263519466 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.271532864 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270498147 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.264273634 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26324811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.262761422 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264579679 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.263005188 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.266404817 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.266732697 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.263940905 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266561489 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265005746 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265279472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.262208961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264535997 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.274841966 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269465869 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.264975822 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263324536 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.266592873 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.262401272 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.262010014 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26802147 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.268077922 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.264801858 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.267743552 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273047498 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287197423 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.271271597 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26772089 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265498751 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.263293311 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.265631771 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.264522351 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26605884 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.267630622 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.267018301 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.262526467 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.264560483 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.269134397 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.272164078 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264741201 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.263994558 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267730033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.267187107 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273280821 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.291426052 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.27084488 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276136105 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.276741504 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280583439 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.275165352 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26860046 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.271101341 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2786916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.292427328 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274205275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.285244245 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.265602098 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.266628735 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.274272689 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28101937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.294528294 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.271529986 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271693813 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.267958165 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26821681 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268566434 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27501785 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.291752942 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.271711619 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271845243 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280234197 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292697742 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.268022244 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.270392675 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.271898885 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271888785 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.270956826 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280342913 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.293274839 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.268798863 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.267163042 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266792677 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.267896567 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.273477179 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.266955921 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269892967 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266770553 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.270125547 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271586724 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272838289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.2781237 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271964105 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274288523 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.277078066 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268398564 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268659981 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2744708 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269491212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271348429 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.271963843 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.275724411 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26676215 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272699762 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2778978 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270954323 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26967187 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.27312494 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.270439349 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280384254 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.297278874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.270397945 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.271500956 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.275164645 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.285244046 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273832702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.27326862 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.270543664 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.267334573 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.268566909 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.270814696 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.272750412 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.271559586 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274350661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270856215 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.269407021 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.271904437 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.273377992 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.272486684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.270461595 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.270195065 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.27203546 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.274285561 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.273811126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.272684509 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.278073219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.271210128 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.272461222 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.271523285 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.269002788 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271863159 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.272604719 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.274793544 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.270198598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27311731 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.272287107 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.274882605 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273540847 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.273162251 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274469355 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.273867793 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276334588 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.274841009 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275972247 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.273157309 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.270406803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.272360894 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.275302134 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.272132231 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.273140525 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.272378118 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.276554867 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.286156456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.274914955 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.276497961 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.27572903 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277183991 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.276763036 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.276380111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.278531456 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282366751 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.276993447 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.281333871 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277264751 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276519909 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.275569079 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274724924 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.273027266 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.277668138 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27867668 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283269873 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287320159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.300501603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.275944597 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.279531511 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.276229679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.28134049 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.278543289 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.2788358 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.275564658 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277351766 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27433561 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278234542 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.276555074 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.278318365 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.274167851 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276690697 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.276660576 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.279008287 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276980969 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.277227955 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275606599 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27285058 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275934014 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278731989 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.275857756 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.27370462 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.274543414 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276522831 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.277919589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.278388641 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.283789119 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.274787449 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278572942 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27881366 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.277041453 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.275398322 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.278220772 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278483112 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.277063238 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285956359 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.297426278 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.278242917 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284854441 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.297798831 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.277103475 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.279747226 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278643565 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.275086494 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.279939745 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.286014741 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.277245267 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.281036698 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.281071131 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278669365 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279675635 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285382285 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.27592395 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.277574916 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.279944898 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.280028757 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.276396021 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.280265163 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.279362745 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.278178299 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282468075 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279477308 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.280303193 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280002102 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.281194228 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.282099787 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281130769 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283387076 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.290007565 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.283673261 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27886306 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.281067337 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280313169 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284077279 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.279276347 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.282221343 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.27951912 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291998346 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.309121103 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285402333 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280979422 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.281512472 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284670851 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281207075 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.283875004 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279192258 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279020031 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279788147 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.280076161 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.278384436 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281153681 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.28082652 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280303775 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.281751399 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.285853475 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.281278183 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.280481819 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.28397007 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.284757969 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.281206185 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.28068946 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.280898198 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.281413968 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282317604 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.280269171 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.280561856 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288725671 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301554764 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.281243142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.280745906 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280957992 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.281674444 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.282730221 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.285448855 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.286395551 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292874913 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.285900676 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.291307234 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.285232271 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292241317 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.285967081 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.286633016 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.294457848 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.280833941 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.281660399 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.282885841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.2850059 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289906866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.307185656 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.286179344 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.290545748 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285150107 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.284906631 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283349471 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.286211181 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285692586 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.286156222 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.293975979 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.308931769 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.287428155 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284381656 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281043702 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.286940619 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.28454789 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.283967471 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284729179 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.287326813 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.284035274 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.28391071 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.284123918 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.284698418 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.28675968 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285972941 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.282249112 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285579183 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291965366 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.308123958 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293072585 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.286788802 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293499857 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287869891 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290982743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.308385135 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.286007733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.287804361 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.287437252 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.287595518 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.285368325 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.285243575 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.28926333 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.287380881 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.291415711 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.288992972 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287777225 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.286930889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290286195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.28516911 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296900458 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31466307 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.288369622 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292996222 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.283605272 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.287652961 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.294974552 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.289939559 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.285537761 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.290694105 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29887146 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296540269 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.287878758 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.288960531 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2873892 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290442624 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.287454146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.288910393 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.289848584 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.288674088 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.287576264 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.291446924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290688025 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.288409978 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.287460131 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289869868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.290342932 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.298857552 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292809219 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.288595715 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290503816 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.291839494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.288608555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.289230816 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.291293486 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289113462 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.289547265 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.291128189 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296754596 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.296401075 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.290529196 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.288691203 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.291224479 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.28866454 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.288512902 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292885837 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.291576254 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29195356 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.290345847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.29260172 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.289125697 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.288959154 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.290073186 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289735809 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290988418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293500678 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.297061788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289663001 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.287593653 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.28998047 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290968385 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.287045903 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.289496591 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.296653866 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293668844 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.30351536 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.300853269 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.296989288 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.290638294 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293851926 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.299149362 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.289262808 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.292218394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.294330104 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.292019967 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292580258 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.29529063 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.293598128 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.298373056 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.291061168 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.291157711 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299704687 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.316039251 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294168214 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.294003856 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.296200979 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.290976514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.289576433 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.293206676 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.292185334 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.299546472 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.313900645 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.296299871 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292807956 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.292462297 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.294508763 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300206359 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29392856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.292067541 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.290305668 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.293013214 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294256759 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.294806325 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.291576784 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.292192849 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.293345827 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.298392302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.302161872 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.290353287 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29579612 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.29425997 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294395135 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295985611 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295951389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.291873139 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.292370933 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.292950022 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297555575 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.294459329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.295274624 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.293258061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.296151785 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.297192739 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.297235295 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.297515946 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.307392238 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.303846765 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.29192257 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.293759241 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.296169423 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.297158561 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297997387 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.298584611 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.296253763 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.295571708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.296149683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298362043 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.295465859 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.299000745 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312149137 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.320699188 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.296022594 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.295324447 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298930004 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.295191352 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.293963197 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.295616577 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.296671377 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.299213734 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.308000148 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.298441515 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30307684 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.317752571 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.298638835 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.302270534 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.301034364 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305620895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.298633383 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.299458285 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.301385453 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.304317329 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.314822939 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.297744498 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308192784 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.328527969 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.318705646 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.298539671 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.300396141 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298678218 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.301093197 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.298811855 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.301020477 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.299273555 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299663576 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.30199171 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.300021781 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305006157 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299583297 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.300335136 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.299052573 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.296587315 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.299081348 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.297704181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.302201001 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.299245428 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.301698488 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.301894868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.300899679 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.298900395 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.311609176 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.32903793 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.299656706 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.300593221 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.296358502 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.300981379 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.303082436 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311325649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.307476938 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.301305271 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.302815193 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.299143107 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302418737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.298924453 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.298588955 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.298590119 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299143038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.298460978 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.312839765 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312702644 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.304416503 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.299766006 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303332454 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.301741341 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301264742 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.303787565 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303994486 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.301408748 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.303889409 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.30899063 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.301849838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.301573067 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.305849159 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.309464751 seconds)
  done (took 767.031197091 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.300360343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299721506 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299397097 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299480131 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299682192 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299833395 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29924744 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299244596 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.299003074 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298487445 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.299824556 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299705577 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301189383 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300486058 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299911264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300802005 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300413889 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300343181 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300895955 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301298294 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300879598 seconds)
  done (took 28.518420581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.303613341 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.30186732 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.301987548 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302500592 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301456796 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.303292337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302413394 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304526432 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304743308 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300222642 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303917014 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304788967 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.302039921 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.302155135 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30087403 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305310909 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304217284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300684597 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304526832 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302241928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305563929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.303210889 seconds)
  done (took 29.887041021 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.306619926 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.306851569 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.30589006 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.303145757 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.305640429 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.302725025 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.307344993 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.304596525 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.304422378 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.305092935 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.304303753 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.304749392 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.313244556 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.312373955 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.307066512 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.306998686 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.44919565 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.308407737 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.307934739 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.308712249 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.304379882 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.31013198 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.302116652 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.303626175 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.304765769 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.309083017 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.307925849 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.306224729 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.308224403 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.309193081 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.314361394 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.308239798 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.306205186 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.309209046 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.306705033 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.308463801 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.31289357 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.310385818 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.305666298 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.307486721 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.318895003 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.330866569 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.310773321 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.313613614 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.309484666 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.307855011 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.313469301 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.3193164 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.30672407 seconds)
  done (took 65.485090685 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.307923653 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.309003571 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.305155717 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.308514637 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.309752214 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.308809321 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.310216353 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308476852 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.306573049 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.306976157 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.308908281 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.307633002 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.308341216 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.309762884 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.310214741 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.307282196 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30821888 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.305825627 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.307304152 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.308167597 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.309454098 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.31034466 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.316987839 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.309075472 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311042469 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307308872 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.309824122 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.310620001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30846359 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.308225462 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.311575934 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311297947 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.31237602 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30967336 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.308456687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.311433463 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.312586797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.309238518 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.311900684 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.308003285 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311307075 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312187588 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.312504424 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.311340183 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.309822169 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.309773593 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.308495388 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.308871946 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.308987911 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.312018624 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.312194902 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.309976016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312346274 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.309042813 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312632102 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.313175321 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311333044 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.309939674 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.312435062 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.310464915 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.309182728 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312960483 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.310745234 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.314765584 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.315006635 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.311800944 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.312122435 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313295915 seconds)
  done (took 90.317055505 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314633877 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.317651925 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31666552 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31566594 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315935157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.314342663 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316653258 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317247598 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.316586134 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317897543 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316394029 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313682511 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.315833026 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314617803 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316583046 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31614177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316368964 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317283658 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315583384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317229635 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.315816376 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317842088 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316953908 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.318066335 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319222531 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.318410802 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318412625 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.318637453 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319015148 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.31653304 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318268139 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.317754974 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317580593 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.318495052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.318123694 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.318852499 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317584714 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317612392 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.31708577 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.317140727 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.31750629 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31815164 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.318566356 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.318427105 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31879028 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317318908 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.318566804 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.319939556 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314656057 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.318717283 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.31925849 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31919022 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318538895 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318464839 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.320119401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.317468257 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318830157 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.319120191 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319114952 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.320336828 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32003618 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.318181229 seconds)
  done (took 82.920553736 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317206124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315944748 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.316964744 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.314275477 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316869518 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317079029 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317363689 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.316592354 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318348278 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.317950721 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31935855 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317298944 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316439203 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317296892 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.316565193 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317324229 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316398766 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.316231876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318358522 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31785349 seconds)
  done (took 27.574560918 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.316151752 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.318158496 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.316446016 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.317763634 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.318528659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31731169 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.318608717 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31902986 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317253713 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319264584 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.319282883 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319169306 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316630581 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.316368717 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319330908 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.317927741 seconds)
  done (took 22.320788064 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.318570161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.319675808 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.321477935 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.322560961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.316789873 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.318543224 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.320816881 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.316063187 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.316865009 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.319379012 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.319335526 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.320526562 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.320023116 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.321776819 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.319108211 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.321392892 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.318006507 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.316950025 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.320394953 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.322951467 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.319408183 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.318500908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.320209889 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.319871124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.318207979 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319523397 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.31875183 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.319142895 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.318421459 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.321418469 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.318398034 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.317478885 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.319403466 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.319031286 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.325212042 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.319334013 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.320558875 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.321296657 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321159536 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.322391143 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.322053415 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.318528311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.322620463 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.322072603 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.320274383 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.322334872 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.319231814 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.321390147 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319525292 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32018063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.322773176 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.326147136 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.323060959 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.323414338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.32368771 seconds)
  done (took 73.853883408 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323011967 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.32336759 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.321386703 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323676595 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.323284924 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.320057143 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.324718498 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322807411 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321134605 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.325671027 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.322851723 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326171287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321661212 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325115572 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323203787 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32397613 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.323403331 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.322528403 seconds)
  done (took 25.057115531 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.323186929 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322598802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.326285406 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.321941844 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.323007542 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32358058 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322977249 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.323499881 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324641999 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.322687494 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320215411 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.326015493 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3250302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.325143176 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321427444 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3238512 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.325383071 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324473058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.323870287 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322155635 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325127327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326624175 seconds)
  done (took 30.363626991 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.325363707 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.324298434 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.325486103 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.341924826 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.347176368 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.349998947 seconds)
  done (took 9.255849441 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334565357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325729223 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324936519 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327845336 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325801388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32395236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32362763 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325424235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327551874 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325363252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322851557 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327618511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327105227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324451922 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326627816 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328586452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32555731 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323731438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324264182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328281361 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324749044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327420199 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324491427 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324846247 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326466794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326069989 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329974214 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325096667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325004593 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329363625 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328959163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325239196 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328287266 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3271984 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328829314 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327591748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32638407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327508046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32984377 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326631948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.330259756 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32814662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328513214 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326915092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329328674 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32578877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326519796 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32585024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326048697 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330030007 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329436731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327073626 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330404112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331293458 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331543949 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331186145 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327939066 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327330828 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330286048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327606691 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328368179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330773446 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327346582 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327797015 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328821974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327544424 seconds)
  done (took 88.873628406 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328680982 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326829701 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327936864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328642319 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328780449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327884122 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328138075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328571531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328747497 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328853358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332017292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328853885 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327449286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328955963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328164083 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328204886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33053887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329483858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328812644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331850791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328581674 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330492918 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328551296 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329167633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33063607 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332800316 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330619305 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327844685 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328158301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330876935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329180086 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329871965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330236142 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329828628 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331422063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330543109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329369327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329934687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330570844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334267574 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329984176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333014216 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329848458 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330764023 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331742401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332033031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331876003 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331726007 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330537088 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332978667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331500544 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33237377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332065321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33112071 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332667892 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332883263 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332237496 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333097109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332086767 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335298028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331690508 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332608636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335145501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332094621 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333032446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332720852 seconds)
  done (took 89.066676399 seconds)
done (took 1790.431741938 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.496324436 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451304386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.33274538 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.390349816 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.333677319 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.346916259 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.346241393 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.334053351 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.332154868 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.333325791 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.332805274 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522348951 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.343217172 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.332104796 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.331743941 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.429129525 seconds)
  done (took 43.239170737 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.363228115 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.341148329 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.46612604 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.354969055 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361711703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.545596827 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.39676332 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.337737432 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.53133523 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.382425487 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.092704708 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.363363736 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.338439882 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.587603403 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.358493009 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.545392928 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.613866396 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.104453893 seconds)
  done (took 31.333834902 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.856645279 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.357709389 seconds)
  done (took 9.466766057 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.359454927 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.337483089 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.338179145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.337413908 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.33242728 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.329378492 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.3365259 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.334902292 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.619102433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.488600088 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.344343016 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.349394026 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.360145918 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.338261304 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.334827133 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.380010672 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.515889372 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.337766687 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.335097572 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.344713357 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.339922916 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430369861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.383981027 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.3350676 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.484455398 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.655467925 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.346549315 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.345140493 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.472314728 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.337023607 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.338764815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.338299976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.341280146 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.29708828 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.87611974 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.336878003 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.36826861 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.348555661 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.335325103 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.487193353 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.340750188 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.345656331 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.338243363 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.851428648 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.488607162 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.471738253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.82675184 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.346309944 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.342906657 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.40989951 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.345113908 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.341879983 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.387971698 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.187542797 seconds)
  done (took 113.940909706 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.385324262 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.723651815 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.50383673 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.357205157 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106477061 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.975135664 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.359179675 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.678192209 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.375340674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334964892 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.681857939 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.896333708 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.356246295 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.370612884 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.46128758 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.342571018 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334830224 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.160123018 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.353419786 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.339499514 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865245519 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.351891832 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.335720003 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.509149076 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.375505434 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.832140653 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.934981037 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.749307645 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.358899718 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.335261687 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.842251512 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.359285658 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.409050858 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.337529518 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.616813678 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737893157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712487592 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.335300777 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.356448612 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.33730442 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.356511376 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826767274 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.720062393 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337859218 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342958632 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830572952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.3374731 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.336790768 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.345345627 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.543197621 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.971595009 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.339286109 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.940436509 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.33848295 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.716650842 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.402504914 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37697287 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862935885 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336642253 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.468049502 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375083382 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.339534018 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.339693106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.338017962 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.338156812 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.726681729 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.437773887 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.341780545 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.725167406 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84655435 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.361249246 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918625616 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.263571267 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.349351947 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.430536551 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355239936 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.980210882 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878431421 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344470651 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338760338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.713757273 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.341819924 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.680757087 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.357904709 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340504476 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888215366 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.347773494 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.373711909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.339575374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.339109293 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.006020186 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340725428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.646574651 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.399359918 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.339441056 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.339527982 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.366527626 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.341859658 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.358866244 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.340909604 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903261458 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.360358748 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.334885005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.360552467 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35791184 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.342302823 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.341193119 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.338888545 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560401939 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.889628373 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.342112619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340057383 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.340309156 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.347821557 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.519721608 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.343280876 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6899305 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342053656 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35512826 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.346009502 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.979275535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394759686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340607345 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.343875673 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.283286759 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.547794814 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.362051277 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.341485206 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345918817 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.34455219 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.743193686 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.363120436 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.400961499 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.34273982 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083644652 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.369859857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.362185228 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.624422922 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350812657 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.342871999 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.343062634 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341306471 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644071549 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.628684354 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.379562214 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.344489103 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.362258919 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.06109049 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.36343957 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.490685804 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.362962361 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.385859555 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54034278 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.718482175 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.344603774 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.971096907 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.344911666 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559640254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344327798 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657311993 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87228961 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.364173257 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.348001689 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.087848931 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.075882721 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.040588653 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.34677162 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.687657588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.35735891 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.818969459 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.344730303 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.343922854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.819518774 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.34408262 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.344779986 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.344353311 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.344342219 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.409660945 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5198805 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.735613635 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.344728869 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.836438995 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413211515 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.344768609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.366909619 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.348506376 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.691327044 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.416302685 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.349317306 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352144656 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.345247812 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.346283765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856084227 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.286654031 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.346532017 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.501920861 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02042526 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.364250909 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.345002079 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.046396671 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.030235534 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.899082916 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.387046218 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.69704943 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.346715383 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.387655726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000663852 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.437391634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858464364 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.350520413 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.346239235 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.979038149 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.366780677 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702934296 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.347195021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346708128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940205462 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.36839459 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.35093269 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.757292573 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.369256703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599568641 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.34827839 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.367218101 seconds)
  done (took 1115.286200236 seconds)
done (took 1314.515845196 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.34687214 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.348390415 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.339722995 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.348674861 seconds)
  done (took 26.652370281 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.358279648 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355247948 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.359457561 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.352812383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.361285612 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.354309691 seconds)
  done (took 9.410747324 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.946496332 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.349809519 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.354402735 seconds)
  done (took 19.919931239 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.588680741 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.772493214 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.729086929 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.82632088 seconds)
  done (took 11.187571501 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.361973883 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.361401102 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.360634814 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.359978838 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.363415615 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.364458347 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.359895938 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.360930901 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.364215329 seconds)
  done (took 13.524948642 seconds)
done (took 81.963940741 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.348574124 seconds)
    (2/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.257326567 seconds)
    (3/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.763166919 seconds)
    (4/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.415908259 seconds)
    (5/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.956283653 seconds)
    (6/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.015555518 seconds)
    (7/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.241699133 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.322332448 seconds)
    (9/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.343031402 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.622996899 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.229328157 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.393341047 seconds)
    (13/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.834114774 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.378682037 seconds)
    (15/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.575342913 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.352986476 seconds)
    (17/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.424466312 seconds)
    (18/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.511935673 seconds)
    (19/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479863435 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.213542863 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.354123631 seconds)
    (22/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.380512598 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.380187391 seconds)
    (24/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.341818027 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.339878907 seconds)
    (26/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.380750776 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.543298028 seconds)
    (28/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.358611815 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.382468756 seconds)
    (30/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.439645116 seconds)
    (31/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.341678693 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.897704664 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.463161126 seconds)
    (34/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.353585598 seconds)
    (35/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.380911146 seconds)
    (36/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.84311657 seconds)
    (37/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.458751615 seconds)
    (38/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.797694045 seconds)
    (39/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.386442274 seconds)
    (40/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.339644812 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.485588788 seconds)
    (42/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.278321932 seconds)
    (43/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.297545539 seconds)
    (44/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.354417785 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.677910835 seconds)
    (46/286) benchmarking ("sort", BigInt, false)...
    done (took 6.355920915 seconds)
    (47/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.418913848 seconds)
    (48/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.920359882 seconds)
    (49/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.377618022 seconds)
    (50/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.301152837 seconds)
    (51/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.355616382 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.341455415 seconds)
    (53/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.015102227 seconds)
    (54/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.362779833 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.057737837 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.438768317 seconds)
    (57/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.279606874 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.434399006 seconds)
    (59/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.397949899 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.665875579 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.407387448 seconds)
    (62/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.452300857 seconds)
    (63/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.341872965 seconds)
    (64/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.947853735 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.38876034 seconds)
    (66/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.183356075 seconds)
    (67/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.164503715 seconds)
    (68/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.356032115 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.183512546 seconds)
    (70/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.125381855 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.378696498 seconds)
    (72/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.455088825 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.342907143 seconds)
    (74/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.365039681 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.791631316 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.675127127 seconds)
    (77/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.080562832 seconds)
    (78/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.343182112 seconds)
    (79/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.373992796 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.314241322 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.383681768 seconds)
    (82/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.376904887 seconds)
    (83/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.755269364 seconds)
    (84/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.121612775 seconds)
    (85/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.590529818 seconds)
    (86/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.401897156 seconds)
    (87/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.036439263 seconds)
    (88/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.344341486 seconds)
    (89/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.345076164 seconds)
    (90/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.393143928 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.347401338 seconds)
    (92/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.490793602 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.373963584 seconds)
    (94/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.226404913 seconds)
    (95/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.55548605 seconds)
    (96/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.132646206 seconds)
    (97/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.3565459 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.580431669 seconds)
    (99/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.443043379 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.978656381 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.965348503 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.346686531 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.217172174 seconds)
    (104/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.382867322 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.732361544 seconds)
    (106/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.402028988 seconds)
    (107/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.481574119 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.385420338 seconds)
    (109/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.345915985 seconds)
    (110/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.390752081 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.794074511 seconds)
    (112/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.722767385 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.021052506 seconds)
    (114/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.368321515 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.355624436 seconds)
    (116/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.345536223 seconds)
    (117/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.407983467 seconds)
    (118/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.357717792 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.790767173 seconds)
    (120/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.363780104 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.790323226 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.905983504 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384937149 seconds)
    (124/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.792343229 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.624075215 seconds)
    (126/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.35095939 seconds)
    (127/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.44148957 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.224975078 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.155114746 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.62433763 seconds)
    (131/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.558555937 seconds)
    (132/286) benchmarking ("sort", Int8, false)...
    done (took 4.45296389 seconds)
    (133/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.664117086 seconds)
    (134/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.8840484 seconds)
    (135/286) benchmarking ("sort", Float32, true)...
    done (took 6.359312767 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.512509446 seconds)
    (137/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.3602568 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.361747226 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.250065991 seconds)
    (140/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.876330019 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.386472758 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.385898937 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.913499403 seconds)
    (144/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.128875924 seconds)
    (145/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.359838338 seconds)
    (146/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.459038724 seconds)
    (147/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.388257056 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.360092941 seconds)
    (149/286) benchmarking ("sort", BigInt, true)...
    done (took 6.365706411 seconds)
    (150/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.870068613 seconds)
    (151/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.376609513 seconds)
    (152/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.726198423 seconds)
    (153/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.647617195 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.410151993 seconds)
    (155/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.251805267 seconds)
    (156/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.401324299 seconds)
    (157/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.092326681 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.273177917 seconds)
    (159/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.575172578 seconds)
    (160/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.507241896 seconds)
    (161/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.114521804 seconds)
    (162/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.515933143 seconds)
    (163/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.44405676 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.074674891 seconds)
    (165/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.369542212 seconds)
    (166/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.113410669 seconds)
    (167/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.502572574 seconds)
    (168/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.08965208 seconds)
    (169/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.368440788 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.495314878 seconds)
    (171/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.362113225 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.511430332 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.225508572 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395067467 seconds)
    (175/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.2755469 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.347656941 seconds)
    (177/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.373586205 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.40486311 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.068701971 seconds)
    (180/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.374122632 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.245508812 seconds)
    (182/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.432454295 seconds)
    (183/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.778631983 seconds)
    (184/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.478223749 seconds)
    (185/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.486474731 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.433142356 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.368051456 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.440742737 seconds)
    (189/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.385084872 seconds)
    (190/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.371551157 seconds)
    (191/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.35135095 seconds)
    (192/286) benchmarking ("sort", Int8, true)...
    done (took 6.364825696 seconds)
    (193/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.296186996 seconds)
    (194/286) benchmarking ("sort", Float32, false)...
    done (took 5.397856435 seconds)
    (195/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.627347526 seconds)
    (196/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.371259774 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.405839926 seconds)
    (198/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.488915327 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.413896631 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.581369672 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.363818105 seconds)
    (202/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.475452675 seconds)
    (203/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.563697256 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.178352546 seconds)
    (205/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.790636479 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.387664038 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.464443675 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363331359 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.446109983 seconds)
    (210/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.449522371 seconds)
    (211/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.446454327 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.483512764 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.377934886 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.426159396 seconds)
    (215/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.37079713 seconds)
    (216/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.46561496 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.352194646 seconds)
    (218/286) benchmarking ("sort", Float64, true)...
    done (took 6.365013735 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.371627581 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.35280999 seconds)
    (221/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.389557065 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.395824064 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.742768195 seconds)
    (224/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.370666651 seconds)
    (225/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.433898044 seconds)
    (226/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.39008959 seconds)
    (227/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.368704018 seconds)
    (228/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.358450049 seconds)
    (229/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.397155634 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.643162729 seconds)
    (231/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.094147784 seconds)
    (232/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.481978471 seconds)
    (233/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.867101624 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.392762728 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.349556731 seconds)
    (236/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.719699436 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.603194941 seconds)
    (238/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.393987867 seconds)
    (239/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.352717803 seconds)
    (240/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.433876145 seconds)
    (241/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.238643354 seconds)
    (242/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.352955186 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752380754 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.118262629 seconds)
    (245/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.388605797 seconds)
    (246/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.391834839 seconds)
    (247/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.476545639 seconds)
    (248/286) benchmarking ("sort", Float64, false)...
    done (took 5.769872933 seconds)
    (249/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.479348367 seconds)
    (250/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.432526872 seconds)
    (251/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.495844699 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.884382905 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.353995161 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.942064922 seconds)
    (255/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.620198212 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.357957123 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.276965276 seconds)
    (258/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.947114166 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.451808548 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.346381771 seconds)
    (261/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.315691814 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.451498532 seconds)
    (263/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.432482191 seconds)
    (264/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.368372117 seconds)
    (265/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.354921333 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.517689268 seconds)
    (267/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.144017563 seconds)
    (268/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.392761811 seconds)
    (269/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.146306887 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.197253262 seconds)
    (271/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.396675285 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.954819643 seconds)
    (273/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.452437019 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.410474331 seconds)
    (275/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.946628145 seconds)
    (276/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.120568885 seconds)
    (277/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.459217001 seconds)
    (278/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.727766078 seconds)
    (279/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.936372223 seconds)
    (280/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.385521308 seconds)
    (281/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.770047575 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.393685761 seconds)
    (283/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.386190084 seconds)
    (284/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.369414392 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.370929371 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.410286994 seconds)
  done (took 965.205283933 seconds)
done (took 966.476919179 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.401525179 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398917652 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.380867821 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.401758886 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.493887769 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.560239242 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.389971346 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.382644395 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.426527289 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.429852504 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.379559652 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.560402015 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.383863649 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.381489296 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.38039082 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396057984 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.56021809 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.380972181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.399105744 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.390609429 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.397620243 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.380757354 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.430664381 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.559645089 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.384789058 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.383996566 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.386550087 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.401672003 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.495772856 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.385862344 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.382531891 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.393547939 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.560458601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.38108487 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.376587018 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.40032775 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.393769751 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.390758867 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.385257403 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.413796848 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.028091926 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.382435301 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.385151112 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.383152155 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.382878369 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.386688125 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385819944 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.389197433 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396549821 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397749447 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.02084703 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.398879409 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.387095776 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.38535141 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.394701887 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.383620022 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.387798362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402638356 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.402765465 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401664938 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.554090431 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.390512282 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.386422695 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.400537853 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.392490046 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.06066347 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.379149489 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388723704 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.138311935 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.395413797 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.199449972 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.399717017 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.386382879 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.399125659 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.4175944 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.568072479 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.379464627 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.384737872 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394031955 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.383934542 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.395527098 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400259294 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.389653527 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.385011682 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40068177 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.567699857 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.397310799 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.387753315 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.393862987 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.405259351 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39423336 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.39842528 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.390389208 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.38130073 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396667198 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.391123926 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.38949148 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.390620482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.392186295 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.396660478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.148274616 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411802908 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.385049252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.382720344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.387007434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.400098363 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.149616679 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.395372054 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.408070017 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.434700369 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.389037162 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.564918397 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.391941566 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405834665 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.397379151 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.390820416 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.382726008 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.569283625 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.032763107 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402999035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.390220055 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.38712752 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405855082 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.38952081 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.384396033 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.576182665 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.390175759 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402972542 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.511095745 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.401266802 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.420509893 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.386855175 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.392369778 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.425726569 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407413827 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.42123411 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.390557121 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406831212 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.406272859 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.385022379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.39952487 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.40038364 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.389487824 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.396218668 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.383039828 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.425827055 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403773135 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404233862 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.409658252 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.511168702 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.38747061 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.565189007 seconds)
done (took 237.375333369 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.449438111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.386789454 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.469194975 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.38842746 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.488548742 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.487911315 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384814062 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.384245137 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.384731981 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.765387111 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.384647989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.385923026 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.380403974 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.38592313 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.467865774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.397653832 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.385061619 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.728232903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.390895914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.457864136 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.383513029 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.385799499 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388665675 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.771580204 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.380355654 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.383003194 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.458380867 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.389702996 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.738892439 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.382277872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.3861925 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.737043671 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.478875787 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.406910585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.399897749 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.39681761 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.492264603 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.411704842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.471208008 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469362231 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473335323 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.430864224 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.384607431 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.386271929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.391930587 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393964068 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.388290324 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.417675617 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.384145728 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.388299676 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.730448455 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.399250765 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.398261219 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.389474649 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.389221333 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.41376584 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.390326643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.393508936 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.481732542 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.394566658 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.453201573 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.774867943 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.768840177 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.392068977 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.388020452 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389445203 seconds)
  done (took 152.152522887 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.458855379 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.46378348 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.51149361 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.391524061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.441698225 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.516613959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.392385476 seconds)
  done (took 11.477639454 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.398049781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393017969 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441141861 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44189662 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.394137904 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.570557266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393074198 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.403516404 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.390109222 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.445627436 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.393967604 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.395457468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.399068178 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.393060417 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.440410502 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.403813517 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.508037887 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.394396913 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396310687 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549790826 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39092347 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.40113962 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.445898622 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.405241898 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396430627 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.399952397 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.224807193 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398228213 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392493381 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.393802024 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.390688186 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.470649878 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395846224 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.389530158 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.39285863 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508793359 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.398376935 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392866572 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.396030648 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.388638916 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.3949528 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394636024 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.395051728 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.392437782 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.394875015 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.416788381 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.395492698 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.394759518 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.39589476 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395131664 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444878733 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396230193 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.391492519 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.393360173 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.450096118 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.401223617 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.39928384 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.393101588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397034166 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392963528 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.551956041 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442846576 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.396586784 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.442280523 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395888599 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396854299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.396152699 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.39581495 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450453145 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.395177617 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.443834147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.394259236 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575466235 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.419361187 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398965902 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.398797629 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.399816777 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399095934 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.392776717 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.402884952 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.393999468 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.398156323 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.403616212 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395959417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394895998 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.56827267 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502013951 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.395300029 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40974784 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.404473073 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.395548853 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.451282616 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.397385253 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.395380766 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449813762 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.512963168 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.449153361 seconds)
  done (took 159.660987531 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.400972254 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.406677755 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.401854562 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.421946375 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.400455934 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.39781799 seconds)
  done (took 9.73827203 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.401240008 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.399993408 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.398059489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.398285268 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.400672279 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.39975989 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.402201735 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.401631036 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.408069628 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.398573089 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.401139834 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.411268655 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.400933812 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.40243407 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.403643158 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.400742038 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.402345354 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397668331 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.400250042 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402819077 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.494967279 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.402960013 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403224234 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.402312238 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.405852546 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.401200912 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.407661576 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.401933621 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.401365603 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.408054056 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.405146888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.401897468 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.401683742 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.408937633 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.408389652 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.401692221 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404754465 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.41158193 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399537615 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.403126356 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.413825644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405639524 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.401508894 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.412765649 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.404963216 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.408487063 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.417047323 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.411199359 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.404912296 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.413259652 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.414657288 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.402798699 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.403524019 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.414259478 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.404269532 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4273032 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.417037468 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.40671711 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.405123724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.404765965 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.405504139 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.404069519 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.405854432 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.410156814 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.410746927 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.413840181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.405241305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.410510283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406332406 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.402990888 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.414333026 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.402172349 seconds)
  done (took 103.603664085 seconds)
done (took 437.93179702 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.586481538 seconds)
  done (took 7.899948188 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.928232423 seconds)
  done (took 8.24202548 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.808604894 seconds)
  done (took 25.131484656 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.461404527 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.435801997 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.399650869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.39974918 seconds)
  done (took 27.010670968 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.987073286 seconds)
  done (took 8.301197001 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.400034628 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.414856391 seconds)
  done (took 14.134763636 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.864127481 seconds)
  done (took 8.180309918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.487318697 seconds)
  done (took 7.80880462 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.413532704 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.439079136 seconds)
  done (took 14.180442392 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.4062863 seconds)
  done (took 7.722000594 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.439576338 seconds)
  done (took 12.755224668 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.406360509 seconds)
  done (took 7.724934713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.410521704 seconds)
  done (took 7.726010259 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.542699573 seconds)
  done (took 10.85708411 seconds)
done (took 168.988872539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.397897927 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.403658912 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.402244943 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.400288767 seconds)
  done (took 26.919592842 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.440161432 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.439155331 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442853423 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452333817 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.443524916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.440810533 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4333527 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.430907659 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.452055212 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.443979752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.442017004 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.442527632 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.43982032 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.433751602 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.443593936 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.443171781 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.45196485 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.443917286 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.433272002 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.443079844 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.407844764 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.451247831 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.443978515 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.40769863 seconds)
  done (took 35.863182792 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.935616002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.480755101 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.562289501 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.460262727 seconds)
  done (took 7.756017934 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.459529931 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.462464341 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.477631768 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.514318001 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.539727019 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.471545948 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.436567165 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.429912197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.417147867 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.463420062 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.537702187 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.478749094 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.546356852 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.408439577 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.595984991 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.40966647 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.410459745 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.462281572 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.514096399 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.536328521 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.41142266 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462075394 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.466278161 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.479911558 seconds)
  done (took 36.709383731 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.408604214 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.42798785 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.410012018 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.408797779 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.418366919 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.41069265 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.409230333 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.411401821 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.409730489 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.414254641 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.407084248 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.422099666 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.408549012 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.408882551 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.415472727 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.40981429 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.416847733 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.409605784 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.408712373 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.415670107 seconds)
  done (took 29.572247988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.403500409 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.258257162 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.755580533 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.660896054 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.404049176 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.407541116 seconds)
  done (took 28.209873267 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.496418857 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.642048138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.412039851 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.837567026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.913458327 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.41303192 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.412460178 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.688433938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.075494491 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.08045892 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.480183544 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.490878144 seconds)
  done (took 21.264334464 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.412377968 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.406723468 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.428309888 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.422648592 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.475893431 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.416853052 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.419484654 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.404871848 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.4790031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.48292288 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.415741173 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.478128187 seconds)
  done (took 38.565381114 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493988182 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457802342 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.51088849 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479988309 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.188405873 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618847998 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445665489 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.183006746 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411411468 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680509518 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424158053 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495857322 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664404728 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406927578 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406999826 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.533658447 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634814505 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948725526 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411385219 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.921949789 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432757713 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422189596 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.993961393 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683444146 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619640278 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391225725 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.668086208 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.185479202 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740110121 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421428034 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417092597 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408599111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68126884 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124865191 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526986611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661181526 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407488784 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.95914212 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.420790365 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.939959881 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411780226 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411380312 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419586517 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408724867 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.343375763 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421098504 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188293394 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.41554113 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.12189743 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409957659 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757087799 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507381658 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.414123433 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.985365821 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415916015 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.445877419 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.41502293 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509786567 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983648327 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28108545 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414391106 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.347024994 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412842936 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.921851918 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105661158 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.419959906 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.418174259 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416607738 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357555223 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.928682384 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427755705 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556567834 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.439382955 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.10480952 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245786489 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430354024 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356512034 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020344167 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424111978 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.347251778 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641220608 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190107455 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353360326 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.36540089 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346675953 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189774003 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422589854 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.017368845 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439222749 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.192503883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695018731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434894146 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436989671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.638473506 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.299006792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41305973 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.424084471 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537846698 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434587057 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19331458 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380163663 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.417922592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673958691 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.626815038 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424524373 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.540322404 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96684116 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437394245 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.451767659 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413593306 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671362888 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.073653882 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433878717 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262462633 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432287091 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.191774057 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228751919 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428192646 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.42066786 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413790584 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715237431 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.276962171 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.319767656 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483902613 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423011612 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415876071 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.949800964 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269254728 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.312267695 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.663662531 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451933691 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425073192 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.421499129 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413962217 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.424871443 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419737579 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.196419599 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.64278853 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431411249 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691383787 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350653174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56272854 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.463521606 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.642132274 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.77317778 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.421302204 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680636873 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428886274 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429529706 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429064957 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437274663 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517374498 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439429235 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.4165163 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.695152758 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.421297556 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.422974637 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.982720533 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.199165541 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42213127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.425710105 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417912096 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07936364 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408347294 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426388773 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313908229 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.432816854 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486819595 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426621639 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675558683 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.970440202 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423187799 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.426799997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.417714961 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64597079 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430049956 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.954765259 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498375524 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.96986525 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109431113 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435239426 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.355251547 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.131659219 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.112543408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420041416 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619556866 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419887139 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675867559 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435991331 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424705559 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106146169 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423147238 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.956498108 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.428879604 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432545948 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.426898258 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422857484 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 4.041827152 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277067833 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43703628 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436649734 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56570193 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.437315687 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.355259379 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938863252 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429365473 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42329248 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.199467883 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455344037 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.963899999 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329699779 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684534392 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432772361 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7350031 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.055613285 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.459017654 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425483671 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43957456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424232701 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.444922688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432261135 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.433235843 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.966035658 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905859214 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993336915 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284852434 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029324073 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.828479788 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.442841635 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.327242016 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2071638 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381314379 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084053719 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689723866 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206972346 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440958024 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978119846 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.781178465 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.350413862 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738168279 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654233248 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.818219855 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.426543011 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742157605 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638683706 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459332255 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431708121 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.362343316 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.948327522 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060019729 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458730301 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505031957 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209475847 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458399587 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.204710128 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.445466701 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.312040624 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906568361 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.995087374 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.850490209 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437976459 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426181511 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325217711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434286267 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954775114 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127433649 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432773542 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.977658126 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387232029 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685293143 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4383752 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.428683597 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.300525738 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.422885508 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.684738075 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737612117 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362229538 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437712603 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033738455 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.285579472 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.431717486 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427716944 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242251368 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442667604 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762233537 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.436218477 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.986821715 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439354599 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.362721405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361632177 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.120569561 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43592844 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41570716 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973893912 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.436318156 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433950469 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456351564 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283858523 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686660297 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.443039722 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105508578 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656853447 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451505878 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45319732 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.433279886 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430190253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.419284364 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.327563356 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664232601 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451257139 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659610486 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.543304784 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.337814993 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.493102414 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646030382 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.312033527 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432128237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712460335 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.141062533 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.453622894 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284079689 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458043188 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431695573 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476690563 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453629297 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453662163 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500696902 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691381614 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.443005186 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.441162498 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910954423 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460822947 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432870203 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.444482848 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524777835 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305095732 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.998531482 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.205386687 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11150687 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291094261 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106250154 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752130748 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435772439 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433051575 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372964263 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580138503 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960966803 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703627089 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556807551 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.453072959 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45697925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43376239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434996607 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647474848 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707900807 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306576276 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438254802 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099440665 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.315646079 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444016155 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.646049515 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983386483 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047877179 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558639546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43261149 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244381173 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70651172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.525270036 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432302254 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028856936 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.442845759 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.29653005 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.438966484 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450778306 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57972372 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744230363 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16319612 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.46719282 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.593113677 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.208906679 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.007785066 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.692032815 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.002465494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.697178503 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107062035 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241218913 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701198628 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504407997 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696887336 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.556842707 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580193867 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.447990081 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.317887909 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435874736 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286213583 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.145320268 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.445625683 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11227176 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702645251 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.439842449 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.446801251 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458068071 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.445122089 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.661773581 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22995285 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662011006 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44984293 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.445193985 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.427962405 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113196489 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758854997 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382441763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.441109973 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720753195 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672815212 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462426544 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.888877531 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.148618353 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054968019 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.414254358 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459150657 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453994122 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245724981 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112514812 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 4.016632585 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99170538 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101861576 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456805183 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711538245 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.44508293 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.439608701 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720008755 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.445223059 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453737693 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708421002 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.10744897 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340445674 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.464779083 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.033579476 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.377612965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.666994865 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488384082 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.417425543 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448167722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.941029367 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463411864 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565061518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452134186 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.452374885 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456476607 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.177378475 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.759644561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.445690389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.447930044 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.432216446 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457104197 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545598451 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088436634 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470237349 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.112734684 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.799228099 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700250262 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456103075 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.429690481 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.445139574 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441049126 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195306753 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451236663 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450217682 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06201142 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.453787979 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.456537864 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444630259 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.657306522 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652427501 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446020026 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706346594 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443698341 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461615463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.348897691 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.245923194 seconds)
  done (took 1720.62244533 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.471682665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.483192604 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.472791891 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.470462645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.488155034 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.502400687 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.524491772 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.573697864 seconds)
  done (took 53.341964494 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.460010101 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602139417 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.477834836 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.444647795 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.451721917 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.456949417 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.967179731 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.445734034 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.451837191 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.451802674 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.462831364 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.447948945 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.141440585 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.454408359 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.4640169 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.444490638 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.454854082 seconds)
  done (took 67.444100996 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.287108239 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.731941894 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.154479765 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.482342173 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.461756849 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.462417422 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.561899576 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.462709759 seconds)
  done (took 55.961569307 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.458849555 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.461157027 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.461570911 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.461238016 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.461363089 seconds)
  done (took 8.662813483 seconds)
done (took 2132.211196044 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.448118012 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.451248806 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.449805038 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.451396818 seconds)
  done (took 7.158092371 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.430891798 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.169042764 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.431378192 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.445103383 seconds)
  done (took 18.835262325 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.448237086 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.464978583 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.272380912 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.179514297 seconds)
  done (took 5.811334045 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.196633347 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.206919849 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.192954449 seconds)
  done (took 7.952171352 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.445893653 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.446867088 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.445508473 seconds)
  done (took 20.694731959 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.763724483 seconds)
  done (took 3.124926282 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.591855123 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.645119743 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.788167224 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.777428139 seconds)
  done (took 8.162098617 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.831618347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.831215281 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.637210497 seconds)
  done (took 6.657079644 seconds)
done (took 92.667920147 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.905303606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.459679537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.646810889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.878413885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.670130655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.649113975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.778093967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.840993028 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.38260817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.373786918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.880456812 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.673286125 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.72309723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.463319277 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.72081555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.469411307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.673113811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.95405639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446041892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.449023537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.778194294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.518323547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.706996843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.543531219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670579916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.601275946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.098670078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468740382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.464489367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.122266751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.602052545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.461613747 seconds)
  done (took 202.433809136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.448286672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446656467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447735557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466259692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.447983402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.447826067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.467009569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454849998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.449458403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.444932368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.468728984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.467863283 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.446270778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447921275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.447697844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.447781699 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.446890599 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.446988411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.446692622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.447796209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.447178238 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.456590926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.446645603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.446715313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.446589649 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.446357242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.466862281 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447322677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.452216476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.451487539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448412882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.481593679 seconds)
  done (took 207.832040428 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.447633012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.479576681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.448101207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.448267836 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.463427268 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.449851371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.44811482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.460541742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.44777088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.486848994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.449837971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.453139911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.450671526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.448290336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.461181239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450011377 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.468704966 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.476023851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.45022509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448866124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.449503384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449019165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.459447911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.455694556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.464208801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.448315705 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.462218132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.463537006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.467694209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.450629242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.452142628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.45001921 seconds)
  done (took 207.972144329 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.653898938 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.459835964 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.458534874 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.393839522 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.458013129 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.457046589 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.452023238 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656709875 seconds)
  done (took 15.351758607 seconds)
done (took 634.948837295 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.997696448 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.688758838 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.671055143 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.478434465 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.362494957 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.49888527 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.479378581 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.675337431 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.433675221 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.682390249 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.88815042 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.476710491 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.040612137 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.478623965 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.76419836 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587732407 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.425565606 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.525397217 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.835352484 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.123628986 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.764174722 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.078861665 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.677901754 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.431507652 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.05720314 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.068835814 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.379633148 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.409512997 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.479098343 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.842592619 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.347237525 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.618283952 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.531523442 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.5331599 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.588656712 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.588021392 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.605856834 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.550511519 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.674207822 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.831911669 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.121052662 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.241025917 seconds)
  done (took 99.897830846 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.450094105 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.449154232 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.450091473 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.450918938 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.448285085 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.450849447 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.448631871 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.450917311 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.449978048 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.450405403 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.448845656 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.451077059 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.450025964 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.448664171 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.448564391 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.449660923 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.450476856 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.449869968 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.449868297 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.449244288 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.451189608 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.450346713 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.450271061 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.449109945 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.449713184 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.448722269 seconds)
  done (took 39.06199301 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.464083386 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.729565545 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.939731597 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.474101848 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.462163379 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.467784374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.555692249 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.465481413 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.468467655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.46478969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.630351113 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.46680731 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.502495228 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.970847162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.467191959 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.464770421 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.465442876 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.462127875 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.741728667 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.472833742 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.581045951 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.467069481 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.556601294 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.47378382 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.490053704 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.466259357 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.469313243 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.04756075 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.46693879 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.631101493 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.445171506 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.557394473 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.025779697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.93494051 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.438177726 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.46887766 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.468209469 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.634474156 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.467013226 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.465370789 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.559586769 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.466198688 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.931673318 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.170531885 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.484513233 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.467196651 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.073291244 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.634086416 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.762436773 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475063603 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965862519 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.469651774 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.468426556 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.467437671 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.76674898 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.475964564 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.466588153 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.111844328 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.488768151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.559974635 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.468275984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.466670185 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.748909287 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.465752781 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.735025186 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.468740259 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.476121597 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.490217761 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.935499735 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468286064 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.198971058 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.489090687 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.468968604 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.628704272 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.737141444 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.109404627 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.472716339 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.750247947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.038679988 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.559472023 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.473334778 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.039976785 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.563632081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.472608933 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.471271105 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.469989943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.471206778 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513973099 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.55912495 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.125754076 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.184786638 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.144172163 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.583770509 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.476466758 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.470346785 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.11584509 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.492576731 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.471418121 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.936023636 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.199792602 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.492120568 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.477275983 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.202699952 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.4940886 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.563459658 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.473898451 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.943190498 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.470398746 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.517777547 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.470885801 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.475894311 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.496125561 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565459242 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.472227798 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.47329833 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.166212454 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.662831657 seconds)
  done (took 194.160406737 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.46597349 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.462934126 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.471081287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.465844923 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.465139809 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.472780661 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.465978799 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.46651542 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.471021287 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.463851563 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.465845112 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.46526692 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.465743113 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469075431 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.475890859 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.470318444 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.076936541 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.46705886 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.473559615 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.465609425 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.307901404 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.466646653 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.469536096 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.46530065 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.466696762 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.469159235 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.481454444 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.466547341 seconds)
  done (took 155.936003991 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.473746437 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.145705279 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.478693633 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.631675168 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.49751447 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.471999031 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.626274168 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.539880103 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.47454603 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.472196116 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.471712502 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.834112705 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.47580464 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.088120829 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.712307898 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.632982091 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.088994706 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.495716027 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.473210413 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.472124089 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.634187382 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.487339845 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.833062373 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.147861353 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.4769466 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.15120563 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.466787499 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.475327884 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.471481648 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.150092011 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.473553271 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.837487314 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.565676635 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.544269141 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.15250581 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.091333616 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.110590087 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.651155974 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.473278001 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.473116036 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.472033903 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.463603466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.152870914 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475727248 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.477614462 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.145657121 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.497762894 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.477097083 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.483561444 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.471245309 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.545396168 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.54488199 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.843146884 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.156467898 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.566945672 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.489246729 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.631675975 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.910014967 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.481295129 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.09298103 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.463479331 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.157216513 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.500371073 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.467276151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.475979884 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482422336 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.653956394 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.631266926 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.094473522 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.497876714 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.095052879 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.674627935 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.47582186 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.475635215 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.478715993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.159069228 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.096222134 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.67547945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.636837814 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.713895386 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.468565207 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.477426973 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.468455357 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.568753778 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.478542005 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.157515814 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.116957148 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.501242821 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.480251501 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.479760735 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.481242306 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.69082941 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160556116 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.571685869 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.091766524 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.865808408 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.845372075 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.479063244 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.54925618 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.49985681 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.847755845 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.480866742 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.547611419 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.986810823 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.848160742 seconds)
  done (took 178.036239117 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.768764952 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.853049078 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.581933033 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.641668835 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.149230557 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.08629336 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.865701093 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.636183093 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.604637995 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.772473289 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.792980708 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.570695151 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.719852317 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.566481143 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.239898475 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.557651101 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584677775 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.642077188 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.637025479 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.662215106 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.209664657 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.796466422 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.696088494 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.568824353 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.58128699 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.386049853 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.101385516 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.065745064 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.669433238 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.962655379 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.05507627 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.740740871 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.571858012 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.246455853 seconds)
  done (took 71.969889171 seconds)
done (took 740.426184872 seconds)
SAVING RESULT...
DONE!
