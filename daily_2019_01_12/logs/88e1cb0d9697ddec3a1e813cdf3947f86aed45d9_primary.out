cset: moving following pidspec: 17297
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353561884 seconds)
loading group "string"... done (took 0.553910963 seconds)
loading group "linalg"... done (took 7.576231527 seconds)
loading group "parallel"... done (took 0.173163676 seconds)
loading group "find"... done (took 1.184779952 seconds)
loading group "tuple"... done (took 2.127901444 seconds)
loading group "dates"... done (took 1.342054321 seconds)
loading group "micro"... done (took 0.248938093 seconds)
loading group "io"... done (took 0.977692959 seconds)
loading group "scalar"... done (took 42.239706345 seconds)
loading group "sparse"... done (took 13.852825456 seconds)
loading group "broadcast"... done (took 1.127271676 seconds)
loading group "union"... done (took 15.004393725 seconds)
loading group "simd"... done (took 5.168916891 seconds)
loading group "random"... done (took 10.433260535 seconds)
loading group "problem"... done (took 2.049105519 seconds)
loading group "array"... done (took 24.317330678 seconds)
loading group "misc"... done (took 2.131513967 seconds)
loading group "sort"... done (took 3.66751983 seconds)
loading group "collection"... done (took 20.208177091 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574071509 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.159381687 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152293001 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151684668 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200436769 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.145705169 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157917681 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097966056 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.973974909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171871235 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15326812 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52628371 seconds)
done (took 5.195551705 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217439027 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094670639 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106259647 seconds)
  done (took 0.880627513 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078928796 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149611748 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09625973 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.08049821 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096717017 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079071584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097145667 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079093635 seconds)
  done (took 1.369876339 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08677531 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09897996 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082721299 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097828334 seconds)
  done (took 1.05457064 seconds)
done (took 4.289823365 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732374813 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276863869 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205037768 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464334922 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198249501 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220747544 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683757941 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.339766722 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254405346 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100072948 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134859473 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396007622 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139859661 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688238245 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089587337 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125040484 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182078694 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465608463 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082604936 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111081817 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118651941 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14026489 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127933654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090781071 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185250437 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084472628 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197094381 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.1099699 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080575983 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276203896 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201855043 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689499546 seconds)
  done (took 10.910839298 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112076856 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137595264 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099756209 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140120541 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136820573 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101419677 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08668648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098760408 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124467034 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179326724 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133205677 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122199854 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097553757 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08353938 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117853459 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248100729 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123862589 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101127847 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101833 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089760221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140770572 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116532226 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112080028 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094964622 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169957332 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224868525 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113288796 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128464345 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098838021 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115604213 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144323653 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145535625 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098207561 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08184401 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176142529 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125824748 seconds)
  done (took 5.215629043 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.098736265 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192282244 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124478189 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174750485 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082676292 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145572129 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095113517 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11554226 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257148383 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.10803966 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49208583 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14288282 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099512889 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099109333 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084812599 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099710186 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658800248 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160274117 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1189986 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117803493 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105346613 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087196361 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367789379 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098193631 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082604318 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10502925 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067467204 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165525724 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100264546 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158829254 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120969354 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08221781 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137313521 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205614469 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111181864 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137128594 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098638614 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081224193 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181443524 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107066576 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081304355 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123913033 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136656792 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138089367 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099431033 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083040394 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201981066 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096834201 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097689292 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.939943073 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180233218 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123055419 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10177717 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.312061306 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097560173 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097657618 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124234257 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079277186 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312062478 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190370085 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098281717 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079270144 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098165348 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081840532 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399522952 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080007699 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.741375124 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084667752 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108659553 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084035623 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098660584 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078309245 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10779357 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105701984 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103174069 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099370853 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083321751 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099859903 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080728116 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10150367 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109041508 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.221795201 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082055 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10009432 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079606805 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119397336 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129196848 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086000505 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098875775 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132402081 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083756859 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098642541 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135911025 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081783261 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110785361 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099731041 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142122164 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082715166 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175884201 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081068225 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096837404 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111037627 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103575791 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132669078 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115586265 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100955314 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.171546962 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081203681 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097015484 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083133469 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09740128 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083607052 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101837348 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07921974 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11366801 seconds)
  done (took 23.064278559 seconds)
done (took 40.976461144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.333451069 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105500991 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103174507 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103329514 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101162667 seconds)
  done (took 1.50373142 seconds)
done (took 2.238678554 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285415435 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173212636 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094743218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164749172 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092990023 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162734335 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158299186 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094307343 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21674544 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093910742 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160081075 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077291717 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093979497 seconds)
  done (took 2.623649839 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094670992 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116966837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083397082 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11085071 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07889466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113016214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095687323 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119339703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110814501 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086925205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094799374 seconds)
  done (took 1.831544177 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093887648 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114012245 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083812304 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11134764 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077899637 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111982714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094670185 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117877418 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110573651 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087407184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095197276 seconds)
  done (took 1.832765171 seconds)
done (took 7.00689734 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09126622 seconds)
  done (took 0.812920956 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925153287 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.61825985 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113664954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151011085 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.321133558 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175129642 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.472471123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12498927 seconds)
  done (took 10.833561016 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.145543945 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083126538 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102811717 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082899397 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100161245 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085853874 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099984548 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098730303 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081843509 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101770353 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083286467 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102091582 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10060294 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08500203 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098108672 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082691731 seconds)
  done (took 2.329931628 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119360636 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118347244 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105367228 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106750677 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085878943 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103583562 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104396762 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089226739 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101437236 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102661225 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089965931 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104727203 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102410299 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079839605 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105078261 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105933742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085037872 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105849389 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105743346 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089800367 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106986685 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095529268 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086394864 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10719379 seconds)
  done (took 3.253196559 seconds)
done (took 17.964624466 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159627375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107598591 seconds)
  done (took 1.008795783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095879962 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115040762 seconds)
  done (took 0.950190854 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09857137 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095067116 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120936493 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.10937106 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080053979 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096697158 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118989051 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082034212 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098382681 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081942451 seconds)
  done (took 1.731922468 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085072932 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110623139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10119108 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094536622 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10520854 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095485089 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087011302 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097588537 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109565751 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077335251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102292471 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113189127 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085798095 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115276707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104206012 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082513438 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100683964 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097785181 seconds)
  done (took 2.516487055 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080796923 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098929195 seconds)
  done (took 0.925448492 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083678697 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094482487 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081669927 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097003484 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093469449 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076350465 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093522372 seconds)
  done (took 1.369881124 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.443451476 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136597542 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264434555 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085630193 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12090851 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302288602 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096971922 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084829503 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104794248 seconds)
  done (took 2.442605804 seconds)
done (took 11.689210703 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094615659 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115795356 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115118614 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.457608283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106749621 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097092778 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145349804 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247992769 seconds)
done (took 2.136547357 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.1447605 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.594620909 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.426626906 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.236297159 seconds)
  done (took 2.014494431 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400583217 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09831043 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084426887 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082494376 seconds)
  done (took 1.425801311 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080797858 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101986869 seconds)
  done (took 0.94194908 seconds)
done (took 5.280135198 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080586128 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097156971 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.112505845 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097986574 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082275738 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099191232 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078922553 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097824338 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081454796 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098868927 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098213015 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079364915 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.098631798 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081734231 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095930065 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078895125 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098752916 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081777387 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096346023 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079427598 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096494983 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08130136 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096375726 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080026711 seconds)
  done (took 2.961919316 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100553891 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097915168 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103932084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086363755 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103191341 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087376374 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103906054 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10004446 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08705386 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101107927 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10286169 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086262556 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101124722 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086656107 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101372412 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10407865 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087809337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099706704 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084377459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10382837 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104206438 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082772186 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103884621 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087360537 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103286626 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103738841 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083844421 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099564519 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104045973 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085474393 seconds)
  done (took 3.650143119 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086603414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095441826 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079980602 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105708199 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078635033 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099130327 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079941505 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097438698 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081375001 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096540328 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080893328 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096584939 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080062303 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097973708 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080654834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100827752 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114874466 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079322386 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097094304 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080398481 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100349184 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079336656 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096840177 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07850519 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096554837 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078496016 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097894079 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079554878 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097179958 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079932063 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100508244 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083218832 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096453693 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086716175 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100246848 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079592436 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100747238 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07888248 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098464938 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097163324 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079123004 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096521747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079573114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103891346 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080256443 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099738673 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079531401 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098440015 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080463422 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101335524 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079494665 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096336651 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081574068 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098798257 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100566931 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079508426 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097414328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079531928 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098233333 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079632535 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097029956 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079590625 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099350533 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080622232 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113926118 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086493779 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097204478 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082209414 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098670295 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082597401 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09970869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111664497 seconds)
  done (took 7.302297693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.132313028 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125232289 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080546925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0975524 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076844981 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096608044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082425392 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094850334 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097231182 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084414739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096045664 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080576666 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099630266 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095115553 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097988214 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099694979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086823832 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095770497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080138253 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101388557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080592061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101513427 seconds)
  done (took 2.851248858 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207245167 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104175988 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141101352 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106418184 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082227019 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106294306 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104475932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088349847 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104552889 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085461124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101722853 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103883667 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084641794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102662193 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.214293493 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086791096 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104468072 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087135895 seconds)
  done (took 2.785774931 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09511026 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100165342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10093147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100415701 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100302411 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085131418 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105692313 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11060595 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085003549 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10071009 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092592636 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103372517 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102942013 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083575775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103069614 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08389527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103534622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08341455 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110146423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10720006 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089069234 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109423885 seconds)
  done (took 2.929692911 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098673787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103460146 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120559075 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086305863 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097294081 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081881161 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107600791 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082816633 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.109064561 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101487947 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082547264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10088693 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090209155 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100117404 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105715431 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082294503 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102507918 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083004397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103051416 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078740965 seconds)
  done (took 2.691389168 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104460621 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102752936 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101366361 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093410407 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102837411 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08467782 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111672944 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101449812 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084310597 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12644444 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101453215 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084722874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111643686 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106882688 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101734804 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093789337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111576372 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111478166 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084988367 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101324009 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127004445 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084481006 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110004836 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10170036 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085330567 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101899098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102509483 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09036117 seconds)
  done (took 3.603491681 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083102909 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101115787 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079607759 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098992357 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080683861 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098688736 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080732867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.101304074 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082999181 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098380558 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083307049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101671028 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082746526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100812076 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082695601 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101142086 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083191298 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098538933 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081034808 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098137936 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082940699 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10082093 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082934094 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098990912 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080753443 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100601887 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080643416 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098550883 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082912302 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098279774 seconds)
  done (took 3.505080699 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092482443 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107724982 seconds)
  done (took 0.976831394 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080992745 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11670946 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080203409 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105187645 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088184731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102038474 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109052546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08651513 seconds)
  done (took 1.547112037 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098755032 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112780502 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084953995 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115770698 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112093007 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100169095 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172463459 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1018146 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105430497 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079804165 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.1163509 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08250913 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107319847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083496928 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107391366 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090329512 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099473886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108551462 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086802576 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100377175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085190694 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114191736 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085553506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09857629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102618983 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092630955 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11447836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085331565 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105743845 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109603559 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090020114 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095530371 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08455586 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102779452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081577888 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11189371 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119364204 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08747663 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111697992 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103320965 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095517078 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096825476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089676179 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107526288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11190448 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084028784 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103762347 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079052131 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099565843 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086983251 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097507898 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084366928 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096788653 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091512614 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104779611 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113495893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083823393 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104205262 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086714901 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10625992 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09128549 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104580725 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104384264 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083519481 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112263425 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089425618 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112988671 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097458726 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078050081 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100282849 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094454546 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125241909 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108530217 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083829567 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102434494 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081338073 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104170572 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086057419 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109327499 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108170199 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083711281 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109466686 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092171293 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101819729 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104342707 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091863522 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099485799 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086470848 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099871382 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119946522 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081944605 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098819566 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081759769 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112817412 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087138984 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10101501 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081411898 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108997812 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095664163 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082065621 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102079626 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082682982 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111427228 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105327783 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088685375 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108367167 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106919993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083816137 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105627458 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079873921 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103529408 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087463067 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109140664 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077901109 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105362882 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085115091 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103342619 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110670288 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080218211 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099051954 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089201709 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105485561 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098555908 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078230851 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102267937 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082397461 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103485178 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089708353 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097697138 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076548658 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094467394 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102939932 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081941904 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103022856 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087827463 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103013364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076532164 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097609737 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10364585 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091479416 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098912929 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083315138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106077389 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100438269 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081180972 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105874977 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084702889 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098851426 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088077785 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100455403 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076788812 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102684191 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102444534 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081015195 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103308512 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085990314 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102409171 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100947951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080735214 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10649454 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08376905 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097900426 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081714698 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098232417 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110670504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084745557 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095178167 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07910511 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108199645 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079596024 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100982797 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083044989 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104745943 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103547338 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081758157 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101518827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085851554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115065468 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10742734 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085917386 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108815617 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096267804 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101782987 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086868159 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102089728 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102465987 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084750321 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110561654 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088384314 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106475844 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102478987 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078789418 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107145611 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089868983 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100896205 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080064715 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100039945 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105148131 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087614853 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103992804 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083475815 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099997267 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084333863 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105456421 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104783297 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082714294 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10216575 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090024568 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103223998 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110329505 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08583089 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114209223 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088011586 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097788074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087833457 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099057676 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106065909 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077847252 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097987415 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081999483 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100778181 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081110479 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104499727 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077069277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110525923 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111437675 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084779458 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102440871 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084889322 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110097145 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086899696 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108634221 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08773927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109120271 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113814357 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084288312 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107040373 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095650467 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104842461 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097474034 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09016415 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101474825 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084749432 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102107672 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082836915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106982721 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11381375 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093313354 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.098565332 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087524719 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102557285 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084523233 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098932293 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089745764 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106657357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104782537 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091855935 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104932148 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086394036 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107241043 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084646689 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10477298 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104893476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090623361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104183299 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08849651 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103639463 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087276765 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102765027 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083290928 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105840477 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10488192 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084823097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10916212 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084970257 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103278012 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088234461 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105355739 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104789385 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086260187 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103610095 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089044162 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104744275 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085959941 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107224175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.08143849 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111770076 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084661194 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111398936 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102822546 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080489976 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108836187 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088526486 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109422143 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104970846 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084671364 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10319637 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083821038 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105162876 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090361733 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101446627 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115836372 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091640092 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103478782 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087358067 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10466957 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086630203 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.103798792 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104606092 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086341477 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104556552 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084616563 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107798353 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088194047 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105100836 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087405633 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105087671 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.104587543 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086665227 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097176159 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081870083 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10204715 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08528461 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112933207 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101577328 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085924223 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100184144 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084659485 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099834893 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081049424 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113532308 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114203241 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087237944 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11306541 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085159238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106233006 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115566042 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077087975 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09931792 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080799495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09866995 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091628613 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101927369 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091865675 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101058635 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109911577 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080051947 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104006529 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081330069 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095571923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08070886 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104581055 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086006857 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099549562 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082530266 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104625134 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102438335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093452867 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100940256 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086521714 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105278252 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083247097 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103890158 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103772183 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089595653 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106672693 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084155094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101799028 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086679482 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105888577 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087487551 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10464864 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087722899 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112251418 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105443238 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088696187 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108603397 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080735121 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108249113 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085835565 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105226233 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103770108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090284043 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108634167 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088076857 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11535946 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085488308 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10610455 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106125595 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084114401 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105298573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085841203 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104973938 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085516628 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107011093 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094573873 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104095078 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107733132 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084759971 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103946229 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093156375 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105533816 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08734762 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110553783 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104788185 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085558911 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110312062 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088020457 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109450307 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105511721 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086748055 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109856651 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085451808 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112609198 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086788012 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107136338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106892757 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08413926 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105361263 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087179216 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104528283 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093044874 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107583382 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085335288 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105712977 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08397039 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107835583 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109563501 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095349971 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108541665 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089545305 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10115488 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083214695 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107451496 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102852221 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088352045 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109413939 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092842213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.108136491 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087003718 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104747995 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116062314 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093957267 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109598525 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084277023 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109827775 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088220056 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10879804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10711454 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086876595 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1073819 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090476473 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107398433 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086088893 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114356033 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090182751 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107552826 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108186505 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087616421 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106221891 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083083449 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107171367 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089783584 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111928925 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089214251 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107084893 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117853485 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08716499 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105340779 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090478588 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105853302 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110972132 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081927935 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106894839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088617696 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107655413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.08274996 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106487034 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084744542 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109353596 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085841576 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101835598 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117760521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097776355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10987198 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085290148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10509492 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081775313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102122329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10642432 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087798621 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108131742 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097451552 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105934038 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085923523 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.102214052 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087079722 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108934391 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110082771 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084834541 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102574874 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086091551 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109930797 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092345507 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10542902 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086789398 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109982882 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108539472 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085402069 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110139755 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084014521 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110702399 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120827215 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088541768 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1068671 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093965379 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114633782 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088622182 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10266171 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107131161 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091166366 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106057314 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090057853 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107904312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123538421 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091293266 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105112403 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085600896 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106882088 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083772429 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112120629 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084759059 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104132251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106862498 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086630639 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11216404 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086444205 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112466952 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10647775 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087719741 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10514077 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087527076 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105225312 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086469004 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10801069 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108570502 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091006732 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114668899 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086263565 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117790564 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113408875 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089488261 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099338899 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083129854 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104267685 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081381818 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107434135 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084114579 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102803828 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103121228 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086283987 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105380987 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091203197 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106213013 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087804879 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106744856 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081452148 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109267544 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08968771 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10853431 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103092735 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087874629 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107486615 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091220749 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111198905 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087843474 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109289378 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089343784 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107687986 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102337824 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093863948 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106092585 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090795897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106867375 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088205172 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10882442 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091240044 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114630818 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10863403 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090209414 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119457879 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08965765 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105322494 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103894509 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093615244 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105257135 seconds)
  done (took 59.061749975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147923721 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080762051 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100180413 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08117445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114173407 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101603769 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082067404 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104155774 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083831163 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104640609 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081186999 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102242795 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111928769 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124140892 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093150298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10451403 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079586834 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100017653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098613533 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080952996 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108658688 seconds)
  done (took 2.914020904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104376365 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1206901 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114868797 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118718223 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090853511 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115024114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115656651 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11514469 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099025963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111633274 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117572019 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114792922 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.09159711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110546277 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110786198 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093354794 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118604248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108715468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115692064 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095796956 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113419765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113869225 seconds)
  done (took 3.229779901 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084576001 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102018336 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085615781 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09869262 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084015025 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098854626 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088525434 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101347589 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087512 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104549014 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08387239 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10663966 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108342764 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080708687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106510904 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085431369 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157707945 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111532225 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087761319 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109922849 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081523842 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110582199 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103046273 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083072764 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.107232006 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092398617 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108109763 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085727889 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107874252 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086117215 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107333355 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084559869 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108513427 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108009103 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085813369 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.106838595 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087249658 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107050168 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082480614 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105510085 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088521263 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103948977 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087885815 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108485899 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085243999 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105575616 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088457425 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106587641 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100881859 seconds)
  done (took 5.625247158 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103532341 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166939187 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090036554 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148751568 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125500462 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118482111 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091740629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14897114 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106277725 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086326043 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125914761 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121113819 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103747448 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091992966 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111872794 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108706048 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089967476 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106404262 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092574441 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107840958 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113003802 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095786741 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123583517 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119564103 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111571242 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085678647 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107592269 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11393405 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102367874 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.113930605 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113809931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094304122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125513199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.114409228 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087549669 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.111566973 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126815245 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088439286 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112106709 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105283881 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09055815 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113536263 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11526982 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107180015 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109349318 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113225075 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089073002 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.105779357 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.12201171 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091075561 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117239017 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124223035 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092571061 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107309937 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112225351 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124957682 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087583121 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106798603 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091520822 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122891477 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105438686 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092830237 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12246698 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108330169 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09357118 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1202122 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110932737 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109437287 seconds)
  done (took 8.400042408 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09393623 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110505923 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122110255 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12077176 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090821669 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11133981 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110723604 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090911438 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110509763 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115607135 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111103126 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133583938 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086456183 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114149676 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111743483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091927401 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11091618 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110785218 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092021269 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113269043 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110945626 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121603349 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090917712 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123986034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141815686 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105481884 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091219117 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113822698 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123336346 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115313229 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127425955 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094836108 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116381933 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126265098 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127590072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094185671 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10822276 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114621039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09623043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114558856 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109244763 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103524784 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115223455 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107679142 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095388094 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115436433 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123058984 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125268623 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11555538 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097347871 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110869691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120036524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110531701 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091088681 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121238541 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14661548 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12024273 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121570316 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111206378 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100852536 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120375659 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128608388 seconds)
  done (took 7.754401697 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108421702 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117053605 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116244776 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100273391 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08252246 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108786727 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082971207 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102479083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113905061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095262151 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116766529 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108725014 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093011213 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116984389 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10788676 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111746326 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090248863 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11253522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116359642 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092388763 seconds)
  done (took 2.936095078 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097602367 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12860578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08945607 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116209674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109331369 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09360085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112367773 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111267761 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087444681 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1113223 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098195421 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119217686 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104799944 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092660378 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117441393 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111469235 seconds)
  done (took 2.551593589 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097811379 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119257278 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120143711 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08718485 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106832984 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084027676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108754624 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103577968 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081541913 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120534813 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085634531 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107785716 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104873222 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083146558 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101326964 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087729768 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103099562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082608371 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109020243 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124759181 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100855737 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108057588 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111413715 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090596902 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110946292 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095408338 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111209375 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108332086 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087695289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110023058 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089358246 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117275826 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106244883 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086816634 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107369057 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087008562 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109925386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088809812 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112499855 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109533254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087133542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110022792 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089390611 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110763963 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085567823 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110555002 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106069222 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096111974 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107801835 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089180101 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.109345345 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091147356 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11190252 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120668924 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093480527 seconds)
  done (took 6.427305105 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101256921 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11238335 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08477715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108033095 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092338134 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112655708 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114667209 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092234638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112041561 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086957373 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111917892 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09361485 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1118265 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114757066 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09104226 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113818824 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08512045 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111599213 seconds)
  done (took 2.705527562 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091035937 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1080562 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095653345 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110277395 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089212372 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113938855 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085120087 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107253136 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103277379 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086154894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106721909 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090212356 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108713087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090820409 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110418792 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089447907 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112650605 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109299561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089966256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106507647 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092142953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108905239 seconds)
  done (took 3.05906162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122916163 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.130839348 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097587751 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236082855 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106302306 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.136719566 seconds)
  done (took 1.684083098 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114092413 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125943688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110710182 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10965294 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120585133 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090951799 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113293618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113010194 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123616859 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105190726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112893175 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118937407 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119827828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097333826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117458958 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116698665 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112397641 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092751428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11161871 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133726944 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09144996 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122982326 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113530517 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091068556 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112950817 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12088189 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120958906 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123725909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08739318 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118887118 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113954385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086985855 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12028825 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122868795 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109954795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098225836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107421826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128063179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114271632 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096028932 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111104603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117917624 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099889303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118218136 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116874366 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107892888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094078711 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107765713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108629651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134504991 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09384255 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119797464 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116481753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120014234 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09826739 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134959161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122476914 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118896104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115318517 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122445361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117679382 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093832996 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117208939 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122366267 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115607347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097027141 seconds)
  done (took 8.266155064 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106059365 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128215076 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108931614 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123038514 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097510646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109145024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108873277 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08893811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113299428 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113493483 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157681319 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092704772 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122475232 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1225992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093348329 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113260648 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112706436 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123035264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091726407 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139871875 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110611499 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122169024 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120875858 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097663337 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125020061 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113990171 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107723501 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088161219 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109828778 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111809358 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095308793 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111310151 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120710168 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089799759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122802298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1120141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092168728 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118696183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112491347 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120543845 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100974101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132730648 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112842975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114165623 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105802721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113749509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112565354 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091955761 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114219054 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113697358 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106215881 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127533064 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124955555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118707934 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110709823 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089369167 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111332144 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113311654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090002892 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116820184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119511016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088872759 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138604308 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108558721 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107886507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119806918 seconds)
  done (took 8.236795158 seconds)
done (took 158.413432593 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219566158 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198663168 seconds)
  done (took 1.276430149 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088186341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141833929 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101813271 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174908467 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085654105 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140521593 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138790357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098004508 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109511471 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088035899 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.110867462 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090498505 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17778711 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086231572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108741377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109490672 seconds)
  done (took 2.714246094 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.116424027 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.258390807 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.127534536 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108910096 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091738104 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11429873 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088095737 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116545684 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094964404 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.110692911 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092737137 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.112532037 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088919048 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.112941344 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094280936 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.115417853 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11168286 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093156946 seconds)
  done (took 2.910861182 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118586294 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153933496 seconds)
  done (took 1.14660892 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.246779956 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161610017 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227991408 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468892715 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.270030617 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.358590431 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.199022137 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210568473 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166869752 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.2086145 seconds)
  done (took 3.383168291 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123160262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184656315 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319446603 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156538364 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107187979 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129964682 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160186301 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131115372 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.126402956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123478367 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100956589 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119855428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139646339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096266963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119857131 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12107031 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120994211 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114340664 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115490494 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095224394 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140745169 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107067514 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094692201 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11638744 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.121094414 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097839218 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106222504 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08530454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11905355 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11620637 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092642736 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128384473 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119186127 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156130165 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124613715 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156330981 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119416338 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092218783 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118487269 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091324579 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119291008 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119066348 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126110656 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097235345 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105943868 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097211164 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10701996 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084957186 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114895896 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118960008 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096136178 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115465147 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15540943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120683957 seconds)
  done (took 7.454611453 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.792495606 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162194541 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096528255 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888641502 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137390657 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105844251 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78182799 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112431491 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259087818 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758076434 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140562714 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101845204 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233815765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257629404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92614114 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287925033 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.643059042 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133720696 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160036066 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160522415 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123544864 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120330721 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138515929 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436202485 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117217506 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092252904 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125224581 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125254263 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165952936 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.129505589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094608217 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206711906 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251074074 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205544332 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095463347 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.116549976 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094554374 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199514169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27047032 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194451396 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180069931 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110689646 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093245453 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128766687 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13887095 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091818509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192125589 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18208811 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.175050799 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118622165 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124647919 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103565178 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127289633 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172675467 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.126538631 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313991185 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316467423 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091080248 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127269128 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133084914 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243958686 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126130838 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226677728 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139081295 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189903862 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112295059 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780593791 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171565215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112760227 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097491611 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123660324 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117287591 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101447943 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174339971 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.413346705 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13111659 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120453521 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095620037 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236915247 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.108396482 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118962926 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169562592 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123978628 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128628561 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108014469 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128849284 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175201024 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.255920982 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100858942 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122280158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115550491 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103962491 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120703376 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214909742 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221805508 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165533779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233419136 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101077801 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186814099 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168572689 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119151245 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174267118 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11933528 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103115819 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126318634 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221492785 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145650153 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125045329 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097437759 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125607425 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155347628 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.134652943 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10276664 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.200899972 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462105211 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172692393 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11406919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.134937568 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100916544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189634747 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098590059 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269027832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122977005 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170495132 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12016531 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089353556 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125508027 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170157456 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125875911 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127641252 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106655981 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125946011 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.240647285 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223598538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125331476 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226651131 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185104208 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117802777 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170846742 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12192529 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169040238 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121506675 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101792137 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123558538 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780469201 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124337048 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100840709 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118173022 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188377243 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089898199 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125232036 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124586674 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086824303 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809790111 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127723514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121198335 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102716889 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118729711 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120714415 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096516921 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118478738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160676611 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232334236 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1197397 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099639936 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129174294 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161525413 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11973116 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125648087 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125788785 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10332538 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124722989 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115994371 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104704374 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197081753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165556641 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220352689 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575091188 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112901546 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12903902 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211961929 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117954535 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294653677 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119425036 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204738619 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185121413 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099502374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320048678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165099804 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187099567 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127501197 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172689558 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10905485 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119026719 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168553215 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112103757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099341901 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169653407 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131845447 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128871802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953655736 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090736305 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251765541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088847034 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177945236 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123605897 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126694003 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294812567 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093465833 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136029117 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172312463 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121138732 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.132166111 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.864561339 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12463092 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102422757 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11907943 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223755581 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16382708 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120721028 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118954901 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098913703 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.187749533 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21030807 seconds)
  done (took 44.782995093 seconds)
done (took 64.529177919 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286403379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222919705 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271016946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170521427 seconds)
  done (took 1.925628886 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179637511 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152811901 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122280074 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11307339 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156313768 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089293066 seconds)
  done (took 1.709911353 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.366639558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275644232 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24381442 seconds)
  done (took 1.789085246 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.298798052 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253553108 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473810177 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325691156 seconds)
  done (took 2.372423353 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.217162424 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138376122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113400237 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103736201 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202942012 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247132787 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143407821 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202158576 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099298965 seconds)
  done (took 2.409105775 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197956104 seconds)
done (took 11.298807608 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.331246632 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.237244691 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.258213738 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.237625336 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.225471617 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.240667005 seconds)
    (7/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.164041609 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.259363186 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.239216443 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.133182029 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.103974356 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130264698 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125162878 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114425423 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121326669 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.169520455 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.169344757 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100862925 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 0.176070371 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123845419 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184955815 seconds)
    (22/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.167736056 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.132247885 seconds)
    (24/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.211568514 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132395567 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.188735288 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.234599154 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123126599 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.219450711 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095210104 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124662571 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.133702024 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.07486649 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.141700449 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17214391 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.137158377 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.088919309 seconds)
    (38/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.180228858 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121638733 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090385258 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140954815 seconds)
    (42/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.216171316 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.145491873 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 0.225784494 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212255806 seconds)
    (46/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.125006559 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.175396179 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.141243775 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197614127 seconds)
    (50/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.152818273 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.121941518 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140496788 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097713765 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.201908673 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188746048 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094228016 seconds)
    (57/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.137590342 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113059792 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101301039 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138151332 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135394186 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08628051 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.094718679 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092292412 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.206975695 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184450544 seconds)
    (67/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110295033 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193529041 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122334018 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158577864 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094143999 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 0.17293143 seconds)
    (73/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075602785 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093212307 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.174566722 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.142019733 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205438937 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.136744939 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.232197904 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.127316607 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099416045 seconds)
    (82/309) benchmarking ("sort", Int8, false)...
    done (took 0.194072939 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.14411191 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125344385 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090303553 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222988351 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152668674 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165637598 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144129738 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.111536526 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097552029 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10908779 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098406681 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091187221 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101777227 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.183552907 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126298116 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20577968 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191932131 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.139124443 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091062204 seconds)
    (102/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.125591301 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069731315 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.139918298 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182575363 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132466168 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092990337 seconds)
    (108/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124806219 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.114142744 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122029002 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.1382474 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092329866 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.122154274 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097070726 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.207828196 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144854466 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.147284494 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.418866375 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120231093 seconds)
    (120/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067311437 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.198208475 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.1355602 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087344622 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.096670984 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090483144 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.189797134 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.148126375 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076777806 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166387356 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.070855137 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.192110478 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.186956051 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.189288813 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100915936 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123309296 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.087179835 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116230636 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096675782 seconds)
    (139/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117782267 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.210977548 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093893775 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117557128 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086923201 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084476167 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137467375 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.120228546 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065466131 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117775956 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09060257 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109840388 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088181052 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179947879 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14029866 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.096662373 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109477885 seconds)
    (156/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.097806668 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117602854 seconds)
    (158/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091133492 seconds)
    (159/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114527151 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083844433 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.18147595 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068233037 seconds)
    (163/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170567646 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066144716 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119186348 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067525859 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145878653 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120588639 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115109372 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146470898 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085539851 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133003326 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.088157777 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.11111204 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086008757 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109560616 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138064641 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08711425 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.165051907 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.098019938 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112858549 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118423294 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066075413 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21608003 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066409502 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090442351 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.149267618 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138230428 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117882569 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.135385199 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.118888144 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.072305106 seconds)
    (193/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.072259383 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122972068 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069826871 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.123912103 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065960505 seconds)
    (198/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090014435 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.193315112 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091517088 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097263243 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09094886 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089211603 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13586132 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.073144361 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111591596 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.0948233 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179776819 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11130754 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08621705 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121291959 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090126743 seconds)
    (213/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117462691 seconds)
    (214/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067348126 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077995064 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.095504104 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.10173088 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124178363 seconds)
    (219/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118790968 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.185907019 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.226102566 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13686554 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087531482 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119161358 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110987785 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.092178871 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097660525 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119925841 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082532971 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11605607 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088032498 seconds)
    (232/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093114044 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084980862 seconds)
    (234/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068527839 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.183494549 seconds)
    (236/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105670141 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118925201 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130802245 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067773302 seconds)
    (240/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.103157151 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.127350575 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19221705 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088525294 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.135611891 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114852176 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165739962 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.202511478 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111501079 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089507344 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091868177 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06669398 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086466515 seconds)
    (253/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163810524 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145315755 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069089933 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110979488 seconds)
    (257/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066985387 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093830948 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110716337 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086779205 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111533029 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068103185 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112594792 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069307443 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118907326 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093281417 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121987458 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066849379 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142166119 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067196575 seconds)
    (271/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116095622 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076379287 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.15258348 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.219467549 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09640859 seconds)
    (276/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.069633058 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097896674 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096474685 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.092883056 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078460584 seconds)
    (281/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067973747 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112402424 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094083301 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136692667 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109412787 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09316927 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109997931 seconds)
    (288/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067457644 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089840163 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118277889 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117067776 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069262148 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086750968 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.121718885 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08863879 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112165276 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093485328 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117415715 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086488465 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091756227 seconds)
    (301/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088018101 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093278148 seconds)
    (303/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086311292 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.093312056 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068046363 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086626283 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217496335 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117671869 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067225881 seconds)
  done (took 40.613718757 seconds)
done (took 41.514021591 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105576189 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.157156969 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102517922 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143005245 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128219364 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091669827 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.12014942 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098262322 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123930416 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125747339 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098765999 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094027504 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096527836 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120833682 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096773116 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139456798 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125774745 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093170514 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11944217 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085830529 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120592183 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086472498 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114987198 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070147352 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122642003 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094666592 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116488692 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120949287 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086453285 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.1111366 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089836993 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118379152 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086780993 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124521174 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093112728 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119155681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097149943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120653657 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088662761 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110482749 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118491967 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08664512 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117941263 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095004494 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116717952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09182596 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1195454 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099282181 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141578187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119632399 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094565956 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12421323 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096675491 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118192209 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091301982 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120352017 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092254761 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139386156 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.124041947 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092027016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119457573 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09559624 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116566919 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094648549 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118961736 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122038101 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09840097 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117032397 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097934219 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11742328 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087060905 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11946095 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091061625 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111350385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096754313 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.1219514 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110641411 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093215585 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118289951 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092262466 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110939621 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090344369 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113022102 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092921552 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114202319 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069883233 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115355141 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092866122 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111137354 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095450254 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117612251 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094979963 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113622883 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098656893 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111559461 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093159314 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111358762 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08696918 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113359855 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091251028 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111616967 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089723774 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119768438 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088552613 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118117201 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12382647 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087177773 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117892129 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086951189 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110996007 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102248288 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121949502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088004093 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116998444 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086322834 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120921874 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086855729 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111684377 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087166314 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111862099 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093860835 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111473339 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113823178 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093841589 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1254245 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086540713 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115010412 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089654736 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113315311 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093954037 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113106236 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087100399 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113997514 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079068232 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116544954 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086987624 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120782169 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089568882 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119573238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089205769 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120222279 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092448434 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117306386 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093396942 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.1108964 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074145964 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116822562 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089293257 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113884142 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088197786 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114310521 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086986904 seconds)
done (took 17.062386575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093515043 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.191508004 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152194381 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143807334 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108252722 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112171888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122217715 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119648502 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11399698 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143678132 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110945546 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13339559 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148680694 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086748659 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112231593 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091549072 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114194767 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103481807 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146723761 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133897664 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164301758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086032178 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148398927 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136144034 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121444383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114903686 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113783996 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09114281 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115642359 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10374548 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133637635 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115406291 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088136605 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134863523 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105191243 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120917776 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087959809 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119612124 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087925785 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112272426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142610305 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134092637 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093118396 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118222282 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091703092 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114839058 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088968179 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121881463 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098903983 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116662118 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126833359 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156582399 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090879208 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122802163 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086632256 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123576993 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122560148 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090389165 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112787237 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090569189 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11273618 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091747188 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128027709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143225589 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092568564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122413268 seconds)
  done (took 8.676825664 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10478228 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140582545 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106532744 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129916104 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112371327 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087771966 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.130741887 seconds)
  done (took 1.775948113 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088662008 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134865249 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11143888 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137697298 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132865733 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108625175 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126151392 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.0888631 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131464152 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089960308 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133641207 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153521207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089979834 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121541854 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137883264 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088701748 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138286519 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088125536 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117002524 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112640226 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1165633 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135021758 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09030576 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114445793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103820432 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114047603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162923712 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093609627 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115086704 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091874579 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112366976 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166977402 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102739027 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127762821 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08901972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128752858 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128692404 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086733528 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130451931 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093809826 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128480442 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08955371 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114684175 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086760606 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118517399 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124814513 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089992007 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11483885 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092536687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135110359 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090125756 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12806321 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088960433 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117462851 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090745037 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120108282 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124918974 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091040362 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136063346 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090651559 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131839857 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105631737 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128634797 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131570248 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091795316 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128612974 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103023197 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117176923 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090907944 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116997355 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130872701 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086936215 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116113497 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098906971 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115778617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113020139 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138336441 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090799311 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124731378 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11442015 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090040948 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114951943 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11275786 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119181555 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089473524 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119806995 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092349066 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112769274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088306718 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118041654 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08784332 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115223916 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092662327 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1147149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118525982 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105932015 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11628398 seconds)
  done (took 11.861961386 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089888089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115250956 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091405664 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114820597 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091104934 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116126626 seconds)
  done (took 1.590349756 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114708285 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119098323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104747988 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120277718 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159076216 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103818737 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130311582 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124887706 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108207366 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128388637 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130913692 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106055205 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136943275 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121384121 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104042771 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121168273 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130445199 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100176016 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129295526 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097308185 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139374963 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122655979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096570027 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132935569 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119469798 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095894002 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127293859 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103222629 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128444162 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123536325 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095959056 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119211314 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096882762 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123605638 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130670806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096998125 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122856454 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120270583 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100478785 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120338827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105534185 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12246917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128613596 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094029414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124419439 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122820007 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094092854 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126235482 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104634934 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12007756 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120574954 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095474741 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119933944 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094434352 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123229793 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123731753 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094030595 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131156982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096319016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12223739 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119502694 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092940431 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125327707 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119408274 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104861265 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120985678 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096506981 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122617348 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122655845 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096439785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120297948 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093288089 seconds)
  done (took 9.281847442 seconds)
done (took 34.148559544 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.699156803 seconds)
  done (took 1.679626112 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714464228 seconds)
  done (took 1.696970338 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.410834779 seconds)
  done (took 18.382681608 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.508962617 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584821336 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.819964052 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17999264 seconds)
  done (took 3.073812913 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951846907 seconds)
  done (took 1.945545296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297223946 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259059092 seconds)
  done (took 1.542039523 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771153563 seconds)
  done (took 1.755242319 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.350824473 seconds)
  done (took 2.32995751 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333169737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186254866 seconds)
  done (took 1.506227974 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555452634 seconds)
  done (took 1.543443786 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.811005942 seconds)
  done (took 7.808168728 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259314646 seconds)
  done (took 1.26649169 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303112521 seconds)
  done (took 1.293111346 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.584171596 seconds)
  done (took 4.5748778 seconds)
done (took 51.385184998 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099117505 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128726425 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102716377 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126045057 seconds)
  done (took 1.451111539 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101391999 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122052358 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101256561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121352572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127740709 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096632432 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124194415 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100630902 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121128562 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096961761 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121815638 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121237028 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098896872 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123642036 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094542411 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125120557 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09967359 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121944065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124315488 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096835383 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119710036 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098409392 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125447377 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094471014 seconds)
  done (took 3.677967658 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100589362 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120124169 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096924735 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119223496 seconds)
  done (took 1.437123656 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100759515 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143243946 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139276582 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100119478 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.14313816 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137201282 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092368527 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117967827 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09374021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126060489 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090512377 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150230388 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138069248 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099494584 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12818919 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089096502 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117096426 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137330063 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099808408 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126386224 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093475236 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125729542 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090642121 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140078126 seconds)
  done (took 3.819485396 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157745928 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150946222 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139844052 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095150297 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.156355 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141223239 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087792637 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141559654 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087667352 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132494688 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119413091 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1335699 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129094661 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088822595 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114746752 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088431636 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128215673 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131900413 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091676692 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.146848314 seconds)
  done (took 3.466899045 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098768357 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118656895 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08839334 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117540369 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100942179 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121902563 seconds)
  done (took 1.647092372 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09021822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115799217 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090601445 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115370129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095609462 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115964645 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088521539 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116704888 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090058172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115717618 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089446086 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11450445 seconds)
  done (took 2.239967951 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.457052486 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09231696 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121637452 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112369666 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096482827 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115184916 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103557028 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119136845 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140826694 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089065052 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115329632 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0919259 seconds)
  done (took 2.656215869 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238943492 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125610734 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29360156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193586063 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160329895 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171944084 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154467336 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167266354 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226488936 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158763095 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210891637 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222821553 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126399468 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219370206 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112167452 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146357599 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228262539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22119712 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155882914 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233869855 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203448517 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166594186 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180068465 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153424643 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139077252 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171063235 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121847796 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105378255 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238290847 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181380563 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217696696 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164535417 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147163856 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217740732 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251685042 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224085154 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189921165 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136665636 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14594456 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164446423 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267639982 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137274246 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238202328 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159814199 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10506244 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222542184 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169026733 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175785196 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151402712 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139567449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200701181 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243063972 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19431017 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139364901 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165002758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161686827 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169455269 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153033831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254751245 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20106325 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179205464 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12071367 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147600856 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192103886 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183199924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167868848 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209184843 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147366157 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19404719 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186864237 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167440727 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218961309 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18337067 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138525275 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171669214 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175546267 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171776036 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256929344 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178515151 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122274397 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169655512 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149848867 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132324072 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168922874 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12534318 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241265871 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123856749 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135305298 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164540992 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162994301 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162828673 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200374536 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221723745 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1480939 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083670524 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156404786 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155408175 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191764395 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140351122 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16198522 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162205961 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130034407 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179505941 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097229414 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204474181 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091874838 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178690076 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214471956 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100261145 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159559714 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154473443 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148315779 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180804278 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200600766 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142408154 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134089559 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209176054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176729314 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150649397 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180854024 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227192291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115875833 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150167749 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228509377 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246473662 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11300938 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230314879 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155917955 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107940452 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135062122 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179734041 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157520541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16198832 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134167381 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181803106 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239470322 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099195436 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139141267 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189548333 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134155837 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132817027 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161382161 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148721298 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111905342 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148720932 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153142969 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182009007 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205216964 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126147656 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19468964 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124594036 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25133099 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14208516 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14986357 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149706116 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094037903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222827735 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198430562 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13123199 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205878296 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173520834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157678814 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173026098 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13542196 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178102354 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130468069 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093887078 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219365073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168057851 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164410535 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196473685 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156843806 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184979729 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181343026 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200869118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175935623 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165479874 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158572134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110975296 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160447051 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166405711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123448603 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143910258 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134433231 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130067651 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143543712 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134545981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20118414 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199664205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122132458 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159336882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150439928 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181275658 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128766321 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179913671 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176233252 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14738049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224064113 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193196373 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188619982 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144204201 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233595606 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094583985 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126091629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143136481 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172047922 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106849622 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1362254 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167544644 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180818447 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213363503 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176651777 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164215245 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178867324 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192589592 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123754281 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140258903 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214241248 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176493151 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163333418 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13850241 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152662458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176270696 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155992045 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25948013 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168075974 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177268549 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238130524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150152928 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106040216 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152172977 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187854297 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15450172 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20444616 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121224384 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141485958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162413772 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133550916 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161267284 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185453416 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163889687 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218523422 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151725924 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188431691 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127708683 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167165798 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159382058 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165814277 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08189541 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176617144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231321149 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148552211 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171859037 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194793738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132640142 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179224071 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214028423 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22464466 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137979616 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158963527 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159588772 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136989518 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199933563 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178974481 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160856212 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19105155 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158159077 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109530595 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141345868 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152054255 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154691497 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133986758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149248519 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17639674 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112160969 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216851924 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162452927 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158613218 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171522064 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151227862 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.11800716 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152719638 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24432483 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17615145 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243925589 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122093344 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179614141 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233946205 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126709957 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105688038 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13435139 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180118899 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136892889 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191673372 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148852058 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158161631 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182702745 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19399047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141034363 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092501714 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157244429 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173215874 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164777631 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152595256 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159159728 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23782001 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115300492 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133321972 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173734738 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157848331 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147670412 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199772076 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079338503 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150287306 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128919604 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105640916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165539427 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238093937 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137118202 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181202475 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172989964 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168849019 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165937028 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150189494 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122198809 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165802895 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230280565 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186661951 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132054687 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157795316 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17740218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196693733 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160590667 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140836778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204948302 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220867329 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.200235113 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142954656 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16928646 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170172014 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158264797 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188027611 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136808601 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207213322 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135206104 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226272535 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155002406 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142685657 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178024502 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121247815 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145652129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216391827 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175591678 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108068555 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134291832 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168934114 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2039526 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155308282 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100743539 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182400357 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126927542 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190830281 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260370689 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134787009 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153501719 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119360765 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136391832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157488541 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159432363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140989334 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161829931 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209886514 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136010944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193440338 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231366847 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171832539 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175381159 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144420401 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694527591 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131683703 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194577121 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155870505 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205558664 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153372881 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172907487 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158961872 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169183446 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224862309 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161468978 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232808472 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194410944 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176004745 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133397703 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159069987 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163415269 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144697505 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155008576 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168545282 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161167912 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153095707 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179115327 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171274447 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134988966 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112093821 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226515363 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156115596 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188575015 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180866546 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13957695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172119206 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187781884 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13503168 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182301316 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239001739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142826012 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150735357 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106776998 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156119525 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262821751 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124991697 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201237264 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175671172 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158789798 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167151533 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14767973 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189214572 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18543688 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179511121 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1470856 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160272166 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128014453 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137251769 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13042917 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154766211 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168505786 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148872806 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160734652 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138779642 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188728314 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124629993 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145350676 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157113468 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192000738 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243563799 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109870044 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135758963 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163365416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151346917 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175244803 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178708423 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136208172 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135453186 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109008635 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159218529 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113102163 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156192501 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156930136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166032853 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232657613 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110309316 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281793689 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139800886 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153010822 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089981444 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132426568 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150842793 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14611365 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156546527 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123708 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25931518 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146157088 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105611857 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147974881 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126366123 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135632069 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164674943 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164689635 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176026671 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145030499 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081454106 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15857736 seconds)
  done (took 81.321809234 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16209151 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131433589 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147787316 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20278096 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175873739 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269302672 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210209077 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253753897 seconds)
  done (took 2.635773601 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094371571 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146521368 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152162904 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133496522 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091454131 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119471858 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.332743333 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134447751 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091656087 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140285262 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147662318 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11849884 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.51288016 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.125867593 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118499627 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08237606 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116174165 seconds)
  done (took 3.735623638 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.459482829 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718837654 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.478198657 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124608387 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.122732373 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134062814 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.775496842 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.210265903 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09490816 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488292159 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772330051 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.17992333 seconds)
  done (took 18.645749753 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099100352 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121421371 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107930342 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135738984 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096465831 seconds)
  done (took 1.647884297 seconds)
done (took 129.380625315 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104016904 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411001383 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075086617 seconds)
  done (took 1.610259246 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107104816 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136672972 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109877992 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135936041 seconds)
  done (took 1.59145638 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097643237 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127382636 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109521185 seconds)
  done (took 1.430785517 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321816215 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189241889 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142196148 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106269161 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130297457 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103188631 seconds)
  done (took 1.43449968 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096729404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128164686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09778237 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130462427 seconds)
  done (took 1.551488891 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094824652 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077458646 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100394973 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074898349 seconds)
  done (took 1.441871726 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113263046 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131499813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104928435 seconds)
  done (took 1.449093968 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129362313 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138737331 seconds)
  done (took 1.368147646 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105262614 seconds)
  done (took 1.200764177 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118389409 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169035807 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189104581 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164148803 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229139725 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166302299 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141376274 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114104468 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131038804 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145193085 seconds)
  done (took 2.668445699 seconds)
done (took 17.597310414 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103552924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418022177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413204417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116490851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723047197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380592563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.096626956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149278882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166723636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093561343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13975905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674011415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.052299218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.388701176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.010231887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471388221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705023426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093315411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120636068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09504517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.080573977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092337076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122062919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092372396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70402137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426906372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094586575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.470766089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09336994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127369903 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383118205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124052614 seconds)
  done (took 17.311349132 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097390323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175369993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098477104 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137424601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124825062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095425465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12501518 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094626773 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179983305 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12282731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111715535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121403927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127154815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095072026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142646835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093702727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125539234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093186976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121410814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122926257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112131737 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120682159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094988146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122330756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094938106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136255761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124517262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092864499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121690251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098765291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127856123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094921441 seconds)
  done (took 4.850600152 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140919752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183434702 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129217485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128044765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172221983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124149002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19992755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120549506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182441505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123819772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140199009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092783448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156571632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126552793 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114307039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121247886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09639334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122066273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092771834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12306392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141611512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093059221 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121888657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093141221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124084529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108560412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124231793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121733576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093057721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127314228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100060299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123719762 seconds)
  done (took 5.172393072 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095835412 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127096619 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108623606 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139276515 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094867807 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126089728 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097737759 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12503508 seconds)
  done (took 2.02190866 seconds)
done (took 30.454645807 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110854159 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127878513 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107169319 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138271623 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103323759 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13974967 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.09192971 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134821659 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135309486 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102049652 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14004432 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094176921 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12376584 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092906053 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135958765 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097465623 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133302614 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104899387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138163296 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132990278 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094828047 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134638536 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103457777 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13422072 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104775372 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134262244 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13876803 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099814551 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123300279 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095334218 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125948975 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111666147 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131875474 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10590052 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126893154 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097237184 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124403614 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095035288 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134358364 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134541458 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099575704 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134279875 seconds)
  done (took 6.069335305 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107786421 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.151123629 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105360313 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089603523 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.124378599 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081734477 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139004444 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086594169 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.117674038 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108298213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081696253 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.112771427 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078716772 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102840615 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077000686 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0760456 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109550226 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075601057 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077001935 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10764688 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079858167 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072724418 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109154549 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078630362 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07610131 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110559761 seconds)
  done (took 3.650920468 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100644109 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136118127 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112988145 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184939219 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161577177 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099613299 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133463634 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140979183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109193924 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121770336 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096566465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151237689 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112251168 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128740761 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092333396 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138072371 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13648973 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093717721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128975054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112914995 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138782845 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102575627 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142622284 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134571084 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092081657 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123288021 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097349591 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135462271 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098010433 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131728887 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097857986 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125505689 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123430014 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104373692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126828532 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094450571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14272668 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102291688 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130776422 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093284293 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12519024 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122401763 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114035712 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168155817 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092198183 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12927617 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100132144 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132162546 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12233705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110652275 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131322225 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092227322 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125637752 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091790542 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121792355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107545081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132013533 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124845536 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10217353 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12522911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106582363 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126202993 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108161368 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124639215 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100527281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121658357 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09285779 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120630655 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144712777 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097576601 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163588221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101016884 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124395281 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132303688 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101442069 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128173276 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092890261 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138497296 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102301913 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126075604 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102308083 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12614953 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095924909 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140461417 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12561583 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095435304 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123725707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099163533 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124970381 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094770539 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136545434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093103247 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125619591 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110126331 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121564532 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123137874 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100014435 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12686865 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092829461 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136197074 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099134417 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12306249 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13271455 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093631105 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125611455 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10287323 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126889709 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09270835 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127941054 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.0998627 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123844285 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093999527 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12558384 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095267688 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132987375 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100020907 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128025032 seconds)
  done (took 14.896401179 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232466081 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216600354 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238057324 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261549864 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13622359 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115742985 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214012363 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156487801 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123575568 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16165369 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163116512 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181936712 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139187489 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180317279 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.140443168 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123527236 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112176613 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165121698 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216738558 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292287814 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113275399 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132697326 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162402093 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161259279 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106413753 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133523648 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140563286 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105124755 seconds)
  done (took 5.755720232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107732686 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156424015 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098574649 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144862532 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150017363 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093594773 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128282578 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094967338 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136068279 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136555779 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093311969 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129310156 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101193534 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132374901 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123970298 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10305807 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133058057 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095114327 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126934597 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097745712 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129573547 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102171232 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126946555 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123240542 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102684235 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121843454 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086246075 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14226958 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122936814 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115876439 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122631424 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100409053 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134192516 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094364221 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12300786 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095763143 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126332244 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095354668 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125206332 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091995886 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122076996 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077928752 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122478299 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1363841 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098680474 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079724556 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129926285 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128899359 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095370329 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121867183 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096369108 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125824436 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096206605 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130330349 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099173095 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125274816 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096714542 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117112983 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100161623 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125335682 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085151416 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122399767 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098477134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117755757 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101248971 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128490684 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092944414 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126283483 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097964235 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130836099 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09649246 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127270857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092024811 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126552948 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096096188 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127795965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096962007 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122077197 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123076403 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094075738 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075783888 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123826489 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07451029 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127216646 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091838558 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122397181 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096422726 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130278478 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137998769 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094814837 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132209002 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094445453 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122141942 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097272162 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113564908 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096944791 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139081692 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141095615 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093323608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122751861 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107674426 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125489439 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092670629 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106672759 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100488575 seconds)
  done (took 12.995395799 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127298022 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156243142 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095728352 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142216056 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155876463 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.161309561 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100854258 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13116 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095078957 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142542012 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093976596 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132242476 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097452325 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137180516 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157632618 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10348441 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125532084 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107435143 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13293166 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171061671 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112726362 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143455497 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108967519 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125066106 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129839569 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111262819 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161678296 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10782049 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137392188 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142920194 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108857457 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16124446 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144802669 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098605351 seconds)
  done (took 5.505400159 seconds)
done (took 49.980314823 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.229926015 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423678322 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200305722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.136588827 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.244315702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.213398251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.212003958 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.213560963 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.229067204 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19965618 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.473193889 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.904417548 seconds)
done (took 58.813861439 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.297386147 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.332125616 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468435867 seconds)
  done (took 3.931695117 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.554756735 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.166142473 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467858669 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201861935 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202562698 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.501108058 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.901455371 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.562769312 seconds)
  done (took 28.136340409 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.203195658 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.6065185 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.991987406 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.980511715 seconds)
  done (took 18.915251471 seconds)
done (took 60.96886086 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.196568991 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279466033 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.221248266 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18158215 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.322890087 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.257539004 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.450416636 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.414219364 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.208014063 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.186783066 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.239986875 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204269612 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.210500511 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.458645157 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.219240799 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202956534 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.222702763 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.663333918 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.611999493 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210829476 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.211685776 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.241933425 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.229732834 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.218870273 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.259262561 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.220184233 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211445675 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230905359 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.88171685 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.209644599 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.213191713 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.696666596 seconds)
  done (took 191.920838797 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204293773 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.183992189 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.289566886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.246771227 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.653803707 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408944098 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.337656355 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.723046574 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.231084291 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.232328536 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449965216 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.215175864 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.51558733 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.200792266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213707242 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.308029052 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.511921347 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.518730674 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229869097 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.475978064 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224791207 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.471109259 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.373327137 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.403148744 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.258667288 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.281811443 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.237053535 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.239984 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.417943022 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.431951613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.227795276 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.247436703 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.848041299 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070838827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220460879 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.232533962 seconds)
  done (took 150.473724995 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.503272661 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205560041 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204586222 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205686871 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.237401505 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204859319 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802685883 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810982427 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711029684 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.452599054 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274930951 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469233716 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207105888 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302874606 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219868971 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.208527754 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221136332 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249443323 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214232051 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207411961 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803995564 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229901861 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.35097011 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213647583 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.207282358 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238895109 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598270213 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208768263 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24067687 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.532798492 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258550015 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207328021 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.5749419 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.15616905 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319292637 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209659298 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241953346 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207475647 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481746854 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208637646 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209061742 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210899761 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.82939783 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209438869 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8063833 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216501238 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.127944854 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209337933 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209093954 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.141902455 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.811176599 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230282024 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209912457 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212676345 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.209724139 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209139388 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210042397 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.242437798 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.961315944 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.315114848 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226002593 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.212870922 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243589717 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.209771149 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.232577921 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21032546 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.248059595 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.284496257 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.318749821 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808156387 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215015484 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.210082997 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306285859 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331255647 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.211106241 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210052138 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209375846 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.210027295 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319369043 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.211276045 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.642035777 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216519619 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211830581 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270110593 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305220776 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210744115 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.588692372 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216257739 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210225091 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.941747085 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306914728 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211841984 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21057822 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211560408 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641670256 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810607101 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449982981 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218521758 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.918773259 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221668215 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212056309 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.656373703 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780142924 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.884039074 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218903883 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322445683 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215486386 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.213846692 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211632308 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.241009174 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230545726 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272772735 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.213249447 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212471536 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612539146 seconds)
  done (took 347.769776306 seconds)
done (took 692.80185812 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.914615694 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866235565 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.004579442 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.886150688 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.869290752 seconds)
  done (took 10.681982248 seconds)
done (took 11.820721876 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.402385123 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.400946033 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274320817 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406227353 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24175189 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420268985 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382365273 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237752465 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315877181 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.298630917 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.316233852 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270239643 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239387972 seconds)
  done (took 18.348821648 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547313014 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536848211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275907877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54968261 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253380106 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5473632 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423714639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433944825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422100208 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246502117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227761179 seconds)
  done (took 16.608967436 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546247463 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541019115 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28076285 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546864944 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255429676 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5537693 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427772733 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433378275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436405378 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24681282 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227718279 seconds)
  done (took 16.639900514 seconds)
done (took 52.737828536 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22264548 seconds)
  done (took 2.366885836 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257607834 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421992942 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.243456877 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.228601345 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224413254 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22523645 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227602121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224233708 seconds)
  done (took 11.198753636 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.225009841 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221941354 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223811726 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220575832 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.22137782 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223823509 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223580021 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221048493 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222444434 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224241494 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222177426 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22517868 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223122658 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223864998 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.222024753 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222106803 seconds)
  done (took 20.713090553 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222675 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221251881 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221078804 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221596623 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222129499 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222484886 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223691179 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222323404 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222461615 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.222849356 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.224057862 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222342557 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222933523 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.222185652 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.222906674 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.223585304 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221485324 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.22221007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22738007 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221969549 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.223477181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.222235403 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.223542252 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.223358624 seconds)
  done (took 30.495655262 seconds)
done (took 65.916091739 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.406553681 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.012617401 seconds)
  done (took 9.566329266 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.225693365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.226368879 seconds)
  done (took 3.604586858 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225311808 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224901418 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225886303 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225679782 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225157414 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225049304 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225979942 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224965034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.226024272 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225487432 seconds)
  done (took 13.402268702 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225927164 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.226586296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224894136 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.226144645 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226056883 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.223820226 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227716533 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227434233 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22718947 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.226231815 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227960153 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.22586732 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.226147472 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224572414 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.227023592 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225068388 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225084567 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224958199 seconds)
  done (took 23.217078988 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.226257093 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228234862 seconds)
  done (took 3.603538515 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.226293905 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225510244 seconds)
    (3/7) benchmarking "month"...
    done (took 1.225784734 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225692178 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.225354274 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.225007468 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226204757 seconds)
  done (took 9.729140869 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229281055 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401569619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479938975 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.852167973 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.229899172 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231568498 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.081182206 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.231758195 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.234144286 seconds)
  done (took 14.122307712 seconds)
done (took 78.390018575 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.250538233 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237003768 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.430673214 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.24011908 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.237869724 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.522330435 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.231516184 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.355900948 seconds)
done (took 37.653912671 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.241956611 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.996202688 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.007289466 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.230035405 seconds)
  done (took 11.384971532 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.21611946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.213827955 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.232103198 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.291704149 seconds)
  done (took 18.111633494 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.277118807 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558774503 seconds)
  done (took 4.994403228 seconds)
done (took 41.880214391 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230399392 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23014694 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227464133 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.227832038 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.230144344 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230515236 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.229549316 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228261572 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22949645 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.229434295 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.231087269 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.228294575 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.23016229 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229301726 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227541514 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227367583 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230387059 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230138061 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22753846 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229979692 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228972836 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230646372 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229504219 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229873148 seconds)
  done (took 30.658854727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231519353 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229652048 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230004468 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229950426 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.228254296 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.231980807 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230381552 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228551871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232266877 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231421477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228787326 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.228877469 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.231214767 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229549204 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231718008 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229977041 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.231185552 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229492574 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232711401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.230585018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233010926 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231887461 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230768164 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231758261 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229264557 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230170199 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233283444 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231780049 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233274168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.230435248 seconds)
  done (took 38.07551926 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237420792 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.240057559 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232812736 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.233631491 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232536404 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232862177 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232998948 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.233941521 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233098209 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233933097 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233762367 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.233508244 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232063982 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233492203 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.232651217 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233324984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.233451173 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.235556979 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233451468 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.234504836 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234091421 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234019273 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233933527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23416145 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234656743 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234916102 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233797513 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.233736804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233588475 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.233598262 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23358056 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233865785 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235237886 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.235266374 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234194154 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.235087548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238877333 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242745366 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235594836 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23513595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233369497 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.23537366 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234921566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.235239085 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.23629699 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.23572214 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236218026 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236285564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235725827 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235306917 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233903118 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.2342757 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235370438 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234863448 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235896195 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235577545 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235236751 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236400623 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23512325 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235091959 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.237112424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235684112 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.235233639 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236398149 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237079672 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.236927408 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.236697036 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.235867934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237328554 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.236412834 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235653265 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238233233 seconds)
  done (took 90.081268306 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236174183 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234353021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234686403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234776036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233694142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236721863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234442006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242590771 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234689359 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237130967 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237023159 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234789616 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235590967 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238390604 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237667411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235278807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237921908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235344167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.238553895 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238506544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239461085 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235446627 seconds)
  done (took 28.362204643 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239372797 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240950279 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.23575041 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24030648 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236474085 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238710953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239020467 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240295023 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238893175 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236331063 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238092627 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239974072 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236089365 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23742117 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236701762 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238181319 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24017539 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239159361 seconds)
  done (took 23.452208722 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.237684864 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.237603065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23919334 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237730991 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238352366 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241579273 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237194751 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241196382 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240172568 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.239011882 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241569768 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241327504 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.240702257 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236711944 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239546795 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239259657 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.240596459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23917958 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241880488 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238126964 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238318356 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241274276 seconds)
  done (took 28.429877712 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240917812 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.241654587 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239320176 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.238325597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.238100439 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.241135639 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239904776 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238956006 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.242421384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.241679641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239530844 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243539307 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.241210636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.238963053 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240186277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239754727 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241830082 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.239607656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241145545 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.239548897 seconds)
  done (took 25.970246451 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241211836 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241875388 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242184185 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242729849 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242509592 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242855252 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241941636 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.243677787 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242701358 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243641623 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243546633 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243784246 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244317987 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242804101 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243765209 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244098674 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.245806947 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243004349 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244970726 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244147925 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244830591 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243831271 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245289688 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244923992 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24461021 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243605139 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244688329 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246179126 seconds)
  done (took 35.987690852 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245178857 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244030159 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2424027 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242179089 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241362215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.243297417 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242639427 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.241954307 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243843483 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242182241 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.245824599 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.244018817 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246063714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.245455303 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245082767 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244490494 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245695863 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242615851 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243178549 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242335127 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24615194 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244429247 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.245510937 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.243265203 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243354198 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247156841 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243071703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24308055 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246257501 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.243574604 seconds)
  done (took 38.486658226 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.265309716 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26491634 seconds)
  done (took 3.696898426 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.243508887 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245554973 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.246310594 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244726318 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.243485787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.247424384 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247666227 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244715573 seconds)
  done (took 11.130789566 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.246651202 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.245563937 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.247496334 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248239443 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.247259691 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.247924899 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25448559 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266489382 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.248320539 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.249276502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256472787 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255997573 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250530943 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247925307 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.247575936 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249935752 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248071193 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24820295 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.248830921 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248053558 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246564475 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250982906 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250335388 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.24695423 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.250076894 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.258469131 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273018878 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.248722061 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249673685 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253451659 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.248984247 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246510752 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.249247377 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.249551706 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.249575271 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248788187 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257890775 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269263917 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255490111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270500723 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250233685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.249255276 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.250834836 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251919079 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252557571 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.24973284 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.250383064 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.247589644 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249676164 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.253411695 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.25570091 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249469693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.249419078 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253918551 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.251615199 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256771997 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268911595 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253404103 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258909117 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.261167616 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.284509389 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276760351 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252038135 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250162299 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262167626 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275475903 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257003503 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.268685266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248266857 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25108906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258339308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283841197 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277408656 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251973906 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252397207 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.252106002 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252032825 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253995669 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258439408 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.273181932 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251910992 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253338583 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263529665 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274611416 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253976879 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.252169939 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.252623732 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.253168749 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255028119 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263596616 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27245278 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252873176 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251241181 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254723864 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255283361 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.252489889 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.253273357 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254642619 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251305735 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.253976419 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254551026 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257548613 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262569063 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254519703 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254704202 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259603034 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273939663 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25502587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.261083722 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.255357128 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25535537 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.2570672 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262722287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252895613 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259352504 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263663388 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253638247 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.255832185 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.255439976 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254966431 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26579416 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281200733 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.256066458 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.256355813 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.26101111 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267592273 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255909389 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.259153219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256435328 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252957851 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.254155226 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.257054209 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256230669 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.257050278 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255551046 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256973615 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254490331 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25562918 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.256900812 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.256296489 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257068876 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255862111 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.257458809 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257705905 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256518002 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257669938 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.262181444 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.2772196 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257698769 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.258335671 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.255622698 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257806375 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.258236515 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.257082907 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.258206013 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25858835 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25836603 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258738242 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257470319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258944309 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25856747 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25884582 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261764095 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.257260797 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26034274 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257146865 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.25654223 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.258440519 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257587401 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.257569543 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.258599117 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256313473 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.262736701 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26609007 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258984193 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258844123 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.262003651 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258977976 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259083417 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260366225 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262867327 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266559562 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.259301755 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264851263 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.278982257 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260184546 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.260266092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.260273344 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.259153274 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260459693 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.263353106 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267034749 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269793973 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285282213 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.260480908 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.264745421 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.260823706 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.264067358 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.263756042 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.259861734 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.261599564 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259594595 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260947048 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261773907 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.261685189 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.259584972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.259094388 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.261665638 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.260772156 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.261198614 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260454308 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260525831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26277225 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.258356532 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2612677 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25950311 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.260766254 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.25841714 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259717373 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.261789572 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.262128754 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.261614021 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268450979 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.258062346 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26321408 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262593225 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.261822784 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.259242175 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261963743 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264091554 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260768959 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269926392 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280784218 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263231509 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268346051 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281802823 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.262450525 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.264845622 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.2633842 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26056464 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265448391 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.271484762 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264211293 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.262064158 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26320635 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26401396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264220596 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268764118 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.281784673 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.26355607 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263875004 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.265929816 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.261987118 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.264278728 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264880513 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.264385509 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268269911 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264766132 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266439073 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266739788 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.263682089 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.263913462 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264059511 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268595556 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.272489611 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.26922491 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.265168519 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.268356153 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.264886606 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.2691575 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26522697 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265360247 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26483854 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277447577 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290888598 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271562244 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.289610205 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.267499523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270862588 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.286629204 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273061387 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266149049 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266383196 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267460286 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265333682 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.263664988 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267147887 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265469354 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266827714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266931264 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.271105566 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.267619744 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265719376 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.266180986 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.266932378 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.26742066 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.265532571 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.268186334 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27012007 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26937941 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.266837465 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.267574864 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272567969 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286318992 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.268900775 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.267736474 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26624356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.266228011 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.268274792 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267436837 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271068385 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.275099528 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.270218488 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275859261 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.269709538 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277365192 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268549717 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270861465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275483556 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.266315709 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.267178634 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.268346674 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269136696 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275776812 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.288587762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.27065127 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.271502366 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26908665 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269027393 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268039916 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.2681768 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271118204 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269337501 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277268213 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290758776 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272496358 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272100988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.267456885 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.270052517 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.270295423 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267993833 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273414348 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.270452739 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.270844384 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270812158 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271205863 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271373764 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.271910045 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270881366 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267819266 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270363516 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277268668 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.292057601 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27492572 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.271202503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.27816234 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290512025 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276565846 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.291667991 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.272332683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.270704563 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.271312585 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.272112791 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271488064 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.27387275 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.271307428 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273534734 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.274331135 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270847488 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272560646 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27360605 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.270016592 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270521445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283993052 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295333134 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273104039 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276274056 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270628954 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.27340025 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275716146 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272860069 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.271543613 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.275888019 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282621122 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.279885241 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.272323649 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.272939559 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272809479 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27521103 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.273634023 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273583746 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273011705 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.273133238 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.273906618 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.273201309 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276912061 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.273668354 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273965263 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274926972 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274520112 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283492199 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.294182613 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.274039805 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271424657 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275566518 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.273624663 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274180543 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.274122147 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274080174 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274916493 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276156837 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280324515 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280281417 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.277441682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.274677344 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274338177 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274713858 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.275002333 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274898731 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.273427236 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275775064 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.276605754 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275059244 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27581249 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.273129054 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276347465 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275474456 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275357802 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27925353 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281546115 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274333932 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.274868628 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276633624 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276313894 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275485161 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.277575816 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.284660894 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299129843 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.286553207 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284984442 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.2792477 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277005785 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280370955 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.284378623 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275669562 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.277342673 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.277160742 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.2778055 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.278789661 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.280687188 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277634661 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.282813858 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.29763099 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.277016457 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.285121368 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297920508 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276192594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.278693642 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.28240477 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.277414034 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.276945413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.277843327 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.277072429 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285938831 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298517484 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278235581 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279939879 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.277703985 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280008764 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282219547 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278622485 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278831222 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.278164899 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.279091164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277668301 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278238853 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.276998036 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.277883813 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277646146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.281323457 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.286702907 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.277179332 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2798752 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.278098472 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279744648 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279308748 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279539334 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277513916 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.277772618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.279696933 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278754723 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.278913114 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.2826194 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.280569859 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.280703041 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.280751647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281275774 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282387666 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290609497 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.289187831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27889973 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.278876696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280980451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.283244428 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280630437 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.281003287 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280365763 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282043028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.281366812 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280193054 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.281084286 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284584961 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296891409 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30154096 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283159596 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28144776 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2845009 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281740511 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.279342 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.282456489 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.28333454 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.285820743 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28886334 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.282618132 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287970752 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302198715 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.284008136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.28759369 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285957124 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289259126 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284393962 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28207194 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281806828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.287235466 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.297765604 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28353665 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291495307 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311737351 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30329814 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.284414859 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284272999 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28113799 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282083408 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284745576 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.284441023 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.284529923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283177566 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28367055 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284440128 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290237999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285713308 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28775901 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.284193406 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285552931 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.284913016 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28485019 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.284528911 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284583151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284560763 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.285425577 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.285015765 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.28454559 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297391835 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.312012008 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.28469929 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.285018469 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282517395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286837678 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.288996487 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295785793 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.291906157 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.28556355 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285559585 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.287303343 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285906299 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283357099 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284567618 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.284571436 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285237428 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283952413 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29851315 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31254964 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.29138228 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.286382459 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286502676 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284999812 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288436149 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286961443 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285261637 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.287710607 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.288770026 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289518189 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28574671 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.287302274 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.29119478 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29450566 seconds)
  done (took 758.126578214 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285125046 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283604712 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284410915 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284833128 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286154893 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.284779129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284822937 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284661244 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284848142 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283372665 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286035515 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285547696 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285284458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284583477 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285685397 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285736042 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284507147 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286899656 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285649374 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285302196 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285644003 seconds)
  done (took 28.191344412 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289122925 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.286016884 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285581669 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288147732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286283041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288305857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286327513 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288822638 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289100429 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28573793 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28893426 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289866528 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286151158 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.286617133 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286005721 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288570579 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289750958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287647705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.290431118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286875946 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289721136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.286723306 seconds)
  done (took 29.536428297 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.288803353 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.2893736 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288935635 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.286958746 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.289536121 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.28807102 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.288434218 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.28866812 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290130732 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.291360852 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288530528 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.291146351 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296443948 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.296156162 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.292332285 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.291416727 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.434130075 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290564814 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.290200989 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.290264388 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.288121149 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.29413195 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.309000383 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.287516162 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.290407368 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.291160142 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.28999519 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.289995137 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.290830859 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.291642521 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.294005357 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.291167437 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290048625 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.292658917 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.291292978 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.293180474 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.295305425 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291299581 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.289709547 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.291875854 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.302368751 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.312699082 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.292285692 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.297380521 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.313007684 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.291319156 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.295695316 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.299146154 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.288366586 seconds)
  done (took 64.695987131 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.29252615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.292505912 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.290804769 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292217591 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.293151792 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.293649302 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.293147651 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292713698 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.289251952 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.289993728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293355711 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.290811168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.290250043 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.29357231 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293851799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291205035 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.2909462 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289820261 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290181497 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290308274 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.291948143 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.294207645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294799625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.292242765 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293323757 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292204336 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291514998 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293474719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.29250746 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.291459368 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294485429 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.293973124 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.294958926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291941394 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291983622 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.294265777 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294770381 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291907443 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.294569934 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291591075 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294478985 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295085612 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.295444679 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.296585135 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.293445422 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294986392 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293820605 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.293433575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291385389 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294958512 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.296982008 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.294152571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.296176368 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293997035 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.296541988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29656225 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.293590739 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.294077031 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295663814 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.29415632 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.293896774 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295196014 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.294527992 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296035339 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.296334635 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.293972861 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.295058691 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296743628 seconds)
  done (took 89.165520444 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295243938 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295049564 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295747692 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295711087 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295424375 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.298003423 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296887616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.295649302 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297780384 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296985712 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297002806 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.296321719 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.297786976 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296898565 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297182907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295882356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298125833 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296296438 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297003725 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296948059 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.296487625 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297056212 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296999423 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297035835 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.297221138 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297582818 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297249926 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298193983 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.297661668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.297276158 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.297199205 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297197278 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297433533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297249896 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297085639 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298446723 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297702471 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296801428 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297592393 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298518562 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297837652 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297640065 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298972254 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.297758753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298310631 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298721265 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298070893 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.298997402 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.298787295 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299232507 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.299392973 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29832137 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29968455 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299184881 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299042004 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.298554404 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299913667 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298549603 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298890975 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299763197 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299824986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.300297226 seconds)
  done (took 81.670813046 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299510186 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298664695 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.297975036 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29782543 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300386851 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299093563 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299750244 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298964972 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299091875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299768188 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299681764 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29659508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296525207 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299298574 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295246074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295496333 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295535857 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295997519 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29879759 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298005442 seconds)
  done (took 27.177945635 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29672055 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298074073 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296307004 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295812673 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.299226016 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296618972 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299304386 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299890246 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295928166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2993085 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299080775 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298600157 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295643697 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296326491 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2997517 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29626348 seconds)
  done (took 21.977397138 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295949136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297995451 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.297710355 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297246965 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.296373024 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295103263 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299801153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295473574 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294001489 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297792889 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298327825 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297782242 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298259547 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298172754 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.296493908 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297720264 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295848047 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296170341 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299415733 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.298564958 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296492947 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296017883 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.300323415 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.300113746 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296932307 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.297192799 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.297510069 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295784768 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.297238149 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.299612697 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297120056 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297998239 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296814427 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296901238 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299095256 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.298178259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301312819 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300616257 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299303644 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.300754041 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300800412 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297008872 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.300932244 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300617558 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298418518 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.300342613 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296906446 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29947276 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298113647 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298167549 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.301359335 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300388373 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.300693534 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301008365 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300062684 seconds)
  done (took 72.619882178 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302895237 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300670519 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29778086 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300897533 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301720031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297764629 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300752 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299914054 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298698542 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302741383 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298690315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303410126 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298913179 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301036311 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.300090782 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302669169 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298444734 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299812881 seconds)
  done (took 24.623801994 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299310337 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.300741619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302510022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.299661695 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300312921 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303031332 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300164128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.302411579 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303078523 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299756959 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299109949 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.3036769 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302369031 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.304016819 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300398107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300543133 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303066564 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304320046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300026132 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29954389 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303494246 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303255743 seconds)
  done (took 29.852468463 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.302240066 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.303155541 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.302431138 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.319114721 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320177578 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.32629693 seconds)
  done (took 9.092289877 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311093085 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305832292 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300925508 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304332408 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305029087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302195581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30178381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302692451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305254203 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301719513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302259191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305406942 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304212198 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30066521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304990413 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304490226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300827914 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300972352 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302701553 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303684428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302550568 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305412793 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301945183 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303053943 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303239507 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303076997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304872955 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302644504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303382855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305201057 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305777186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303390692 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305963141 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303610856 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307606917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305077333 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303355262 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306760146 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305403628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302830721 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305995241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307674331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306236798 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303459242 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305897231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303406416 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303245401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303571155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303223072 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307501627 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30693183 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303530698 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307809056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306181704 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307173546 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307658603 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304998989 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304811396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307721499 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305039289 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30466758 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307487195 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304167873 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306248145 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308009706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304741156 seconds)
  done (took 87.34689091 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305630113 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305284241 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304983954 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306250139 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305089439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306246229 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305350957 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306458758 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306239438 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306371407 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308847136 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306495264 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305365319 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306149951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306377781 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307048594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305288501 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307062336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306862759 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309166863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307352446 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307428092 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307343335 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308524725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308660378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310317366 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307758026 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307668709 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308115153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307630643 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307616411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307371685 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306091586 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307528567 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308425878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306931324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307261012 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3083946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308641759 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310317289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309573598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312701034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308660475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307429966 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30865099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308569905 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30749066 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306855802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308668314 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309060875 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308720176 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309644286 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308782755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308033502 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309133851 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308953243 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309154571 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309848684 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310539392 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311091773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309092874 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308729661 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312079615 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308892678 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309732956 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310589643 seconds)
  done (took 87.552856489 seconds)
done (took 1767.112684498 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.33218911 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.418420904 seconds)
  done (took 13.976808683 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47536341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424526672 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309073682 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.340435251 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.311186329 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.314962826 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329064881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311092395 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.310510633 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311844843 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.309625102 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498404256 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.305500786 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.312280677 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310787994 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404934418 seconds)
  done (took 42.81603538 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.340463552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.319710188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435995226 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335908568 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339508872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.514506017 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.373341908 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.316048901 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.498613483 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.360327248 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.979322152 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340654199 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317684506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.497548286 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.334848198 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514179679 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.579102115 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.980426409 seconds)
  done (took 30.606593864 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.800173993 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.350882914 seconds)
  done (took 9.380746762 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.338425294 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.314822804 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.344523727 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.348703691 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.359945618 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.356385687 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.311740213 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.317567237 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.361243226 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.352081333 seconds)
  done (took 64.644942137 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337233404 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317312279 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317816613 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316816929 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30866978 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.309565324 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.314707217 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.318918928 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.265662888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.451783374 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.337807868 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.324738055 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33697438 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31889973 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.314432614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.354456869 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.446334739 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.336441015 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.315400397 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.321449853 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.319915267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.433653064 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.361625119 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317562215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45680711 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.313119515 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330273329 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.324725217 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.42939545 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.338294928 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.318158072 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319112587 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.321278639 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.917070291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.848913973 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.331507058 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344125909 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.328945628 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.317718106 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472586328 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.342510373 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327003488 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.313499123 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.834399261 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.482025624 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.437591142 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.630369734 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322199091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320604297 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383823946 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319752775 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.32216769 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.351044285 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128231437 seconds)
  done (took 111.560302898 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.343555273 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.80465821 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48581996 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335622995 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.133283544 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059394552 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.336617282 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629598897 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.366609355 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.313430635 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603404395 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.852017515 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.33827878 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.368852917 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.944012182 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.385745136 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314128935 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.131612382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339157875 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.314259598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745624968 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333519386 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312976372 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.496126196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.354898438 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799153221 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.936832178 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.671227287 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.340093849 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.315039367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808388778 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342478954 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.334867387 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.31652323 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.597645224 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69831318 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689490961 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.337733819 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34951608 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.317091027 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.344888413 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.797351138 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.699606169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333292964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33115241 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821464546 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.335095534 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.324478649 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316688921 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517031469 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.080845702 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.317897859 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.927039576 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.32387272 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.67538468 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.367694878 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.415285102 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83125323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338937716 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.394776075 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364385212 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318411767 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329692138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316949714 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319519933 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687112124 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.461789654 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.321711313 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687629753 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.814683537 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334527713 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864281332 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.310707033 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.33171399 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.391382521 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.31878227 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.915188984 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850885438 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.34784577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318598829 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.673200724 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338847616 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.608260344 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.337334741 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318764665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761205406 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.342010554 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.371295214 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.334965755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.319204792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.946930622 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31978876 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.61459978 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.369481672 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319534614 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.321114979 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.338391087 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318787374 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33969013 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.324975476 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867494424 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.344935295 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.466872343 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340355684 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318877923 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319602281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.321623463 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320552076 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546785201 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.952359856 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326173476 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.322827982 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.322339853 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.32740205 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.45943321 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.321757212 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65041532 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.339323319 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320826533 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322370329 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070512681 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344983529 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321568537 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.342443571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.161210189 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.551700055 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.339256474 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.342016147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321920276 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.338746504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.865066993 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33069259 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.342993288 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.327183691 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048741894 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.378492781 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.328350789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.755629423 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.331573503 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.322145309 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337076283 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322538419 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657993475 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.617420539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.391009058 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327019249 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.342977399 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040368067 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.343900725 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472362408 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345924998 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.391347472 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.525004783 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.625718964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326037038 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.924340997 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325740466 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537562205 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.323774251 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648447125 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.834763169 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343187854 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32633008 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.043292191 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.00292073 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.952032253 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.328671289 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61338069 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.329756353 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.778929219 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.325994937 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326514066 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.773083292 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.327323031 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327438013 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.325896219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.325033621 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.473481779 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.502235658 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.609903633 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334688913 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809135189 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.416069155 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325812832 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.352275142 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.326910658 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.678302897 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332748383 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.325483399 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.326871784 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.325812174 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337480285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822820914 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.351872463 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.334196207 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.480564603 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977617701 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.344300895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328146237 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.172046978 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.48400156 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858530406 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.377783045 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.658740009 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.348119513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367757711 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066208766 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366884726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868032296 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.351857009 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.328510262 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935684363 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.345172192 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.667778004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.329181464 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.329216215 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893700773 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.347342391 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.331049333 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.881030698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335700347 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576364333 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.33564524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.356169045 seconds)
  done (took 1111.283431427 seconds)
done (took 1385.494522458 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32976795 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.336681075 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.316758827 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339988902 seconds)
  done (took 26.574701652 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.344435737 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.340655024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341063604 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341390096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341400879 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339351273 seconds)
  done (took 9.305748716 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.558929295 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339996331 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.343289989 seconds)
  done (took 19.497143307 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.580779139 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.714027613 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.742000184 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.718281849 seconds)
  done (took 11.016266974 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341646941 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.338314579 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.342069256 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.344538205 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34924371 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.34376821 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.343454242 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.343032319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.344670085 seconds)
  done (took 13.346307069 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.62957205 seconds)
done (took 86.61522867 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.364787342 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.355230437 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.317972932 seconds)
    (4/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.334989166 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337428177 seconds)
    (6/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.978121758 seconds)
    (7/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.48917696 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.738511573 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.358069055 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.176146977 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.342916693 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.635085125 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.48051484 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.326575513 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380119423 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.928586775 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.379898431 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363180697 seconds)
    (19/309) benchmarking ("sort", Float32, false)...
    done (took 5.369157149 seconds)
    (20/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.353922021 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.459760513 seconds)
    (22/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.810467308 seconds)
    (23/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.568287654 seconds)
    (24/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.54816856 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.236473341 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.981663101 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.855614425 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.358600719 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.343386572 seconds)
    (30/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.385601888 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.363083189 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.011284926 seconds)
    (33/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.725961056 seconds)
    (34/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.007228919 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.342745745 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.494673181 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.92099922 seconds)
    (38/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.258833587 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.440059229 seconds)
    (40/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422067757 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.901971056 seconds)
    (42/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.171741812 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.956019544 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 6.335737532 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.414110557 seconds)
    (46/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.75958676 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.368568574 seconds)
    (48/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347488051 seconds)
    (49/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.337466485 seconds)
    (50/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.388315772 seconds)
    (51/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.223528645 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.360212156 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.846387939 seconds)
    (54/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.005514184 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.324055938 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448389668 seconds)
    (57/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.965896834 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.024383727 seconds)
    (59/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.786056727 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.348834989 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.604614522 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.793632246 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.860833271 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402657562 seconds)
    (65/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.714619588 seconds)
    (66/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.748075022 seconds)
    (67/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.829016263 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.962966033 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.345352008 seconds)
    (70/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.653651681 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.927464002 seconds)
    (72/309) benchmarking ("sort", Float64, false)...
    done (took 5.739535106 seconds)
    (73/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.945684614 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363530659 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.410046312 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.625963187 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.667392387 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.026799458 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.546202948 seconds)
    (80/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.459852686 seconds)
    (81/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.347945077 seconds)
    (82/309) benchmarking ("sort", Int8, false)...
    done (took 4.375661915 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.950437829 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.839945081 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.411288326 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.338343713 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.321150555 seconds)
    (88/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.549028244 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.958883763 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.625858838 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.375005806 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.280103789 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.457033284 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.874485612 seconds)
    (95/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.104125174 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.306826253 seconds)
    (97/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.842101287 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.82911285 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.056799041 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.332844551 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.31957021 seconds)
    (102/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.744774681 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.585883122 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839427778 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.322828018 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.073860552 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.168628673 seconds)
    (108/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.513596163 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.21678847 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.447892854 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.077367034 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.871488382 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.343859883 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.593937362 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.661899046 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.730187126 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.395615425 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.455448264 seconds)
    (119/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.460906947 seconds)
    (120/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.739855445 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.359512348 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.014884459 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.049923004 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.322198877 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.276723772 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.990889602 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.350273229 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.848525654 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.333676037 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.991933777 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.980417876 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.440975542 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.865167929 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.390394069 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.597222921 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.321038651 seconds)
    (137/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.882572889 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.194683073 seconds)
    (139/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.404005653 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.774480092 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.618075448 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.369608363 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.353923234 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.464219401 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.000737913 seconds)
    (146/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.44892676 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.483531524 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.495744888 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.405214581 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.342778286 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.469097425 seconds)
    (152/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.677759392 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.080245188 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.771050752 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.201685716 seconds)
    (156/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352638814 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.370077802 seconds)
    (158/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.361348889 seconds)
    (159/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.427591931 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.043859522 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.75002871 seconds)
    (162/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.350986633 seconds)
    (163/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.344110921 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.53342568 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.396805476 seconds)
    (166/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.380116084 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.663147754 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373991059 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.387594604 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.333049353 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.838824195 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.79319018 seconds)
    (173/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.479404119 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.353395373 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.141393041 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.349550588 seconds)
    (177/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.355365147 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.368826738 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.332119645 seconds)
    (180/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.710054772 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.389632023 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.468713103 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.828545487 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.365238492 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.749068973 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.764969514 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.328537567 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.351061144 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.380936692 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.435488377 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.403255998 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.06523207 seconds)
    (193/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.571756307 seconds)
    (194/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.480937787 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.017599923 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.395326083 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.665044054 seconds)
    (198/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.146756115 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.64410608 seconds)
    (200/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.488190599 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.345421649 seconds)
    (202/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.794790318 seconds)
    (203/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.48916283 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.354941267 seconds)
    (205/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.165249532 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.403329441 seconds)
    (207/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.373140862 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.835919254 seconds)
    (209/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.375494964 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.765563731 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.48625238 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.365219427 seconds)
    (213/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.356742297 seconds)
    (214/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.119322851 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.272409378 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.990781718 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.000121124 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.550113734 seconds)
    (219/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.540127041 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.373626662 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.36507697 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.660385113 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.375876126 seconds)
    (224/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.400250102 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.363815994 seconds)
    (226/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.682005239 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.353389516 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.373978534 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.889887164 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.298317146 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.365934914 seconds)
    (232/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.073227056 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.388700182 seconds)
    (234/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.328676257 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.483112085 seconds)
    (236/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.72878762 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.226914369 seconds)
    (238/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.110767843 seconds)
    (239/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.66913624 seconds)
    (240/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.835612057 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.170373391 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.348720445 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.639673771 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.412540726 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.427837958 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.352877341 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.359010864 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.363282659 seconds)
    (249/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.421499861 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.643847295 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.887924813 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.729917459 seconds)
    (253/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.374860938 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.417040322 seconds)
    (255/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.339477094 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.369800848 seconds)
    (257/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.227147726 seconds)
    (258/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.442761381 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579924792 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.806001416 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.458611043 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328763107 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.036079879 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.33060693 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379406819 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470097598 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.735826519 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.415961422 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.290397958 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.343499806 seconds)
    (271/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.443519361 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.912592097 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.438653819 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.349663399 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.401706881 seconds)
    (276/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.933181894 seconds)
    (277/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.062857938 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.384168694 seconds)
    (279/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.258033955 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.339785386 seconds)
    (281/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.55244612 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.303472221 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438190891 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.433552082 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435059657 seconds)
    (286/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37750578 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.462073852 seconds)
    (288/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.752339659 seconds)
    (289/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.434248726 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.198386174 seconds)
    (291/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.379420259 seconds)
    (292/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.330428785 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.787453651 seconds)
    (294/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.402673724 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.411246624 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.198816 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379016762 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.394558484 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.433488115 seconds)
    (300/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.408226048 seconds)
    (301/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.395909748 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.95530347 seconds)
    (303/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.443635169 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.254616201 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.346796095 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.145136887 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.356989941 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377571892 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.797149479 seconds)
  done (took 941.959480965 seconds)
done (took 943.216021392 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.388759143 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381793962 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.364904438 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.386013104 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.477655505 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.391888346 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.373751908 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.369188433 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.414073383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.414093461 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.363713633 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.389560452 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.366865344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.364180934 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.366729263 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382843933 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.534064149 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371086909 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.383874754 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.375501895 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38402014 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.366488001 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.415279147 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.390232272 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.370399794 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.368706804 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.370502182 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385821868 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.479060637 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.372211051 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371730499 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.380432261 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.50441342 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.36458735 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.363801749 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.391163771 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.380002941 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37538665 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.371895184 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.399279228 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.930288669 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.386725483 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.369472139 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.370670643 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.368993632 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.372515118 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.371215861 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.373372176 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383020693 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384279074 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.921415367 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.406076692 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.372497037 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.368203135 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.380252765 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.370978086 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.373713468 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389246788 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.389499017 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387540518 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.480528421 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.375657006 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.37408256 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.388727789 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.38548859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.963594202 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.384888039 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380406713 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.935801418 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.395176964 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.966328193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.399003876 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.377864661 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.384995367 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40375366 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.491146644 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.365860003 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.368198603 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.382987491 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.372658462 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381541888 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38917298 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.37613303 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.374231312 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39137668 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.40273449 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.387582902 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.374568585 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38423365 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.400272997 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.382366679 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.385220587 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380864553 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.376553186 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388101541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.378775406 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.38031743 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.379620502 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379961046 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.388209317 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.933709288 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41004391 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.37476682 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.375865828 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.374155613 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.386400866 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.933893503 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.395638214 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.400699139 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.427150392 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376981387 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.48502279 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.379538929 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392098133 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.386746441 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.381160409 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.371041217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.484187639 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.930432711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.408904187 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.376091044 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.376804509 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396202004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377147327 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373109792 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.503968896 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.378004824 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391826902 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.501881235 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.388770805 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41286213 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.377764931 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.376611372 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.407670437 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398493974 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.41407328 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.378154777 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394816066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.394986247 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.378711771 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.38622241 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.386859383 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.380971287 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383791141 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.376091705 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.40345626 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39598771 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392240552 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.402088821 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.497311425 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.378079796 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.485981395 seconds)
done (took 233.354787468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.441240997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.371116066 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.455631647 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.371806774 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.477854872 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.476181127 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.377084661 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375636401 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371963655 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.781870549 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371165531 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372036674 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.366615169 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.370523655 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456140021 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374465163 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372650276 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.741399565 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374197039 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.444726614 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.369623377 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373690207 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.375923129 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.755880308 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367314055 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.375071905 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.451473385 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.374691257 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.722668106 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.372256802 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.372450673 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.722729474 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.464666239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.393842901 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.389280766 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.381548163 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.482300182 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.394400883 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455569748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454314939 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.45664684 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.413012154 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.376494766 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.379292453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.383687764 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.378991201 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374926675 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.409116904 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.371058156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.381066536 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.715726152 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.383841843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.379918545 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376452627 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.380172763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.409711346 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377360035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380161509 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.468448539 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.380019229 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439888461 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.761316923 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.781897695 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379726393 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.369772655 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.380879249 seconds)
  done (took 151.374688819 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.448269315 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.452341102 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.497484555 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.39835156 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.432712127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.50636627 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.399004244 seconds)
  done (took 11.427536811 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390407524 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381949318 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.433303662 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426787061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380099009 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.53249754 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381151979 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.396725362 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.380647608 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.43400795 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.387376082 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.382649847 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.387295995 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.382773232 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432184021 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.389417071 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.496334059 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.386757301 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384725503 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.537806841 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383590444 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.391512621 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.437536332 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.393770379 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.385840313 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.388743979 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.951687421 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386601143 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380440972 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.387057758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378123711 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414564479 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382886514 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382736382 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381933669 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504536349 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.386486123 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.385712618 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.387440603 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.383945186 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386675804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.385498222 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.388820737 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.383272348 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.38430366 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.410881118 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379874053 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38467096 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.384394624 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388146764 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.441163938 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381220682 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.382621924 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.381187697 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439872269 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388297608 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382538492 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.382005295 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385744831 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382970385 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533910373 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.433912597 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383214022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433528572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386824103 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387936354 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381165793 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38667911 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439744787 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.389570966 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435003521 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380001854 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.544542249 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.410818633 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386021501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.392180364 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.389460385 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387657432 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.382571234 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.394208174 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38815917 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389656557 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.394662215 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.387799441 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.388143784 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.492722201 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.497864054 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.387417329 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.399708855 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.393024434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.386853007 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.444062847 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.388872874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.38989324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442602242 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505456159 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.44515182 seconds)
  done (took 158.280549934 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.393390318 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.395117526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.384724847 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.405803506 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.385176898 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389938874 seconds)
  done (took 9.654097664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.393213928 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3947261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.391654406 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.393033037 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.391952585 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391326322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.392836056 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39349883 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.392701027 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.392379792 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.393798926 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.391647202 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.395381183 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.388840594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.39287708 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.392782114 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.39111327 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389548885 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.394714387 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393581081 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.483247321 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.39049754 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392393988 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.390983032 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.399601441 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.393647784 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402712219 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.394000846 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.396180781 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.402572651 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.413532819 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.394838387 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.397996878 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.398626085 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.39873239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.39573366 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398436486 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.396800456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394159199 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.396130273 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395414951 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392513239 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.393355935 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392369739 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394940295 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.396325071 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.401790075 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402109144 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.391678117 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.396217431 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392795187 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.394122143 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395569267 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39430376 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.395250863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.414248886 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.402353574 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.394289654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.391159609 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.39459155 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.398490414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.398612846 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398038048 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.395524013 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.400342058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397933486 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.392881485 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394299842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393732909 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390320446 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.396933197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.388427079 seconds)
  done (took 102.855364574 seconds)
done (took 434.873927838 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.545339799 seconds)
  done (took 7.848010697 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.574708183 seconds)
  done (took 7.879911163 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.695658357 seconds)
  done (took 24.004826452 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.470873502 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.439972619 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.415051013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.861780241 seconds)
  done (took 27.491271063 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.461422795 seconds)
  done (took 7.765407202 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.390431202 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.384062514 seconds)
  done (took 14.077539694 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.551851607 seconds)
  done (took 7.853337409 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.014975721 seconds)
  done (took 8.321848841 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.389655778 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.410940465 seconds)
  done (took 14.371430889 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.369616194 seconds)
  done (took 7.673566272 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.52380971 seconds)
  done (took 8.826246193 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.395264987 seconds)
  done (took 7.698499608 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.403463473 seconds)
  done (took 7.701606554 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.073665335 seconds)
  done (took 10.375408183 seconds)
done (took 163.190716481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.389469493 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.396063107 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.383581285 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.381600082 seconds)
  done (took 26.855680833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.432558379 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.431268784 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.435026046 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441717839 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.433817516 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.429043251 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.423891158 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.416340207 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.442488464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43424429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432016104 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435724413 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431465158 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.422275073 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.434411816 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.430595548 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436957731 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427352619 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.424019001 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.444835151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.399012479 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443974889 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.436620241 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.400045566 seconds)
  done (took 35.623417547 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.921918184 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.470297558 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.553764602 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447948686 seconds)
  done (took 7.699076864 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.45100704 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450005274 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.464669427 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.503343829 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.527183322 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.462681779 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.426766851 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415446254 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.405746416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452826304 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.52886975 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4697404 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.531365794 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395668902 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.584083332 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.397103971 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399023988 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.448948747 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.49830499 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520392605 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.395203466 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.450404025 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.455959812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.468851535 seconds)
  done (took 36.409021567 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412552482 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.406012966 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.399958873 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.398624659 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.418464467 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.401613883 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.398163603 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.403563331 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.400081314 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.406631121 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.400175353 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.412967534 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.402678794 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.400398479 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.40768547 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.403667268 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.406425357 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.399360819 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.399830103 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.407328717 seconds)
  done (took 29.395603225 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.39608434 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.248283942 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.745948865 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.651973877 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.394435934 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.398840622 seconds)
  done (took 28.145628039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.481236424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.651515247 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.397678967 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.804776297 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.894232043 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417377411 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.403845357 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.672849224 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.037763179 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.024356717 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.46887016 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.471368904 seconds)
  done (took 21.037174834 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.400232092 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.398992935 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.417553343 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.41550217 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.465062155 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.420047642 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.412364396 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.397022306 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.470635149 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.483569016 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.422996283 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.467232358 seconds)
  done (took 38.480955775 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484913542 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44608981 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.555702617 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180364881 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.111849608 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604757227 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.191540857 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.833974804 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397725147 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673080349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40252377 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489441759 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657971672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407282383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400688652 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.471525072 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639582009 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947881365 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394882323 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693192963 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428019092 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408032949 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893618588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.432863766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608144425 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372779313 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.664188338 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.176889713 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720124769 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41393019 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40869831 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399962682 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675109198 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103321836 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512993222 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409852522 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.133396853 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.940572567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.392568703 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.819427339 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414613498 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403505557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412752673 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402969425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334217405 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402769643 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850954504 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.403719237 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.11479557 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403924165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411949645 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49831122 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.40472082 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.392208418 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.446795466 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.403018943 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.399716622 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406816063 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976066285 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.276185117 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407848165 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.339337522 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.815879941 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.795029689 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087394862 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.521141747 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.403733879 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406029464 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337541209 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.711020447 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42244416 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549033957 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.424028598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051061236 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146659937 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417801389 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355910805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012261475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400711118 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.340866768 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634008484 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18012341 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336518701 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.344286441 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337097626 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19573081 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407400323 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.86513531 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40750442 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.84544779 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.411922512 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42284877 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431662284 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629992061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.280518697 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40489185 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.403989319 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534904757 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418511532 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.846786613 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334615963 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.40332839 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661879162 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.616490947 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416769033 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.481936512 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634651058 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399885274 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423441523 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422255404 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416759105 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.033667143 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43259463 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288113021 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428255246 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.182428892 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236641312 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402358009 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.529783757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421461365 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686623188 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.241695658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561839384 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473980914 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410908352 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405877946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830631429 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255621153 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.305863821 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.405194294 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406182149 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.435858724 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.405703388 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355259361 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.398369217 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430152787 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.209847689 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633532363 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408913723 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685242633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344926561 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558014251 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412348806 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.626461551 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.701128656 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.420089639 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667234938 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406646462 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426747817 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423939564 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424486485 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506462955 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432270049 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.427337824 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670122097 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.406524213 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.412634548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852435388 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.188883167 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412770822 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.41364172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267318546 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036264751 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400941905 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410707166 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298575822 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421195419 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477435326 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414463274 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.422934362 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.439818478 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269021011 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.411635454 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.402381879 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627399335 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415302608 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.843078836 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493846031 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.622892594 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052229839 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437304238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.344421389 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.11825499 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.101611787 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409291364 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.598348983 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410157403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417009782 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420539735 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.98119685 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036236793 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424732081 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.743365631 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.419996756 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421896463 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.413280505 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41152148 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.416339335 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327771541 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42588266 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424489543 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555851149 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.427235697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346725506 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.928201376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418404407 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.414101774 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.188366331 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445964332 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.751259099 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906464981 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666354667 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.173851168 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416840819 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96173914 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.449241142 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425675961 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417376179 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429875226 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.416929725 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437284568 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.423589124 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.851669405 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.852483191 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975770175 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201756487 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026204785 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486355904 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.432640065 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.318456477 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865182058 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342878567 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069462231 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629860821 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885351437 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353644167 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625760017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.708406097 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273661362 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414471452 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644446408 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464750998 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432752176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42931823 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626447993 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447126667 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416537639 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.345885823 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.691030089 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664895761 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409612716 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496488999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866370941 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423244233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.196178884 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.415940786 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.880862068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623043946 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.038791858 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.80353876 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414849689 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41872785 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910746186 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418013907 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94312318 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107233982 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431624763 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.631255524 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349197651 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42754342 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428070577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.413500661 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.918938391 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.419919535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677845812 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428231921 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352390233 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419685267 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020357704 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.283742235 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.424306134 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416737602 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259856109 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418229195 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743158862 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.431523038 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.455457952 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444516151 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.353091388 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35533047 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.113636689 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42165317 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39446755 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991115285 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.81587667 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.439379188 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452228798 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267382254 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674061245 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.433575882 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072936441 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667466369 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.241815076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444569288 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.5201599 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431246371 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.404782702 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.300012002 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654649908 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279215023 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638620412 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.604843063 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.365852544 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418679624 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635514564 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30316649 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437991099 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700762567 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.154913156 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.427064636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195704561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459415923 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43009747 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433124855 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.819264396 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429676411 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490624544 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433073365 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431787902 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.434366474 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61072391 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416747577 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442042129 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.435237841 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513978435 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349666397 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.465995084 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19853921 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079370201 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224394526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087359544 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45168612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424887766 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423174051 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356545397 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566665456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.952467137 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692869015 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554330578 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.890076763 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440026475 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435127519 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431207302 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634333028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698920437 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.297074269 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422797335 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106153647 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.311240545 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436489832 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.634632354 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98077902 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047699396 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536158195 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421229067 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872293508 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693402732 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.514609196 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421857781 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015086415 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.431375466 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.883624557 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.447676319 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425434768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574264667 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434313785 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132115719 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452417937 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.583577867 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.199303323 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896623297 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682598264 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.979288169 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428441725 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071884682 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.203622294 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682512689 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487233305 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437528849 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.537837036 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57233691 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.438375428 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326579832 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42638479 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271647257 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.133015164 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.437362091 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07469352 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702411955 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.422108734 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.438555601 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45495654 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.438941576 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64859606 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221955423 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645418496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435215772 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.429068944 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.418442932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078339374 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454274042 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36416479 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.425266373 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70058903 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.683272103 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452158037 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.880438742 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.138970466 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055708089 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.393737405 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449973292 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427745624 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199623648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061787098 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.493929675 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010308843 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.079290782 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440156984 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706721304 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.435628549 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442041211 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706464495 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.431082773 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42813259 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441200949 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.071051385 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31480338 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.448955917 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.820024963 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.365642277 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.653874876 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.105021019 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360791507 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422350313 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.62000247 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423552927 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560943414 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435407683 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.443407238 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432363454 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.161724552 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714719857 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42973749 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.424241906 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.412407077 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435062266 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436531121 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683073334 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428286039 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.107282642 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.778380528 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689186537 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438288039 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.411357439 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.434578938 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431101954 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147474653 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394055204 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.982212897 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057401805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.435620879 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.443337438 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436326639 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.648126213 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640933587 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440173821 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448527543 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445150614 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445772671 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.333396061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.200824177 seconds)
  done (took 1638.342211518 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433447966 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.439248644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.459653604 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442963689 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46170713 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.498782161 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.466398438 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.538334233 seconds)
  done (took 53.080117906 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.443602373 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.585240292 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.45949315 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.44368828 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.442872959 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.434891109 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.942091278 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.451897377 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.433609162 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.442030964 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.441907853 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.433059493 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.161892182 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.444282008 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.437825707 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419897839 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.435723065 seconds)
  done (took 67.202887446 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.437091145 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.944525104 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.476316133 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.434932074 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.985804392 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.450394322 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.920696709 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.443612339 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.449862301 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.443987633 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.086153378 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.430532406 seconds)
  done (took 81.848436174 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44213171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.440235237 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.442454477 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.444581135 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.443868086 seconds)
  done (took 8.554106298 seconds)
done (took 2073.977052719 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.778715289 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.234884386 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.15360251 seconds)
  done (took 5.733435918 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.584403744 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.63274947 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.794002803 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.772697741 seconds)
  done (took 8.127303685 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.718523643 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.820855686 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.61834995 seconds)
  done (took 6.500904026 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.033895386 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.451344526 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.582902012 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.437086845 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.43758721 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.437144646 seconds)
  done (took 20.655428201 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.441260789 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.441926036 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.440907204 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.443429242 seconds)
  done (took 7.113013915 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.41445943 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.135123909 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.411410981 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.42430077 seconds)
  done (took 18.729462688 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.185153032 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.201358431 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.185385155 seconds)
  done (took 7.918460483 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.435493825 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.282348824 seconds)
  done (took 10.064704696 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.742882115 seconds)
  done (took 3.086176576 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.571855781 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.772928978 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.576863751 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.574208867 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.619128096 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.881520767 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.291612658 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.852897035 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.529710544 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.904469886 seconds)
  done (took 30.919354952 seconds)
done (took 133.035211232 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.64742068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.472202837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.64253614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.657713512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.661970292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.641335997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.091265513 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.634616498 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.136687116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.105025745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.611587289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.665789924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835554104 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.460233521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.834661091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.845681406 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.6726227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.682069537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.339337658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4323395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097212346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.256118779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.44257064 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.505980181 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.676737993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.592805887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.854399389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.833320322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.454966248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.865519555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.581635412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44231909 seconds)
  done (took 201.018674855 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453436113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433525268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452775876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466003191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.432355345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.445929799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.452648685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.45702545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434982967 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.440622168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.434638998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.440329314 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436322242 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.460419684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435240801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.453766509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.451071527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.433817161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.436042799 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435550596 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.455922206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.459694884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432460153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.468405516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.450090588 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.437329378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.451713093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.445311352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448106236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.440219729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433411278 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444181983 seconds)
  done (took 207.601776114 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.44486234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.435568787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.43616834 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451171396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.434797302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.434425329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.45634666 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.433083982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446196413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.436115732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.433640881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434168042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.455338484 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.469887078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435621557 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436403104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43638058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.455047942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.464867961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44169425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437851295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443363993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.446088442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438825768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434035748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.435839051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45597755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.435829113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435155442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.44695919 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434640646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435230317 seconds)
  done (took 207.502373289 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.649429107 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.455172615 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.452424704 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.408004482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.45242438 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.452569818 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.452103933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645334556 seconds)
  done (took 15.319011851 seconds)
done (took 632.78439034 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.861281515 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.577030594 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.658739088 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.467059452 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.322399767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.486026793 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.470510217 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.662986534 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.406685663 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663195816 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.761675506 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.481213539 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.917696469 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.465660403 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.751605944 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.572153739 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.406997463 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.532109621 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.808060044 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.068281659 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.750036644 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.026061231 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.676588629 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.395931082 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.928730026 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.021169895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.239392125 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.390357513 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.482767203 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.825907438 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.233604387 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.498345038 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.539152983 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.54507526 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59596926 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.582415244 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.473471281 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.535655454 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.681958578 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.788030985 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.072789839 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.219068093 seconds)
  done (took 98.197177139 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.438326277 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.435925023 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.438904748 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.436375646 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.438857073 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.437895791 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.441124904 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.434564487 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.43767309 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.433751939 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.437613891 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.437431834 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.435418248 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.439435674 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.436674331 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.437215969 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.436979552 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.440695057 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.438472278 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.437177278 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.441049509 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.438390041 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.438163725 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.438025894 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.439286761 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.440598344 seconds)
  done (took 38.739890803 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.456991871 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.727572101 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.89950962 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.457359029 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.456192488 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.460371314 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.550208571 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.451212042 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.460794603 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.461672735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.636701862 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.453998992 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.497426084 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.924912448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.454287867 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.458279652 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.458418615 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.456120191 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.73225478 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460466407 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.573661607 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.452024567 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.549641796 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.462157444 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.48531006 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460440474 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.464946483 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983318587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.471742913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.640181401 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.354199404 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.547647925 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.926260724 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.921430719 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.352094134 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.466054853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.46128754 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.642604505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.454504511 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.460182228 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.548786836 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.454395798 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.907250656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.096274664 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.473833778 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.462254244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.014178611 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6579869 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.739193566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470065903 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.937591792 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454980626 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.465205506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.466228209 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.748624629 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.466923729 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.469491908 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.029396661 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481918864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548966264 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.461009588 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.464629195 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.740238724 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.456492248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.729675372 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.454930564 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.468882483 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.484366059 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.910654327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.457592431 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129546582 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476455128 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.461179282 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.642152297 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.723471349 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040303503 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.478068405 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.744340401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.945616017 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.567438944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.459419379 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.979856031 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.566437169 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.460839417 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.467735817 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.466566522 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.464740777 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.513337463 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.550665727 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.055132864 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140031441 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.06505389 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.577607772 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.476615754 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.464299552 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.034128167 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.478524041 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.467357505 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.928846018 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115544303 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.47724557 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.472726628 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.142781979 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.488825237 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.556358412 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.472001872 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.926518289 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45942702 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516748477 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.464072567 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.47071764 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.488210239 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.558244424 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.46501712 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.465641762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109576483 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.670869112 seconds)
  done (took 192.072913453 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.47142046 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.450462425 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.460847167 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.451104468 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.455653479 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.464417082 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.45503112 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.458723063 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.465671718 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.455549136 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.459563828 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.459504629 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.461138095 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.465434447 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.463600049 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.463673693 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.117873617 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.461924154 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.461117509 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.453347291 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.280209598 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.46321431 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.460635769 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.45234031 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.458326211 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.463728542 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.464710251 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.456693446 seconds)
  done (took 155.721835575 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.468378194 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.109410623 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.481511317 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.616255742 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.484416416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.466249953 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.620484806 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.525853004 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.488638593 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.466633042 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.463895027 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.806780503 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.461035134 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.050235058 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.681147721 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.641133618 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.054339983 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.477571807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.464156029 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.465738832 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.616170455 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.46722585 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.804714969 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.097277504 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.480386063 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.102428928 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443854873 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.471530593 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.467673996 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.1040477 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.478696936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.810823562 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.550380213 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530415991 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.124516067 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060661898 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06646688 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.630872777 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.459706612 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.465527291 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.466637984 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.453304784 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.143733024 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.490946431 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.469933165 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.129057967 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.491240294 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.471594221 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.47834741 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.469151577 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.539510197 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.560126361 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.851900271 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.151606434 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.580836837 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.4851197 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.621255856 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.84125312 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.4642674 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.054614465 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.446170798 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.145994958 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492617028 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.454042973 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.469589474 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.474721678 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.643518371 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.624110602 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.059595679 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.483348326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.058462225 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.657983252 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.471099234 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.470066258 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.474691531 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.149357516 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074817376 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.656636316 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.622891758 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.68887904 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.457628245 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.472170424 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.450095766 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.561037014 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.472875106 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.150476601 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074101535 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.486494093 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.4730149 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.472361958 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.474515108 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.675800168 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.169339383 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.579855387 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.043453074 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.844939648 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.83496397 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.473587972 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.540164681 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492141148 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.83773462 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.473563327 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.538683719 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916802304 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.830326782 seconds)
  done (took 176.530707922 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.737285807 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.757244223 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.566545712 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.62289668 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.12947158 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.073282782 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.76866072 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.617908015 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.599953235 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.75536496 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.720491228 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.556661201 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.68625767 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.559381342 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.275773083 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.565336976 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.594380348 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.632520812 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.601807602 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.547247575 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.173308985 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.788945888 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.660480008 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.52578862 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.570684296 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.285415771 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.060817847 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.004137038 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.665215244 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.870625685 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.034246473 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.645256678 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.537319464 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.205972549 seconds)
  done (took 70.769346151 seconds)
done (took 733.38227229 seconds)
SAVING RESULT...
DONE!
