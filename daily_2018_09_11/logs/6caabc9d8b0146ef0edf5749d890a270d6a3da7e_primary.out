cset: moving following pidspec: 8100
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.360801888 seconds)
loading group "string"... done (took 0.486477035 seconds)
loading group "linalg"... done (took 7.88881449 seconds)
loading group "parallel"... done (took 0.177915691 seconds)
loading group "find"... done (took 1.30395618 seconds)
loading group "tuple"... done (took 2.044106239 seconds)
loading group "dates"... done (took 1.438595483 seconds)
loading group "micro"... done (took 0.254140251 seconds)
loading group "io"... done (took 0.683885947 seconds)
loading group "scalar"... done (took 42.064195889 seconds)
loading group "sparse"... done (took 12.913666529 seconds)
loading group "broadcast"... done (took 1.199314257 seconds)
loading group "union"... done (took 14.601225754 seconds)
loading group "simd"... done (took 4.890571469 seconds)
loading group "random"... done (took 9.981529597 seconds)
loading group "problem"... done (took 2.04487184 seconds)
loading group "array"... done (took 22.825183989 seconds)
loading group "misc"... done (took 1.468307578 seconds)
loading group "sort"... done (took 3.649332232 seconds)
loading group "collection"... done (took 19.806746128 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.460912104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144082088 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147385363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.155535882 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188167719 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13855807 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157402707 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.109862683 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942575493 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184644016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143578726 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508464659 seconds)
done (took 5.019232888 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228891225 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082179902 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094197587 seconds)
  done (took 0.8559756 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08971173 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144287184 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090052936 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075106311 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090153566 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075723092 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075310202 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091703477 seconds)
  done (took 1.323500291 seconds)
done (took 3.184679175 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.732715422 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278241263 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204559062 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507898761 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178650217 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209517273 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674868709 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.366300118 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242401506 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101523169 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13051746 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397875875 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.117331852 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685447343 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08574635 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126517082 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.174855289 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462491103 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090272478 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090929366 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114004153 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153178055 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111494184 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084382408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.176447178 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078439453 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.185716981 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104440184 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076877409 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.283854327 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198427798 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.715447103 seconds)
  done (took 10.860961511 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115504675 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136149701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091665078 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1369602 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138611199 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080843902 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098944814 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076547782 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121987858 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178232712 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131040799 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139196526 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074615699 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078474139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115416311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245694281 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103615789 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119007964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094586811 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08779621 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133862209 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094401456 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105182459 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088729496 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165867181 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215345671 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108945764 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120993843 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091087069 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094151862 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140499921 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157403529 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077312829 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093387259 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175631314 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105380156 seconds)
  done (took 5.029463003 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188495045 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099488015 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185795132 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.108090724 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160625521 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139789294 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16688442 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095240082 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259413551 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.129547463 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17482603 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126034496 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111959314 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077025941 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097503913 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075384517 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.738310289 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162647291 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111464821 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112814084 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095648422 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082952512 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.707949093 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082714154 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090777233 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079277069 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085376432 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160374335 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079319772 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191735659 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098017448 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096590129 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113814162 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209917146 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106818459 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124081892 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132321061 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077700031 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.090844 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174010792 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073643218 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098813658 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076142528 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120904886 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115737799 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136048289 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091156061 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077723839 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221507502 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078875453 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.092400164 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.989750973 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17780425 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104882091 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074913614 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.337276304 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112940322 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076624209 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091254764 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263379496 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126611799 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095852181 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07719193 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077605713 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100035935 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381845028 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075970131 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.796361233 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080130348 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.0870577 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094007312 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09267372 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084038475 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098598818 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095570843 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091359557 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07870847 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075039766 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.092781642 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076446942 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11249781 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097721217 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076936575 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155155827 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076475135 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.074807802 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114661157 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124451519 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082205791 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076537252 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129550342 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094765248 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07639285 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132590385 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077783218 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112383802 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092350831 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124033961 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094091728 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.160796095 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.089839753 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107359642 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096045927 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125799537 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107529141 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078497367 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097911161 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076069383 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.090871208 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143733432 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078326811 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094906454 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076940663 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106160409 seconds)
  done (took 22.690209933 seconds)
done (took 39.262330324 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.352171318 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106404116 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106367318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106719466 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105419931 seconds)
  done (took 1.530585443 seconds)
done (took 2.257711789 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.27542142 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172131482 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073202447 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186206371 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07395155 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17564479 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159408402 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.107954092 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184092163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090984019 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163531604 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072733967 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08977593 seconds)
  done (took 2.578974679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091752224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112203518 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079777105 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091744756 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089802369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09094386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10613493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097985649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105919239 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08151765 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088970532 seconds)
  done (took 1.761690582 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091374934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110127078 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079286951 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090837877 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089497887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090456375 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10659893 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09686996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106337289 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082377292 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08962546 seconds)
  done (took 1.757541321 seconds)
done (took 6.816929279 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091710294 seconds)
  done (took 0.810501135 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.031878577 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.088803882 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116658968 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.162704679 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327679881 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207989597 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.58502332 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129971406 seconds)
  done (took 15.571211078 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.113090498 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095700096 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078455701 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112682611 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.081092154 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097120927 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.080504143 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093359235 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081062722 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096430544 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080620384 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093505852 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081508 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094274373 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07844561 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077917316 seconds)
  done (took 2.220232969 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116258908 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114371001 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100640972 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086634414 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099093604 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.082526265 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101670794 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099719545 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081130004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098261997 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08596973 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101308473 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083923357 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096347083 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084962154 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.102916468 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082645105 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09988008 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085576555 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101110474 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10231688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082985068 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102826927 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087776813 seconds)
  done (took 3.113529719 seconds)
done (took 22.438496735 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150559554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082841715 seconds)
  done (took 0.962723563 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098568172 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115997104 seconds)
  done (took 0.950612454 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104421536 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094218045 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134013758 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096395369 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096164183 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07995448 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127493422 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095981382 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079994103 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095383652 seconds)
  done (took 1.742720067 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082410281 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099447943 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088449491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117159466 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089512567 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097326694 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084226828 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098245605 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085480817 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09456032 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088547608 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112359757 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101896763 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097738186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100017052 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102107789 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088963329 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099634967 seconds)
  done (took 2.467149781 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078497723 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080363491 seconds)
  done (took 0.893557453 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081619039 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093796247 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081024151 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097098411 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078140165 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093085837 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077526682 seconds)
  done (took 1.339812062 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485273691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139374927 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267274326 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082334675 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119429304 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.313059334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.093887195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082456555 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099951875 seconds)
  done (took 2.475823175 seconds)
done (took 11.569098482 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088805779 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11466867 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110371004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467603072 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.112743583 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.078272195 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.155429436 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261269685 seconds)
done (took 2.130359747 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144832712 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33735258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12172687 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085943853 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078703279 seconds)
  done (took 1.36896025 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076338376 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07981119 seconds)
  done (took 0.904364589 seconds)
done (took 3.166751781 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076777567 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076973081 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109077005 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091819043 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076942247 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.074675453 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092936294 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076948625 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094671784 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077235566 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.078022702 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.095630598 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078702214 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091801929 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076063368 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095354171 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075794524 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076077856 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094929262 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075964769 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092382216 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078781877 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075706295 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092276574 seconds)
  done (took 2.822696168 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10626069 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094622432 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083232268 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099225419 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082151678 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099661274 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08327886 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093758906 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083601121 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094511949 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09774264 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081272669 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09495038 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081828302 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095470136 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081063376 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099622126 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077537896 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096057154 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082049716 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098950243 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078179534 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097781507 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083642632 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097540015 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082706431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095412092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078037509 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099506618 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097220425 seconds)
  done (took 3.466972056 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081475933 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073856913 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091297195 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082054331 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092172347 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080499658 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.09364341 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076775534 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077033298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093283357 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078964168 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093028168 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077705752 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094800919 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077235647 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079626717 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106582687 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07660684 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09366988 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077123875 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096836809 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076096148 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079286573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093304786 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076537594 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09355446 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076851942 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092994749 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077697288 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075480919 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096836656 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079271969 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093279783 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082959484 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097078589 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07598383 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.186516121 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092961834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077315065 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.092452575 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076471879 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075621712 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093590328 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082280263 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095130129 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076681952 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092085189 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076143153 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092611854 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.077850972 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074417286 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090885922 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0771954 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.0928356 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079111589 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091317896 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.075559145 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074162282 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09216488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075033317 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090336013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074166223 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093869953 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.074828607 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09204259 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099209243 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075317708 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093698457 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079410662 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094820653 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077304389 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107774922 seconds)
  done (took 6.975808461 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080152114 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102796556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076842053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0771496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089374033 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075870386 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.095723979 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076450566 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093584567 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093886018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092064976 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076742976 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093847925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079180942 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092342762 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078263274 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103515352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073125874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092694652 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079412584 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093452951 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080395833 seconds)
  done (took 2.648136095 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213110586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100871382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137741746 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092900106 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115332986 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11125805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084483028 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103206068 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084307297 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104692952 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087861512 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100324324 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113162379 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085519246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102228542 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086310617 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098226972 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103055827 seconds)
  done (took 2.682704114 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091659729 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095324702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101430751 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094575033 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077758314 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097539134 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084730158 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110951252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08065928 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095011474 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088686897 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096954598 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080286138 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094531304 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081291373 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094256318 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081510822 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096553732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090033727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101197199 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102663224 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089911791 seconds)
  done (took 2.784476525 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094799446 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096921891 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098727057 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098567879 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076935562 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095873214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085259436 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094491943 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088084334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09666679 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078505319 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097041928 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085092364 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095329042 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083950296 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095062773 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080053078 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094447667 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080269224 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094197151 seconds)
  done (took 2.571145145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118239888 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109918518 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093222903 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120957185 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09428474 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110825018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121289716 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094164252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109900907 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107847494 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110205832 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110396414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104770272 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116980751 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093281012 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120265118 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121412583 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104434229 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109686277 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09474308 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124560429 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110980432 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106694268 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112762858 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096035218 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112808277 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095421008 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11988043 seconds)
  done (took 3.805936006 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077196581 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077225651 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092283956 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076821925 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095010582 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077356849 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07684868 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094952987 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080111262 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094439894 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08018349 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096511954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080194218 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080374979 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097095134 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079584302 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096614853 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077433572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079011001 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094466472 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079743432 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09686448 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080092452 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094263114 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077507274 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080041303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094331917 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077826775 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097080311 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076201194 seconds)
  done (took 3.323254355 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088704684 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103267324 seconds)
  done (took 0.958252125 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075682758 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112215122 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075121819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081596911 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101337319 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079058888 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105310967 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100469896 seconds)
  done (took 1.495641478 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096187676 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114656926 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084392736 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10723592 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096645772 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112060166 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155253395 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08328217 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08388733 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.093581905 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095259865 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.094027458 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083863994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09639114 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.083937417 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10176203 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079242571 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104956737 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086120674 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097314441 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083791237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107520916 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080858689 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.092108455 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080388911 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106652653 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088679215 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.096751425 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081838852 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105129172 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084110522 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071607646 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099325095 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084006675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097016538 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095290963 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108858803 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082322094 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10456895 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08416776 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104789262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077120308 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101226813 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084618709 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105735882 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084279806 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.1012234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077276684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.093273397 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080988557 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093825114 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079087975 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073832954 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102555998 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083033582 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109781491 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080533161 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.097366701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082477584 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098444572 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087115845 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098029273 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080910941 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099844176 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086448505 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098986294 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08638138 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093597409 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072432607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079491687 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103779375 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118563593 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087618221 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100478322 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084662844 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096011332 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082539778 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10221657 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086657397 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104408572 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08336495 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10361769 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087189205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095521888 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081383043 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086161452 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09827747 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082676594 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093887752 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095143537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09878202 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079476255 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09369118 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088654507 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100589096 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083117825 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093651841 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086676444 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073124716 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10100921 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084385291 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096671745 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.08934168 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10147344 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085516308 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104011936 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089748282 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095649402 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0822224 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092970519 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085695902 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097990655 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087385951 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091362706 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08308004 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081272527 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101583863 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104263328 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080800851 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084294891 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104483382 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086406622 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099299987 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075520754 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099168021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08304537 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105249395 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087780667 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10050813 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07886703 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097817427 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08661013 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.1037417 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086391118 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10390395 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082620421 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073270493 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097339525 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084964785 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10460079 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080202403 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097219372 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.084695436 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.097744643 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083775358 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102478361 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081469152 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095545855 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.083612182 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098677988 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077676242 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105177938 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081908458 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080821749 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099785517 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088744239 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099880978 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084834991 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098889792 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085054479 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10171627 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079163593 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096271953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081834067 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106475756 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082229019 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076462346 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093766622 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085934982 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.093657259 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083687014 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095582668 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082551003 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10158761 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081728129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10026088 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080754553 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11224166 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092874552 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102262536 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085695415 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106523984 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083130131 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.0983521 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083087332 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084277989 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101807764 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086186762 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.101708236 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084277185 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099036301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.075899146 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102513464 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086720926 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095965844 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08055483 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09487872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083936278 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10355028 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083949954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10163915 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081794737 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079135428 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105171207 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082042458 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100237171 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078360682 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100888896 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078902843 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102818598 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085330924 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106546846 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083037837 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095790007 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091095991 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101729708 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088120476 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098285807 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078829499 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080223312 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105812568 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084973428 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102733024 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076067474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107290756 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090316109 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100196343 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080820214 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105139496 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091550569 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101308047 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085510656 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084983846 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106623537 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114153544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080666846 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08424301 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110859383 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085881355 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093525395 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08796795 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102158984 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081401349 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10288199 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084689935 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10329709 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089555913 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106088464 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076244753 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101924927 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084244952 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080135626 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098977426 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089676671 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104420343 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084390216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109827969 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088562179 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105856902 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086660366 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104470311 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087549965 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104241465 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083531425 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102466874 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08179107 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096051876 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081841973 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079063732 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098956584 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081537675 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101830087 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07983592 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103438564 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083038423 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096685598 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084719215 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101814721 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080748682 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097052672 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07903305 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083631578 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097487548 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079791534 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100695441 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078176243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104432736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084594733 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105531977 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081854904 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096610123 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087708462 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102190738 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.086910111 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085181745 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104000929 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08082051 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.1008448 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082234885 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10653621 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077179219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107474586 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085506541 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097640699 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082479585 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097841027 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081050891 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096126126 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082320427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10296437 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079494962 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082985775 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102610694 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082225653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.097263575 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08098921 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102651478 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079986983 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103081057 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073821671 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.095902792 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.07969176 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084426588 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105666565 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084126749 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100384733 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081977112 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103445196 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082231703 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094046437 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088471468 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104359106 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085163397 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106092432 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078840886 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098384574 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090349663 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091649075 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082036037 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079999846 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09574595 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088017534 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102527218 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096560662 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097421567 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07885055 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094702986 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086406566 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100414049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073981058 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080062344 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100706075 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081802454 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101205699 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086777381 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100658443 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086702157 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105667221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083387605 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.099526334 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085862921 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094507482 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078504568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078904871 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.101573364 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085039717 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09525385 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077536946 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101264746 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082813529 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098277044 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083438892 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080874822 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10600257 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08385462 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101058863 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088765108 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093160317 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083124866 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101686121 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083951853 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096650232 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084318533 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101132414 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086401272 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105253613 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084382938 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097857328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083611462 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098499391 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083706071 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082443522 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102928403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079130816 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103229833 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088471038 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098915337 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082296639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097764002 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080379461 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10303667 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085675438 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.099952621 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088093038 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100345976 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081460821 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085887954 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103719161 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083082523 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103995133 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082078174 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1044112 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079201636 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107914977 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.079954114 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.1041312 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081919494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095213572 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083858156 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101978293 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083170238 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084156294 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103662118 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078250056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097252469 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081503854 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.099764287 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088558963 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106042453 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083294326 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101436705 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078760949 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09495729 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085886251 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07632094 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.099850315 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082523997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104590127 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082654852 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098998378 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082821955 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106884335 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086784197 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103633418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077324814 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103111537 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086219664 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100596759 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08155495 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097988322 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085834912 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103083648 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082059853 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078481687 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107313952 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.084378027 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103873213 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081912041 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09867001 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080641618 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096898375 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086014792 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101374679 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088471982 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101709697 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084326296 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108545124 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080359106 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098343673 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089767419 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101767639 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089114871 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096211487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082440562 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086226831 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10456778 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07876578 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097303194 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07818638 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101176153 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080879062 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096839099 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091201128 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.106358255 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083559141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100585799 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083554621 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078564242 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09713888 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079884619 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104446731 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082399669 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109050016 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07993817 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097540478 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080212423 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102858163 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083939357 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083305869 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096857469 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078981288 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097739319 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083371373 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106229618 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084153947 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103019158 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084578923 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100870051 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082010281 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107292769 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077724835 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084405496 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110710639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103377823 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081255126 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085291189 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108213641 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085390539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097351442 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085437827 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101932528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080978366 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104393245 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086678476 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114789142 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083644619 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098562364 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083891811 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101387914 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080310685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.106839414 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086844609 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104170131 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086323598 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100663079 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087380422 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082842691 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106784161 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08257783 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10219304 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083521531 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099956501 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083531401 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097568661 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087561616 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104575839 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085298882 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106866501 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08056018 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109124503 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090541686 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103682563 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077361563 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079205374 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099389307 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080175876 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104876646 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079899202 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100845885 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083087677 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082420081 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099604058 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086805068 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101249812 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086205698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104505362 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075133337 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100668097 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084003349 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099461826 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078568948 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085671861 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105061946 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086657602 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10971867 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080881636 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103252005 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082322671 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100011904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08038346 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105702195 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083874468 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101194923 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080303982 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08500213 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106248678 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084337801 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106076339 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087436202 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102015241 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090244512 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107520023 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078299514 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096295954 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08691673 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100506248 seconds)
  done (took 55.554060128 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147370045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086879079 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075068216 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095095108 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121890832 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080801839 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094621009 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081052095 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099215188 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090742372 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094432193 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076816918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118033773 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124364879 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120768171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091450555 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094936089 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080878084 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094570727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081216546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116029307 seconds)
  done (took 2.879214524 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103571181 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114741387 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112345501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098613677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10665425 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113122237 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094189932 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113751328 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118256435 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089624968 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118080915 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113589274 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089142752 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107116268 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089479716 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11136739 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117688673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087653755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.1145828 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1122977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092332622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112786404 seconds)
  done (took 3.143783985 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090127905 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084175593 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104095057 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075672075 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103065168 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075964449 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107993917 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078513628 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107509909 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.080240658 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078771445 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.098886632 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085967876 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.094849246 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080394025 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.096680564 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151738049 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089346178 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103566 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086424347 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097977338 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083982051 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077939298 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.098792754 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.079889083 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112124856 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08641128 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.104018655 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084542745 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.09811238 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084781014 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077792561 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101588874 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.080997889 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.098859786 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079892762 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102864798 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085552308 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077911823 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100712546 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081316613 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099245072 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085865826 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101466642 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082330245 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097251968 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082627846 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083984524 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.095596988 seconds)
  done (took 5.314517861 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115448031 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13458102 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104288797 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143792853 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119464553 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094482877 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104787584 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143610942 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079818499 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102996775 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10081435 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118350477 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105184105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090867212 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107454939 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084955383 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106221155 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080447919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109043658 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099658452 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090852378 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106723269 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098532195 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117081781 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108355702 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084349937 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100458167 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091011875 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115560278 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110853448 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091246125 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111329904 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118940245 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083507777 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099881046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088020474 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121172973 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084843996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106516264 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078625988 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106072148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109396259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089297089 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121212255 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08582662 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107141051 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085051528 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097772207 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116499429 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08807378 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11427976 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119541636 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090209636 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104421145 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091162486 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120406613 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103165288 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082937182 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106990971 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09680771 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097917811 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089338051 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118301481 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105825385 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094457727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117804978 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105471699 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089427559 seconds)
  done (took 7.966330927 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113698067 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10925991 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100516737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121112642 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109573208 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090084428 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109127271 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09032321 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109776025 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116572583 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090657539 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156409973 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106388618 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096090446 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108863073 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089873843 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109488849 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090980371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110453196 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089632277 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109977474 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119981561 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090498785 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120340589 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124337811 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088536337 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110904503 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0905774 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120474622 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109493475 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122816279 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09106995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108008091 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101130655 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122597422 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109535583 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084910832 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109187499 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089917626 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109951678 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087115202 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120956149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110349045 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088163448 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109038847 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090842796 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121067237 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124178852 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096025254 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116641524 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109177672 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101256283 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109262645 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108803738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10098864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12848007 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120663903 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120335532 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090354876 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120180381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120474458 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107827838 seconds)
  done (took 7.480786705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114738254 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.119545024 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123338489 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077034011 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099025594 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090377918 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099323975 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.0805713 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115476258 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095741281 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118020305 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109783746 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092991869 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117965576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109782369 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09440482 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108965715 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109269433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095802294 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108972479 seconds)
  done (took 2.909209698 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090988273 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122692041 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084049247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10949249 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085168393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109382907 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083698916 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104923902 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084054009 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105584114 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094005886 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115982131 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102106465 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090363957 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11415713 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089178233 seconds)
  done (took 2.412803343 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095149869 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123898277 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12179193 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082501156 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.099761087 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078640126 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084298532 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097945146 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077968418 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119283325 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08158931 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109163266 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084340334 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101268004 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.078367446 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108245066 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.078294267 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099631814 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085273587 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120448929 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092745953 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103327289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085150316 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.1050119 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102563433 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088857019 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.102466974 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080746355 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100550392 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086337467 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102254987 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091058578 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097549734 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082162833 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099845958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080770385 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.085176822 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106048195 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108205268 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086018115 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.080931337 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106275325 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08900634 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1080092 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081395443 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110208272 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081657057 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113750739 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08384969 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106126997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089922873 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109172063 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087760236 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118173697 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089727861 seconds)
  done (took 6.102784033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097514276 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105431859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077889234 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078639773 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105622345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.084674246 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106817037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085072339 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103594801 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080029784 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104449047 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086521951 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103729201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086167134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104066576 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086465766 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096601404 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084904307 seconds)
  done (took 2.51206045 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088147832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081687789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110154293 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08187057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101996196 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085267213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098540143 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081729889 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10068728 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082806645 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100705343 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085376502 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099751198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085165549 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08245148 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103661656 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084109723 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100677119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082410208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097393404 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085007881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1000158 seconds)
  done (took 2.855108571 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119759537 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121769167 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090490877 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.210348117 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122460235 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107623552 seconds)
  done (took 1.606139702 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107377969 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139016429 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082679982 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104711105 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095257983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107253523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086671188 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107652088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118268097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120969113 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08836941 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119053943 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099268577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118195833 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115499171 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094338018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1069296 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10566096 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083709371 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12806815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086829036 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120131187 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106765931 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088054326 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106450796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097517888 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120222269 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120355287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0863002 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119333882 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115293013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086782396 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118920513 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120454871 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084698102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119500169 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105620824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107955537 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11503444 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118060481 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085185816 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11445666 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099106454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115136167 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118672969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086788945 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114484755 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107164626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087869277 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135487521 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114631908 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098713128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115776624 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118930513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099346142 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134618003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121091859 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117792316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114024916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101388171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118168067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114743881 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097975818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122081284 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114749399 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118749823 seconds)
  done (took 8.004717153 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122281579 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104502661 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08628896 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121827666 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118777171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087352794 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106787286 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106574774 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08819782 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103480581 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152297676 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087471129 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118155455 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117953523 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087969939 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10712927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088660833 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118172377 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083829161 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135424761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107325507 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117974935 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098522949 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118428465 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121984158 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115486531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087658942 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106784098 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088243774 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107672216 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094355783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108021474 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118550437 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08469801 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118758172 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087562888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107171815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113074332 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087963609 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115039128 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117137187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108565946 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107871924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086501996 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122161952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107650297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088081673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104690992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087836973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104866738 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121596247 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101644613 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121999823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118944341 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107555085 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088312162 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106609825 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088426012 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107987575 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095222445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117270628 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107777719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13568027 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088490559 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107177248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098625627 seconds)
  done (took 7.840069964 seconds)
done (took 150.864944238 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099320771 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13620442 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09684278 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164299528 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084057818 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136325028 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115692464 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117154624 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083132309 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08245109 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.102984901 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084737182 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167940673 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083235688 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101921457 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085811164 seconds)
  done (took 2.584980221 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181363757 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292262585 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100721722 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101477568 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088648914 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10326035 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081697154 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090099459 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105060383 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082287623 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103200491 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083044576 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.101933062 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083470405 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102961278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083161671 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081241487 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103308182 seconds)
  done (took 2.82068639 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111582719 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141964527 seconds)
  done (took 1.103006389 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118310318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175583325 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271667497 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153066059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133015123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097868576 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153611002 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123195503 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204582976 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127310316 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125791763 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090125751 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137312905 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092267483 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11162047 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089088147 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138523666 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110958812 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091805353 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110600619 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115551079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102530233 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092537248 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11073778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186472448 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125099306 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083044287 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081384102 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112213821 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11098398 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090135115 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116669322 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104693528 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167743257 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096496538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.148899638 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.110985498 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089118105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111927131 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088544247 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114743037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113452016 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.098492301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109541281 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083221093 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109309479 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084661167 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.082185554 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111913453 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090558088 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112082734 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108666098 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148344028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091873452 seconds)
  done (took 7.205846845 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.815918701 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149688303 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087125086 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.913690803 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136432279 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101444929 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.807555918 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132988918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231734816 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.817135552 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104415472 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118561497 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205011418 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.246513698 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944912861 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307497446 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691359331 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123541509 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.34935764 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146089639 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094587707 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133723637 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126233938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.404823501 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110930273 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086682441 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113945297 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11568431 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158749413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086770015 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110483664 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173557432 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.239528843 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201594875 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089537453 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107118219 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086577982 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16155694 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26799711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213274696 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151614739 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104961382 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08587692 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118474066 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126261177 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084721554 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158796336 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166610013 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186893506 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09057243 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117141921 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094647593 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117603524 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15784635 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083826921 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313529547 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308982428 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107584945 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095167224 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123183651 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240860449 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108029557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221804068 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113687504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213013415 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085987096 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782414375 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161202287 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106964532 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094014925 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114796863 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091707984 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117056843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161200091 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.385263173 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099215207 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111559975 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086065584 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235848093 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088222279 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107195881 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160096318 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088353528 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115845894 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099035535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1208966 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164742185 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.2199514 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119838617 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117043933 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091344379 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120464083 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089437291 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211000406 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21772497 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154822229 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206730447 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119751822 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159059601 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16049171 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117423444 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166137835 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114796731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100747955 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119212443 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216452048 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137406316 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087045693 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110713821 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093311885 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140505537 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088069999 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115398992 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162834221 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477188521 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.160962641 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083721804 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109910828 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095994344 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157770519 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114590107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233958048 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117093779 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161181225 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114262208 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083558587 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114898536 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159182228 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117602572 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094561533 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11878707 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092831373 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243619646 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196139191 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119832914 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217571179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176803346 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114938528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16814037 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11465588 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16483961 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09465518 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117202452 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087519613 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778824031 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119779037 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09319611 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1119948 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181897027 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087537665 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085727154 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108535329 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082621391 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773901441 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087954895 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105837248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086907692 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115430277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093119864 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114150129 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089281024 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17836205 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206676435 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117683137 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113644262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08786713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157061632 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110054433 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087567856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10739554 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088406683 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115217254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090660296 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107899441 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168148485 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156578914 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21865858 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577962001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107815244 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088003782 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227158969 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08661348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282782364 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115369705 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203358747 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182089441 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085889544 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30649617 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163713209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181700011 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090094032 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.165762049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106180776 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092180387 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178366892 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087768192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114114025 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156521128 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100226575 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120171343 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92211443 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087636972 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222789821 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105683219 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164404493 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088354101 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117980952 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289000053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08706389 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125410831 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158455181 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110722486 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088267505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.728341633 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109584996 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095876401 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115751647 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221162893 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163854899 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11512676 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094683907 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117898777 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158349973 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207250368 seconds)
  done (took 42.576501285 seconds)
done (took 57.141277162 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280294631 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213419931 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266203762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16702693 seconds)
  done (took 1.877415335 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177391057 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12388199 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.144783771 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.102608096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.130555301 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103665905 seconds)
  done (took 1.65885619 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.375566681 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28266072 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241220901 seconds)
  done (took 1.774253996 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248392807 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.265169186 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325941547 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.398363823 seconds)
  done (took 2.219203651 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204634471 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.12209128 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098273718 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1356472 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.144537379 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20844469 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140288195 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152252026 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105244454 seconds)
  done (took 2.233388719 seconds)
done (took 10.642605111 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.269664052 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.152969583 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.128188013 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147346998 seconds)
    (5/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120867508 seconds)
    (6/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.224608026 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102896676 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.224341231 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126277608 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.257635178 seconds)
    (11/286) benchmarking ("sort", Float64, true)...
    done (took 0.214306418 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.202837671 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091418669 seconds)
    (14/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.201978992 seconds)
    (15/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214307426 seconds)
    (16/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242911161 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.123690881 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.147373897 seconds)
    (19/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11833538 seconds)
    (20/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.095437828 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145746241 seconds)
    (22/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095476887 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.130410115 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.180358647 seconds)
    (25/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091566013 seconds)
    (26/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.199999124 seconds)
    (27/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.113181958 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107228393 seconds)
    (29/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.218852789 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134201502 seconds)
    (31/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.177982471 seconds)
    (32/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134955424 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.231477542 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119418435 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094870612 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.204203141 seconds)
    (37/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098621567 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116245806 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.207439933 seconds)
    (40/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.111874368 seconds)
    (41/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.116795786 seconds)
    (42/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.114385425 seconds)
    (43/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.162050265 seconds)
    (44/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136025294 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100922259 seconds)
    (46/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.249307139 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10678082 seconds)
    (48/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.210091592 seconds)
    (49/286) benchmarking ("sort", Int8, false)...
    done (took 0.194474083 seconds)
    (50/286) benchmarking ("sort", Int8, true)...
    done (took 0.229513827 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.136682579 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112524063 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0834659 seconds)
    (54/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085616461 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114705112 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.136221883 seconds)
    (57/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151755834 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12547964 seconds)
    (59/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135909803 seconds)
    (60/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.155301027 seconds)
    (61/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.106897929 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08196202 seconds)
    (63/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191181509 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07060034 seconds)
    (65/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.181070201 seconds)
    (66/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083891994 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.180977869 seconds)
    (68/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.184246638 seconds)
    (69/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240617402 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.089010001 seconds)
    (71/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118865608 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138098115 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.150250171 seconds)
    (74/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109830793 seconds)
    (75/286) benchmarking ("sort", Float32, true)...
    done (took 0.236466577 seconds)
    (76/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.149637161 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122906605 seconds)
    (78/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.184691692 seconds)
    (79/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103863597 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121846265 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113112471 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106257587 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083155559 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.103941807 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.176894143 seconds)
    (86/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.22603062 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.117506894 seconds)
    (88/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091794239 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132986788 seconds)
    (90/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171518552 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083045195 seconds)
    (92/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133677 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.209629088 seconds)
    (94/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095262745 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.187778616 seconds)
    (96/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163209694 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.08548422 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087751447 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113543418 seconds)
    (100/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.13568588 seconds)
    (101/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103875421 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134182707 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133218213 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072435389 seconds)
    (105/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.09768606 seconds)
    (106/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085324976 seconds)
    (107/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.093570773 seconds)
    (108/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.126313028 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.113552808 seconds)
    (110/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.085169935 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.19191266 seconds)
    (112/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070391704 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.094918819 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.083135799 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110254302 seconds)
    (116/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.140136797 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10348457 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 0.18510777 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095418649 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115508103 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090495268 seconds)
    (122/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071325716 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1144208 seconds)
    (124/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.084390044 seconds)
    (125/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.147944362 seconds)
    (126/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.070965979 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111172033 seconds)
    (128/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089310481 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110274135 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09630435 seconds)
    (131/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075999694 seconds)
    (132/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.115535045 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190990764 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07421586 seconds)
    (135/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091508961 seconds)
    (136/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.119333771 seconds)
    (137/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089356803 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.181966524 seconds)
    (139/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.182521629 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090510917 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11640385 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109138283 seconds)
    (143/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.095031904 seconds)
    (144/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183929922 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083799818 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091207241 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188317715 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193936447 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095352235 seconds)
    (150/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12037002 seconds)
    (151/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132153031 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099449753 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075240044 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116540251 seconds)
    (155/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075390504 seconds)
    (156/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178528323 seconds)
    (157/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191811688 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08427007 seconds)
    (159/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113151713 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074934401 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089221566 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.108000195 seconds)
    (163/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.091238725 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.099134043 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.087001371 seconds)
    (166/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098274587 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111399144 seconds)
    (168/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109885931 seconds)
    (169/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085382537 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.070640573 seconds)
    (171/286) benchmarking ("sort", BigInt, false)...
    done (took 0.247442057 seconds)
    (172/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152613558 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186871973 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.089603652 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106813796 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083044453 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11787699 seconds)
    (178/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.07203519 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.189638377 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.091081513 seconds)
    (181/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107427047 seconds)
    (182/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110611716 seconds)
    (183/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.095264135 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.146379674 seconds)
    (185/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.105591364 seconds)
    (186/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087607056 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.230021852 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.106676794 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08317934 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097819347 seconds)
    (191/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113508129 seconds)
    (192/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09857614 seconds)
    (193/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119803702 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083061404 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.161540536 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.092901127 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11486214 seconds)
    (198/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.071004589 seconds)
    (199/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.104509178 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074749003 seconds)
    (201/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070908191 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107294655 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.083536368 seconds)
    (204/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101893052 seconds)
    (205/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.08125928 seconds)
    (206/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.071902335 seconds)
    (207/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174930555 seconds)
    (208/286) benchmarking ("sort", Float32, false)...
    done (took 0.17894658 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079821889 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103903783 seconds)
    (211/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085409067 seconds)
    (212/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084929963 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.094819567 seconds)
    (214/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082627516 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167237843 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081844852 seconds)
    (217/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.098970572 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083614786 seconds)
    (219/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.094334131 seconds)
    (220/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.166078404 seconds)
    (221/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094946717 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083651619 seconds)
    (223/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.095807039 seconds)
    (224/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08650097 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082472402 seconds)
    (226/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.09385696 seconds)
    (227/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083615846 seconds)
    (228/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112552142 seconds)
    (229/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084751507 seconds)
    (230/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070986748 seconds)
    (231/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09817948 seconds)
    (232/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072489915 seconds)
    (233/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.109478656 seconds)
    (234/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074619218 seconds)
    (235/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072879644 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103142576 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08382967 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108498902 seconds)
    (239/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088251135 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082863007 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.103972738 seconds)
    (242/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.082768828 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105383034 seconds)
    (244/286) benchmarking ("sort", Float64, false)...
    done (took 0.154326214 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10656287 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09027864 seconds)
    (247/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.093017762 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092639542 seconds)
    (249/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.084570717 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108160928 seconds)
    (251/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096617541 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.115429165 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073233582 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107744527 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110166005 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169447922 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089484408 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.109944829 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091380345 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.107461201 seconds)
    (261/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.072311635 seconds)
    (262/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07485677 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170040743 seconds)
    (264/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110337074 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.09254082 seconds)
    (266/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.083182256 seconds)
    (267/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.097684573 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083054703 seconds)
    (269/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109193522 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074784702 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084113991 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.116637042 seconds)
    (273/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.176494811 seconds)
    (274/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.080917491 seconds)
    (275/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.071164941 seconds)
    (276/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109323906 seconds)
    (277/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186158533 seconds)
    (278/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07391767 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076442362 seconds)
    (280/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110011981 seconds)
    (281/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082266303 seconds)
    (282/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.094439418 seconds)
    (283/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074843483 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108639142 seconds)
    (285/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095109141 seconds)
    (286/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081752215 seconds)
  done (took 35.802886835 seconds)
done (took 36.687769715 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097725782 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14818939 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094273471 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134354483 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.098226749 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.120769019 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092531122 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119033312 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097170788 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.120942666 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096145253 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096131238 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096973603 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.116685203 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095344287 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137589661 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103488583 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095788005 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.115400177 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.083890383 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.113421838 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.084289271 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11306339 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078621768 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.09993087 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115019828 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090018067 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119691733 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083353975 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.106364959 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083358651 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113856194 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084585873 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097812594 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.113666016 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087131746 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120258269 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093046485 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108187827 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084686643 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115634527 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088407707 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095842585 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.121886844 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.090699211 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.112624166 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.093522906 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126537712 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122601324 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119459449 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098133814 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123383529 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101236113 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118945154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089678577 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092774348 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113067724 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120524407 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.114760002 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089651928 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115151255 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091777197 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.105606115 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088986455 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109236322 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095053843 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093875032 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.106608991 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094096986 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.112254895 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.084125493 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11101859 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083559929 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.084593579 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117992697 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094759371 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108021827 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.08640073 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119913601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095874816 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111832148 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093059794 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09080002 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114908677 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092623007 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.101920512 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08951782 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095816455 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112026738 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.088988142 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115205431 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092563602 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111597059 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0959535 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082320057 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.10692786 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.084223018 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106669599 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087802953 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085288123 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112952604 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093179726 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122369063 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091163683 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.114183174 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.102535087 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109927345 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091228282 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082768416 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108676873 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103958534 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122393976 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089318807 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117671009 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089300335 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090973328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112923335 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089168385 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112886864 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090956466 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.090861852 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114782752 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092998477 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.115217321 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103438487 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111464304 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.086407888 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089500721 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.113216618 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094298258 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113546402 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090517861 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115011229 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089004014 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093255909 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113822802 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.091753504 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114483422 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09436805 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113220744 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091544234 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.089010328 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114443213 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085262306 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110699106 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.084853186 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09553009 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11660541 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089879448 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.113206778 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.092143246 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112828081 seconds)
done (took 16.480970383 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084795586 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183057584 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144534243 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.121998504 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132726334 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084783041 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119822681 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.140220176 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.086775425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140563501 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107799569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128597311 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146829178 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08516437 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.086428494 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118476182 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089208297 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128114535 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145898716 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107666077 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142449909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084304789 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.137855399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132221785 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095347277 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134706241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085928284 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087534296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.111480324 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101300802 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129573881 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.088369845 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108444707 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.108704102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125303054 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092340114 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.10716356 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09147775 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107013108 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.085595179 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130766048 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107378097 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.113900867 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090649877 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111702625 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094801872 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.107978497 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094158882 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11846836 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089677226 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12302887 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.11304535 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111157152 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101269307 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.10686896 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095591362 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124737686 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092154031 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108629031 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093397032 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106490324 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.089430936 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123690935 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.110144581 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112862968 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100336475 seconds)
  done (took 8.243559407 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103959354 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138351804 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103256168 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126652677 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084838078 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108837572 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.086099702 seconds)
  done (took 1.695239139 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086210833 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12687491 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136472812 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134715561 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109463877 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13535731 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09122623 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108362663 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105947323 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.109750138 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11098572 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150205625 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.086849628 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118204303 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114263011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109949113 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113725633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.108584284 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089614898 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135914454 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089376539 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129972704 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.088887111 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110022958 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10519502 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08486812 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160409811 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116567392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084036091 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089891031 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11056756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154664744 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110917944 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125845556 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092026934 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.135538351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.110906994 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113296627 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10786559 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121553996 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108966655 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085699945 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.111242861 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083734142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114319714 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100022973 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113936727 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087407008 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087909499 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134565272 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.086385881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128724659 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085765729 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113273876 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.087339938 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113571075 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096195962 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110168178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110764382 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082678205 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131097428 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130006275 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104204521 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129080108 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088991541 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127292363 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104384045 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.087579847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111872418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.089030928 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131612873 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.083698309 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113589473 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103590014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11133396 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114281987 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136631679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088023249 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121253701 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087308589 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.10996518 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088612191 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113240756 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114887057 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085344444 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11456651 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089473487 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107781233 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085974388 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.089539645 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108868543 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08981165 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115845687 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088373701 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119501366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113597171 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115294553 seconds)
  done (took 11.461301957 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089039236 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0864994 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113859189 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088067684 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110880251 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088221752 seconds)
  done (took 1.526873138 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116926081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111331135 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100868092 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115126566 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128606579 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137019164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111475809 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120927163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.12771905 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.098707385 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.139028679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1148679 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147413718 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.092124892 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.139605347 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090984602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13578849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091673351 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124507132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091820714 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131384303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095128438 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122054703 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110827722 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127179088 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097239643 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124804809 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104981342 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130770226 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102286117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124578708 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102141048 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124052732 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126343808 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.120002451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124036331 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09840495 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129814079 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1008531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12761459 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120626112 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123203534 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105464488 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130386889 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10330118 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124889948 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.105506904 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12384193 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.118455386 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.129895742 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.105710468 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122682722 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102569541 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.130002112 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100355018 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126091797 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098242318 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13919408 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091626292 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117553328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088886027 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121199916 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096220277 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120479187 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095690421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122645887 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115334526 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093487203 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092291702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116213469 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098656186 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.113318537 seconds)
  done (took 9.211663419 seconds)
done (took 33.073488446 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671222466 seconds)
  done (took 1.621626153 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.810636178 seconds)
  done (took 1.763760732 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.993947133 seconds)
  done (took 16.973274514 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.462415244 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.536109076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.969729177 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161833517 seconds)
  done (took 3.079665983 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.932132225 seconds)
  done (took 1.899648247 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282458024 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23218995 seconds)
  done (took 1.472920704 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.748313658 seconds)
  done (took 1.7157651 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.449652115 seconds)
  done (took 2.412073114 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326931794 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158014813 seconds)
  done (took 1.457606491 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.569969574 seconds)
  done (took 1.539710326 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.785727246 seconds)
  done (took 10.754107074 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242210752 seconds)
  done (took 1.221806895 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287418078 seconds)
  done (took 1.254950035 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.30810521 seconds)
  done (took 4.27610401 seconds)
done (took 52.402369725 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09702655 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099260567 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123146949 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096786687 seconds)
  done (took 1.379389602 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102157523 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11694708 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101726138 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.115659678 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103670334 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117437403 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095731412 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.127649063 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.093418907 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118259164 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093012231 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.092343364 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121364185 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119454394 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090820073 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096368616 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126628251 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092843641 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122243855 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092881966 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114443192 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095036843 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121525338 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09133231 seconds)
  done (took 3.538589112 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098133451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091954286 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118502619 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090832241 seconds)
  done (took 1.378450726 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.097120173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128611199 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104508502 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.120960852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104258209 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.12690929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09042283 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088202626 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116205957 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096791819 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.111578508 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110623038 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127812971 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.097121055 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122548334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086324658 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112815774 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.102929075 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121036045 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099083919 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.113905998 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096393096 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086963942 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129491344 seconds)
  done (took 3.573067095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170245021 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12407007 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.110159824 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116897593 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.13222397 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137827695 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084327862 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137831943 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084636175 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126500924 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089423733 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158058476 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123703551 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085531232 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08449952 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.109378637 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098374697 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.122936451 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088966648 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124708458 seconds)
  done (took 3.291461106 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095754343 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089378787 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110384913 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.08824418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121573226 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093687791 seconds)
  done (took 1.58036095 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094870767 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086530861 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115599864 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.088712604 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116456061 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08666412 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111296348 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087728787 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086908278 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110775168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088741804 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109355722 seconds)
  done (took 2.169540687 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.51515821 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115146368 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089195596 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111125393 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097298093 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.110952929 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102750925 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11221807 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114820239 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.110400035 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087059315 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08806881 seconds)
  done (took 2.634945278 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199144756 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096714724 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255470172 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344146818 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152852988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158705411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269622183 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160749951 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174993321 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138286917 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192240239 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15360441 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125853938 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17120916 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135730235 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.150658041 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168250569 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186235706 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120455226 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221891351 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131223095 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162746512 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176523248 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147892015 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135405355 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156480338 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092353561 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126467498 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167008987 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163945264 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169915379 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119829781 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138722123 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.440900397 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208753228 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171194668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277299312 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132439178 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174338409 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139095657 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245106666 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111075147 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210134961 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126018145 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129085167 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175559324 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303899145 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173426647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129354079 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139683798 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175526837 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175497186 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173294097 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109963633 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319733754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121013818 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14065355 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180920932 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176979721 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187477428 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162313252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116047496 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182038599 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179776265 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175836056 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114729581 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160284423 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122672518 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168219516 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191445008 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170500168 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159056861 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179573416 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135773452 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159265292 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167931516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150703707 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146700902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15565562 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118077521 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121391615 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135474019 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127879305 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167627702 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121676778 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194331377 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13191764 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143307284 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223322579 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131220403 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15687047 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159004999 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160014294 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144531892 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090187099 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143015065 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147953264 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129546289 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127950408 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155788747 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138801862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.09945245 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150574141 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094748236 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15368643 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.125371014 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315887356 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158226743 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122901161 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13413955 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145172132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146879071 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165392471 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181179708 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105733015 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130470071 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190371685 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155367517 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105302556 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172158223 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177011676 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151850242 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135030969 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162884118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184631242 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111603645 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208338677 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114561121 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132006538 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136667868 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129154876 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154698254 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155948843 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129460742 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122973403 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213046717 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096212636 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134531214 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168798894 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099351814 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126411725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112871147 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133540569 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131549475 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111837252 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13365741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151214902 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128561631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151756251 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149449931 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138823808 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185336348 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105532524 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.145996855 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143758284 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090809499 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168900726 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180556442 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128024612 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192594316 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16053079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194214352 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160192565 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128706079 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173649089 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100492427 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116411856 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160008437 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128505796 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157321541 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175932503 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217916016 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160577539 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120980887 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145603644 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160818028 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161793595 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146900977 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.10789434 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158858915 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153480691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093477497 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122390103 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098788004 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13702543 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128391123 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106819023 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173555967 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160485362 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210292476 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132122131 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13776376 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180062341 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123121705 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132919212 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.378176085 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138311659 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17779597 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178346737 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161956642 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13773796 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140447526 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.11709744 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094621158 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130477379 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160050036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105412705 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131414871 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138481234 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179380311 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314123298 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146390021 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223797621 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13689064 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214273658 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09280005 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166009348 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165345753 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128319358 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17085972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106749039 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.143812362 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17495058 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142587629 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179558118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157999052 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162091769 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186558125 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145465399 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102349707 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146136521 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160223485 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109333406 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162678368 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143193455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134157211 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297993 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.097008896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123473385 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169193677 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142290272 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169637744 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117572468 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160800923 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124207577 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137453053 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128148997 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143996942 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11242318 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314425705 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177128654 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142261702 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299383455 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168176472 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128494323 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307978654 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18486921 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.345340197 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11277024 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138789053 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156641837 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156445137 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304694306 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175383447 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143204595 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173638786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128194854 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13306407 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134046595 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118555863 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148922865 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137982745 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104079399 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14827792 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132296029 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172070141 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112187257 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154257179 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160427236 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147032786 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115399902 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140707869 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196405408 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155512366 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171526128 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117801152 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160281449 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191792629 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122875595 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100366718 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124668985 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17504138 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130571428 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128111008 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182900268 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219427451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155567346 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160161628 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110295154 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116177757 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129586139 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144220303 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194313289 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137244268 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13399284 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183584163 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113891108 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129101406 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157106666 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282412779 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139757841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170813835 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084028239 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276976526 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121337783 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103625111 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158748008 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168496577 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133012164 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.141982994 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158943411 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140210592 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133171325 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135099949 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187564249 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199600424 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163391383 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165916172 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131303235 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156210137 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302596124 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1731206 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143639395 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105483672 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159698657 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178930741 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182097354 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131108648 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158440263 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1318206 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155654551 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162749747 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135342232 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191890587 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127595448 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1343311 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136875424 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121115571 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127575152 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208871565 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10397956 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168719096 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155039519 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129296283 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097207459 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148121006 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154505942 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113136125 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124472276 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171091065 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093880193 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158396601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173954277 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103220147 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152024602 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144612873 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133012267 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112766239 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141652363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135314498 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.134137841 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175920976 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126739678 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173078314 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168116493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159273863 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299757719 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138778955 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636183517 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127065329 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178678194 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117598159 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176210722 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147429473 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162617738 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15850623 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146290883 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134445149 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146716954 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228766757 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16141324 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153603056 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102483048 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141287258 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139784409 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101802092 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149389591 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159290261 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110721178 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134499676 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153609633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14030192 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103737784 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137283361 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180426345 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118114305 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169438321 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175939115 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137119357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162182718 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163342917 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100789634 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156413558 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168553516 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140499294 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146188505 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103297066 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131987277 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175050602 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094608658 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157891045 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155779423 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130711436 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15964658 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131639428 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15653114 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111358148 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158582953 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128454592 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14979546 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128189965 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130955102 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125095787 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125604906 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151732422 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148215969 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09673978 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.160565446 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178443748 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093338803 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13012231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279043452 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154832901 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184682312 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112310879 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133578882 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112946179 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143611952 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14964941 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156429241 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099892866 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131332285 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099956816 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162101287 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140362026 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153185769 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157862711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330223059 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19372857 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134383501 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25308346 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137609977 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152749451 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092947595 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128156641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112380678 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131944189 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142591755 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18707779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175109239 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.117114292 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131295751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124282178 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095403082 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12988484 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132144607 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150127238 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155919371 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139539109 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085606334 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140726804 seconds)
  done (took 75.517249993 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.147984797 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130019049 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143957152 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.19865836 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164631701 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249318125 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20543083 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233931836 seconds)
  done (took 2.543422965 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090327007 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.140756244 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.126328162 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132180811 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.112840242 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.115953691 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300713917 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130426704 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.111118927 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11730094 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.130331463 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.113863939 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.523580708 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115061151 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088582605 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107199649 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111906775 seconds)
  done (took 3.632127933 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.004213133 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.451601349 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.61423489 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.184268625 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.170934287 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.09220131 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.658704439 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091904789 seconds)
  done (took 11.33427679 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11704861 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136375116 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.129161348 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155953196 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.114032214 seconds)
  done (took 1.734474269 seconds)
done (took 115.270460112 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095793632 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122632544 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09570115 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125141788 seconds)
  done (took 1.501488095 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101206479 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074427425 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105665747 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078331591 seconds)
  done (took 1.429169117 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189962105 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16646796 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402560927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075541935 seconds)
  done (took 1.583246013 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111492668 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127901797 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103203284 seconds)
  done (took 1.42391594 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103568475 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098576191 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125571829 seconds)
  done (took 1.405155528 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101984144 seconds)
  done (took 1.174615897 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109232806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135790028 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109957566 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134218965 seconds)
  done (took 1.566132022 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094659439 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096310306 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136270172 seconds)
  done (took 1.403652067 seconds)
done (took 12.92043492 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104132992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.413832342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387113737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135324292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696381678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.404625371 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025640088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142286406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16580192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089071373 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132963546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669820876 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007266083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335073302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993088441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33729478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.714815263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089068552 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114271757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089785021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03496987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089286247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088671872 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115120423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.687035483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420360691 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089217138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.362939735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089117765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123128845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.375887073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114766027 seconds)
  done (took 16.707617506 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095715813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17496338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100624472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118299996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096577766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117314984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093603583 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090124936 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178840342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11626816 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107106503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116464831 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093597954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117172693 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109587177 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116579163 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090548948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115934911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089877274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089650253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136288266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089045682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116965742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089611895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116728859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102441005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116728221 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090019565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115799942 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101908283 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091403269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117747297 seconds)
  done (took 4.58527535 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142085196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185312192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127308922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125467484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170453243 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091101748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196870989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143892504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182410767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090542173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133181348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089786797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151143946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090333132 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137298619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089636221 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117029808 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09063874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114484008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09060992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108780511 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115873387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089336641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116211847 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089783974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131151786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090253019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.116530894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089732589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123388934 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092953053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115910989 seconds)
  done (took 4.918187516 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093512267 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.09462858 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131920132 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105797949 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117716038 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092699425 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120568591 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090742394 seconds)
  done (took 1.923246307 seconds)
done (took 29.211877504 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107822869 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095286467 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130020285 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.103116533 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.126765113 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102168853 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118924976 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101341582 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.129352873 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098199203 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132634729 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088486669 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090936541 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11527891 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10329188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121494969 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102941173 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.125907753 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.103355595 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130247721 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090969694 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.127822308 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100188874 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.129768196 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10447542 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.129969531 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10679664 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122126308 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092078602 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090515938 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129956105 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110741666 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119340591 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104822896 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12188946 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09425204 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.117967366 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093858822 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130538839 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102039653 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123209156 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101152174 seconds)
  done (took 5.742395281 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115917766 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14653372 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1111314 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112367765 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092264985 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.111369684 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11621927 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08258971 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112191517 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11414547 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104967312 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080321638 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.109838636 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076812317 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079823781 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.10705929 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083651302 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.105312427 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081151526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08066736 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.110712898 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076937314 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082757636 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.109332946 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078344427 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111605835 seconds)
  done (took 3.683351853 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097311156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104759794 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137585454 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172130637 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124187108 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125981877 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098321587 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136102519 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105870148 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11594652 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092200468 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146563446 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10756066 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125035697 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093646253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103905727 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131950318 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090840659 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12312588 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11086473 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134044107 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100201727 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.129502841 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.101159484 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116447785 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091834502 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12146643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100375391 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096865963 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126011406 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095688349 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120066049 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.090971612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128677419 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.096413864 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.117858643 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108636131 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127113444 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098769458 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118108046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098358732 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093157154 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138877935 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156690936 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09063942 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096550833 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119940054 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098783727 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118495069 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108208026 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127514835 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089970894 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120335016 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091770025 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090088781 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134068661 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090399446 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.119515967 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102440716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123968764 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1019293 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121948583 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105263279 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118541508 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096514359 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090688688 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117481788 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088258933 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141043198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095698738 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159897988 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089927347 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119161259 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098020677 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12434325 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096434157 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117487617 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104056869 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125955384 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094025884 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099945545 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.119310684 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092016799 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135786604 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091136639 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118419679 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090786589 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12316187 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092735557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09026831 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132364735 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.088581137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120033968 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103129233 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117441579 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091598027 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123382239 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094656299 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115892703 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104288414 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123610324 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.091536231 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.127764495 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090446212 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09273163 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127634509 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093814854 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117816119 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094247823 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123927224 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09033946 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120812318 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092986171 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091385975 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.126865809 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096983882 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121203955 seconds)
  done (took 14.039647965 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228371365 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215502444 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19690881 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296521263 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10222378 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14442986 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210678774 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125461787 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118722626 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158319072 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.168295235 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181502245 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139858065 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179689692 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168822271 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117954235 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.109086708 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164931027 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214727299 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260210818 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139367175 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.126250763 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.130702587 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157676369 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132743759 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099242451 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135874319 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102412127 seconds)
  done (took 5.622291275 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10678563 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151504565 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095154897 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140707846 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.117023481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118565146 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093721045 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120452819 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103097389 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133250927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089135482 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125089598 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097299913 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127955952 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091856677 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.127286245 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099957818 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.118684964 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093526041 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094427837 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.12908712 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135155008 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094813841 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089087026 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.127865352 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.08942433 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.120576864 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140300846 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089818035 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140260994 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088200182 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097540289 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131877474 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090715888 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11838296 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092383756 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120185914 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091945306 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091301119 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116559854 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089188534 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110037891 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089563757 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134470019 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097014097 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113073641 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096540414 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124717066 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091496208 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.088050893 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121432254 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093658346 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121470936 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098845213 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.120607941 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091874537 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093107662 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118503939 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097155365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12155526 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088484369 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088095352 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123101131 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.121910707 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099352218 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094632973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.116178331 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092188199 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.123027118 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.09721126 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119894488 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09693423 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087783487 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121366629 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.093220795 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124638303 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09356415 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.116828877 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090628455 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090457259 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.107750431 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090929214 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105809353 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093745645 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088390498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117226771 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092442239 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125491753 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107247949 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.11969005 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09926774 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12020839 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08945758 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12088084 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088092385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092991054 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135674183 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138452345 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090615422 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116258462 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106372597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092494917 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117280563 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079944107 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127828913 seconds)
  done (took 12.408940288 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129722981 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15000663 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091904795 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136891246 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124123034 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155203245 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096890352 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126875262 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.092012586 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138292535 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090929674 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128212062 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091278419 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133396318 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125598802 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12877472 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092431977 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134123623 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095198745 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167337261 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108913431 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138934556 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107853148 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120116146 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096709482 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.136907257 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129414911 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133930993 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103607409 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138679087 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10511238 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158213136 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138319795 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.0963978 seconds)
  done (took 5.253018147 seconds)
done (took 47.833105398 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.189241289 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.381576473 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.170657194 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.007739829 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.192357687 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.176323579 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.180960842 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.167942117 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.545589211 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.169523336 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436938272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.634965848 seconds)
done (took 59.354457498 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.19213884 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.327983563 seconds)
    (2/2) benchmarking "String"...
    done (took 1.462123428 seconds)
  done (took 3.886589229 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.742673758 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.044323281 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.426565531 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.165300499 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.165130318 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.475830106 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.682959924 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.425806601 seconds)
  done (took 27.4823451 seconds)
done (took 41.402507569 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.166430732 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.197554857 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.195640437 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.149912309 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.265553684 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.191743414 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.46826611 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.196536985 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.188445761 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.155466871 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.164835253 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.175605676 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.188018722 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.521667674 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.165450951 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.168745127 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.238307962 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.68894959 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.522369644 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.165227922 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.188946389 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.22237977 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.183501732 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.169283593 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.230054548 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.165184827 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179071932 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.186032301 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.124739052 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.171888427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.246889966 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.630003077 seconds)
  done (took 188.969125263 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.165177625 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.977947692 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.134930231 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.218728626 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.493270685 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.368088016 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.315373832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.593635942 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.186059952 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.200570522 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.344317228 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.166755771 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.400151267 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.135740339 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.195804414 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.242124563 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.369877191 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.421240657 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.204512611 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.326008785 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.170047903 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.294993628 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.203968487 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.343582709 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.187953196 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.245391683 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.190898061 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.184877119 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.360211941 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.289984116 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.209452114 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.230526874 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.698613482 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.022605445 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.193778978 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.173758393 seconds)
  done (took 147.557797946 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.166682094 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.166641908 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.167296733 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.16747827 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.195172789 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.167494353 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.650752326 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.654795199 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.681016427 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.281072662 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.250416223 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.371564334 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.172690611 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257821873 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.181760297 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.173043302 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.184251672 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.194070867 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.172786395 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.168062091 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.651521009 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.184312512 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.394095136 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.334356256 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.181539726 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.19577377 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.560188879 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.169068931 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196965172 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.485254626 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.210942925 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.170018345 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.457213152 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.479651955 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.17281428 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277368506 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170882994 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196709133 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.16977166 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.439314087 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.169814615 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.169761083 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.170112547 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.172768662 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.765962911 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.174156612 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.653182263 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174331832 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.051382007 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.174451456 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.170119293 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.082769122 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.679810059 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.188354921 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.170524458 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.173774788 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.171601773 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.170209072 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.198703294 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.009512555 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.263675826 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.170982679 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.173846747 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.198458412 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.170756706 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.382340832 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175426511 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.262442507 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.229186752 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.27684746 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.656001939 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176483558 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265317711 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287633665 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.172856765 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.171438548 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.172247211 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.171708108 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.277997147 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.172098442 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.531314969 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.333185755 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.186726389 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.252859444 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.176573448 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.264497405 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.172244472 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498494884 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.176527412 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.172020407 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.844430018 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265122771 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.172312529 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.172531504 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.172384825 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.532919956 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.660451644 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.340277405 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.177972376 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.272531431 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.177982135 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.546161878 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.648501684 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.769623729 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.178693622 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280504904 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335006441 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.187635565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.172814966 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.253368642 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.178384238 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.224931348 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.172226651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.56087487 seconds)
  done (took 360.206631518 seconds)
done (took 697.831111274 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.765516604 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.765646813 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.851371011 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.744036101 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.706231598 seconds)
  done (took 9.931113275 seconds)
done (took 11.030429911 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.32774517 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.329687911 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.203677515 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.321619849 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.182203237 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.335637214 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.299556872 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.174238946 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.245121668 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.225662111 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.240395515 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.196995635 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.182592808 seconds)
  done (took 17.356426199 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.460477683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475830087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.21365664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.457413751 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.189452187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456928596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.346599362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.38019694 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.361662666 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166004125 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165083329 seconds)
  done (took 15.756257026 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458904775 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.454263587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.217006196 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.46911391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.191937496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.457775685 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358505766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366835501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365042228 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166334561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163965219 seconds)
  done (took 15.752258875 seconds)
done (took 49.956635484 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.159691145 seconds)
  done (took 2.241615408 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.196743468 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.350907397 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.181056143 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.167350462 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.161485735 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.170723862 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.167915402 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.164887919 seconds)
  done (took 10.644396083 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.157542736 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.157461377 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.157881732 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.16017818 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.159421628 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.159528798 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.159719877 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.156584108 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.16015539 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.160032229 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.15992944 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.15707778 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.160536175 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.15781278 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.157715072 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.158378995 seconds)
  done (took 19.622981354 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.160250573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.15833912 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.158116366 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.158757351 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.158027596 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.158730905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.159696271 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.158620028 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.158960108 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.156956728 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.156580271 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.156306399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.157687122 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.157256138 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.158493002 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.157799657 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.156752862 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.157447879 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.161397978 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.15789554 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.158415157 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.157645545 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.158453773 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.158100056 seconds)
  done (took 28.882675541 seconds)
done (took 62.474400493 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.740900488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.629512553 seconds)
  done (took 6.453895491 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218105227 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.220441662 seconds)
  done (took 3.524039269 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.161000432 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.160253203 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.160810713 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.161110578 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.160479273 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.161345868 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.160193205 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.160193418 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.160427441 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.160026176 seconds)
  done (took 12.689706656 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.16103963 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.161297972 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.159086365 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.161575974 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.161715693 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.159113041 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.161141296 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.161234373 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.160536811 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.158779491 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.161378071 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.160140184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.162111265 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.159751982 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.162094058 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.159672251 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.159844533 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.15929895 seconds)
  done (took 21.974216848 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.175793207 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.182612506 seconds)
  done (took 3.443959538 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.289728007 seconds)
    (2/7) benchmarking "second"...
    done (took 1.201321882 seconds)
    (3/7) benchmarking "month"...
    done (took 1.270986698 seconds)
    (4/7) benchmarking "year"...
    done (took 1.25717908 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.201600856 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.180024654 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201414945 seconds)
  done (took 9.688510015 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.163174203 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.364737288 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.46399299 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.774584228 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.164102947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.167063901 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080670387 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.166608144 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.1691046 seconds)
  done (took 13.60024399 seconds)
done (took 72.458798003 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.121022349 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.156778068 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.323043767 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.15913113 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.188653959 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.498742762 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.189338496 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.290996578 seconds)
done (took 37.01511485 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.166312986 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.151287983 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.792274457 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.160196674 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.181365236 seconds)
  done (took 18.372864646 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.106319398 seconds)
    (2/2) benchmarking "read"...
    done (took 1.490738128 seconds)
  done (took 4.684790134 seconds)
done (took 30.311924506 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.16515188 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.163935285 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.162200417 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.161945504 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.164719916 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.161828541 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.162427235 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.163505505 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.165332279 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.164525528 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.164138373 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.165564562 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164579612 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.162007448 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162749302 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165667089 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.163026938 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163243428 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.165253629 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.162158276 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.163670984 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.165210652 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.162710922 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.163341656 seconds)
  done (took 29.017513973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.165508823 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.16400447 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.165512069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.165568812 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.162413722 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.166043367 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.166683726 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.164093588 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.16602598 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.166228191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.163698636 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.162883084 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.166765706 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.164259164 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168033927 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.164145896 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.166679924 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164328911 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167215166 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.164255329 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.168281368 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16445813 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.164784118 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.166980381 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.164386741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164892789 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.167657051 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.164890308 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.167817158 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.165322905 seconds)
  done (took 36.053295395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.170802221 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.173205883 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.167402279 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.168179593 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.167682095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.167647654 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.167010882 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.168665812 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.167935422 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.1676207 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.168549732 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.168340904 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.169565895 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.168542618 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.168032337 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.168577522 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.168326359 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.168265584 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.168403123 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.168408651 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.169164089 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.168533364 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.168825896 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.167902694 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.168615198 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.168200511 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.170080566 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.169890546 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.168518785 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.169626138 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.169926392 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.169539503 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.169912372 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.169471421 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.168798044 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.16967687 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.172878503 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.175286857 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.16871975 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.169758998 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.169491594 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.169914914 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.170023213 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.170108472 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.169012725 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.169489192 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.170315057 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.169601042 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.170627693 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.170079902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.170325744 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.170138606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.169274396 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.169867278 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.17045471 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.169855005 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.170781054 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.169912525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.170629942 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.17208779 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.171328863 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.171289746 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.171026189 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.17107682 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.171549708 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.171360862 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.171833933 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.171258661 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.17121117 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.171433291 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.172280212 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.1716113 seconds)
  done (took 85.31610616 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.170857132 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.168978669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.168806827 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168290172 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169262232 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.171748375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.169220994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17195929 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170021902 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.172530252 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172101576 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.169859902 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170152973 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.172570017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171748042 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.169579294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.171302881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169625802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.171530453 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.172521017 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171387214 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.169373184 seconds)
  done (took 26.848934279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171592684 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.174396205 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.169782769 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.173756974 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.172300761 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.174287715 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.172653234 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.175064986 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173190928 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172472659 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170864636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172669274 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.172154913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171381055 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171052305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.171585459 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172947379 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171432215 seconds)
  done (took 22.199787249 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.171405143 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.170480703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.173650832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.171169453 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.171106732 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.174488645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171536069 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.17446388 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.174095572 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.171347254 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.17410495 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.174417868 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.174998322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.171495263 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173766985 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.17326494 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.174007754 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.172582629 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.175092667 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.172409051 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.173013766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.174905238 seconds)
  done (took 26.904813119 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.175148262 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.174386869 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.172988684 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.172745186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.17381058 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.174873627 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.175828125 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.174351742 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.176984295 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.175821927 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.173628821 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.175250182 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.174481644 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.174807287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.173221134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.17304965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.176413261 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.174374052 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176631328 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.17322107 seconds)
  done (took 24.589646581 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.177465807 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.177808501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.178557894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.178198289 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.178944619 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.178450381 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.178718037 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.178008115 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.178405676 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.179438292 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.178438101 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.179374585 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178503042 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.178909977 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.178855799 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179621125 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.179368287 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.179142802 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.179900148 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.178909451 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180478847 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.179957303 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.180170185 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.179680618 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.179810758 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.179483741 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180330559 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.180778216 seconds)
  done (took 34.114835634 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.178892588 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.178877678 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.176278918 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.175993251 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.176023965 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.175844112 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.17631496 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.176023029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.594961478 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.177733005 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.179346076 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.178264484 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.178336284 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.17871138 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.179254529 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.179538732 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.179085066 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.176750127 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.176981143 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.177037554 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.179861598 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.179890291 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.180188833 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.177633853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.178166074 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.179782648 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.177022886 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.177064857 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.179476427 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176837291 seconds)
  done (took 36.858136571 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.198555694 seconds)
    (2/2) benchmarking "in"...
    done (took 1.199163258 seconds)
  done (took 3.499433819 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.178716676 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.181918885 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.180243986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.178460888 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177215277 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.179827253 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.179482218 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176927098 seconds)
  done (took 10.535391633 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.178758393 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.180475395 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.181452227 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.180433215 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.180150963 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.17852335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.184597652 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.195316896 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.178270306 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.179882725 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.183854709 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.184683469 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.18044985 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17957122 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.178967893 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.180611293 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.178489218 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.180518788 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.180359766 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.180406078 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180146269 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182381723 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.181943262 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.177022031 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.180148985 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.189611373 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.183479442 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.179844451 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.179489459 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.183404826 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.180522357 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.177987783 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.18090767 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.180331254 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.180305359 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.181249888 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188248879 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199327345 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.185574353 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181895994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18212132 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.17741173 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.181453304 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.182189225 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181646714 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.182200012 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.181901251 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.178928633 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.180473156 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.183765632 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.184925839 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.180862881 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.179033071 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183820402 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.181787905 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.188211781 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.199893182 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.183357534 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.188816876 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.190555331 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.192392128 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.202694019 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182615703 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.182773487 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.19074512 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.201360729 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188609167 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.195774497 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.180210982 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.182711982 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.188211507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193880489 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.204221906 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.182840614 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.184184248 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.183280236 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182161973 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.183248125 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189902478 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.200937502 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.184004938 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.18416639 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.19197511 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.202186788 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.182681815 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.184490534 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.18494673 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.185064905 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.184393978 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.192737389 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.201707454 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.183570056 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.183804876 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.184170518 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.184761081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.185142161 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.18270285 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.185103585 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.181511043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.185005028 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185071964 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.186954988 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.191224318 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185645633 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185774931 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.189486339 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.184371993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18422295 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.190796715 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.185121211 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.186023432 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.185943072 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.188819709 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.181935416 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.18758287 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.190161167 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.185713501 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.186551342 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.185796258 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.186299186 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193610797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.206030416 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.185804004 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.185060544 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.189624007 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.195887248 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186870523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.187931221 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.186105984 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.183826381 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.182751125 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.187303865 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.186103898 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.186045416 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.187339226 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.186381309 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.183314756 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.187259942 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.187073035 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.187599525 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.187372785 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.186838895 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.187875787 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.188099238 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.187590476 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.189844279 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.193730399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.187533564 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.188948669 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.186961528 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.184854066 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187268679 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.188610117 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.189437415 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.187088074 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.188845194 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.187777293 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.187747956 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188159945 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.187987396 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187627871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.188113375 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191248528 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.188764055 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.190785336 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.186872734 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.184795952 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.187762827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.188977149 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.188043397 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.188071154 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.18714998 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.190190301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.195851264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.190036068 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.189684399 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.190578019 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189016757 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.190011257 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18950109 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.191057047 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.195396086 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.189302789 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.195267019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.189680124 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.190598487 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.190028655 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.189425769 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.189686544 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191028749 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.192075121 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.195170511 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199724471 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.211140198 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.189991393 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.19413416 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.189413604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.194517223 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.192799399 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.190763572 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.191210607 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.191073343 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189202324 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191671838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.191974729 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.191659734 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.188800415 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.190982032 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.190627284 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.191241423 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191918349 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.191401966 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.190724465 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.188468763 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190916256 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192042441 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.189775227 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.187872582 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.190046689 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.19005789 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.192407165 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.191425313 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.197432421 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.188548767 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193023491 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.192832576 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.191345153 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.190187743 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.192557719 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19299551 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.191423756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197948143 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.207435785 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.191979509 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197413034 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.209572614 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.191291932 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.194780245 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.192453921 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.190886389 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.195597273 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.199532782 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.193547214 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.19319544 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.193235745 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193616926 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.19420587 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.1985239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.192236209 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.192746442 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.193318123 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.193644404 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.191090943 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.193670631 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.193971013 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.194119539 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194974654 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196002731 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.193847849 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194220676 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.194498406 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.194737776 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.194960685 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195009439 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.20136381 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.199035399 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.194136243 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.195867592 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.194866737 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.197361858 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.193926862 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.195722554 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.193533823 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.205063008 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.216873789 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201055476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.19587329 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.194981529 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.199655952 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.196691364 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.197818212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19624512 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195773392 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.195280944 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.195666916 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.1936409 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195959622 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.196170107 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.196141663 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.195542606 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.199164869 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.195511446 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.19485724 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.196791607 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.196720683 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.196691949 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.196211861 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.197773548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.197916102 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.197524764 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.195593232 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.195870574 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201912449 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212342786 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.196936553 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.196354468 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.196542776 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.19664346 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.197276684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.198625632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.199419833 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.203291433 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.198891486 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.204313454 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.198257924 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206823027 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.198421654 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.199890508 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.204519448 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.194885497 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.195905224 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.197442085 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.198834464 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.203296613 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214485515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.198736609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.202359124 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19930938 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.199023772 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.198892653 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.198899614 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.198164958 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.198503015 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.206827433 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.217795021 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.200460598 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.200311706 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.197308299 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.200501677 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.199022785 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.197658673 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.202196651 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.200095635 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.20023904 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.199722192 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.198885664 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.200157146 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.200420981 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.200020724 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.196639358 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.199320825 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.205998383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.216707561 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.204745951 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.200889842 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.206021718 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200570367 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205829981 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.217086997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.199905027 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.201395345 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.200150998 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.200937301 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.199124032 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.201220413 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.201104811 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.200848994 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.203246011 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.201730171 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.201768423 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.201415038 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.201102194 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.201071009 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20946617 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.22035935 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.20230324 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.204479117 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.198693104 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.202149267 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.204780541 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.201702334 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.200689191 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.20291309 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.210299854 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207803738 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.201225055 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.202132253 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.201505576 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202549305 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.201645887 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.202353852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.20308938 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.202534252 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.202688373 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.202402915 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.203858963 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.202571383 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.202798463 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.204232043 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.202072079 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.212076015 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.203827057 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.202637403 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203999838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.203968214 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.203013638 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.202992883 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.204393442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203348361 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20411233 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.203698549 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.209163877 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.208807014 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.205963491 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.202886644 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.204338537 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.203293027 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.203601294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204957249 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.204218171 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20493911 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.204484274 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.204611997 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.204141521 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.20332291 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.20401928 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.203797658 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.204912802 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205740817 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.210432163 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.203323998 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.20123253 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.204161356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.205347726 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.203640805 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.205644406 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.211561109 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.20655772 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.213238911 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.211792859 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.210025431 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.205784264 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207887737 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.212156501 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.204666308 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.206566198 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.207003616 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.206022206 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.205852237 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.208311049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.207757533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.211467103 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.20554317 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.205724481 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214117871 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.226016163 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.207361919 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.206775299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.209294593 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.205853741 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.204101284 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.2066907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.205534088 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.213443447 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.223459997 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20874735 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208044576 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.20483552 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.207259115 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210611641 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.207107259 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.207441613 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.204248361 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.207306298 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208398534 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208557486 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.205076359 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.207372758 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.206671686 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.20986606 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.212100901 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.205412832 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.209122567 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.208125046 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.207031378 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.208978471 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208485435 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.205479587 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.205508891 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.207563192 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.208594297 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.207756557 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.210290611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.20655419 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.209745916 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.209452071 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20907313 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.21039646 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.217123 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.21493606 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.205994883 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.208994251 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.209022428 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.21101252 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.210227743 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.209239631 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208766544 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.210101658 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.209960678 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21061942 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.209073919 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.210699089 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.223396835 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.229537578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210056882 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.210470134 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.212133609 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.210281552 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.207425824 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.210846412 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.210802659 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.211877691 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.217010883 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.210762157 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.215826389 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22707315 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.210857882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.214368088 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.211894505 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.215885231 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.212525578 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212872945 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.211023473 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.214006706 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.224267578 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.211539826 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219258109 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237233443 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.22749332 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.211287977 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.211733611 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210321165 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.212222176 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.212537923 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.213144027 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.211916541 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21220223 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.213040309 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.212753451 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215506742 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.212399168 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.212943633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.211558162 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.211187035 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.213226799 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.211538544 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.213407241 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.212442251 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.213331617 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.212302442 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.212969256 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.212741361 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223063859 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.236889817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.213356345 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.213702315 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.210770221 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.216251554 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.215574919 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221284597 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.219738117 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.214531992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.21349791 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.21428547 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215452573 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.212350914 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.213535227 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.212598319 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214127905 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.211660218 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.224486945 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23664637 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.21798619 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.212158025 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21606227 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.214558565 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.215173081 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215377042 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214894506 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.214633309 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.216076384 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219424509 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.214508742 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.215159621 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.216585005 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.221339861 seconds)
  done (took 715.509175936 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212777891 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213086608 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212643246 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212237442 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213613202 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212507096 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213014361 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212356743 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.212578462 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.211674316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212959386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212804207 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213086427 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213758101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213346675 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213801122 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213134791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213916039 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.213709998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2128806 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213795381 seconds)
  done (took 26.608541472 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.216360334 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.214441336 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.214589809 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.217247793 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214289431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.216815847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214659403 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217426328 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216663007 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21409761 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21666411 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217293947 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.21444988 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.214140333 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2156652 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217122405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217353869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215395507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.217627118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215680806 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218385899 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21562511 seconds)
  done (took 27.888222522 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.217809459 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.21945231 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.217335868 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.215731203 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.218888775 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.21563614 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.219095471 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.217942038 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.219310694 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.217620911 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.217138577 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.218480311 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.22340057 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.221584172 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.219723335 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.217727069 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.3621853 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.219372564 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.21942783 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.219696218 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.215737694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.223768151 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.216728275 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.216801525 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.217208393 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.220356126 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.219599086 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.219199493 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.219858204 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.218292293 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.222966846 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.220542997 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.219854938 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.221796298 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.21869893 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.220610948 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.223801402 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.221611357 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.216711089 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.219816432 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.229019105 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.236888985 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.221252087 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.2258886 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.222342414 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.220598651 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.223087988 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.227397477 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.217949162 seconds)
  done (took 61.073509017 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.221226538 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.222240373 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.218500289 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.220229362 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.221438459 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.221335632 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.221470514 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.221798794 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.218755814 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.218443115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.221602432 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.218345895 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.218880298 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.221992009 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.222343277 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.219031638 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.218739731 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.218978421 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.219336287 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.219920191 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.219649874 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.22196364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.222098056 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.219599152 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222423464 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219685571 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.221055363 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.221901734 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.220306027 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.220574077 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.222593872 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222713482 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22409175 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.222125501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219980186 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.22280972 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.223508304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.220851837 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.222158622 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.220944312 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.224119433 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.223668863 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.223690837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.223377915 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.220453498 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.220649975 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.221079132 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.221309175 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.221694848 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.223029998 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.224006574 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.221788932 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.224848251 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.222151736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.225169316 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.224712977 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.221557748 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.221053606 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.223465765 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.222783882 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.221560889 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224369248 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.221928083 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.224475274 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.225374932 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.222647877 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.222678743 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.224731147 seconds)
  done (took 84.21957825 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225545609 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.22527485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224866013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224960288 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226305583 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.225392007 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225548476 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.226482232 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.225067646 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226565214 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225426102 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.226038374 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.225633295 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.225962698 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226673217 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225674831 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.225770762 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22628663 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226630411 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226250867 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.226317628 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.227024299 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.226553522 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.226514534 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.227028818 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2266758 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225864692 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.226281305 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22697175 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.226680545 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226267871 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.227325033 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.227715433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226897978 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.227290753 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.227050282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.226994375 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227000203 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.227577471 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.227390547 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.226837388 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227828725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227592329 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.228681909 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.227612019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.22881226 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.22819075 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.228145312 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.227943374 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228050516 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.228135737 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228132944 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229255457 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.228430128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.228724924 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.228691976 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.228542362 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228882754 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229232854 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.227810337 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228898183 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.228737366 seconds)
  done (took 77.221750874 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229128867 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228502283 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.226430198 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.225673821 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227933146 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226123488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228167319 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.228197979 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2278151 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.22872381 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228658409 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226977979 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228257624 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230370141 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227603387 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228953319 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227513447 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227458312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229262774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227310516 seconds)
  done (took 25.705700728 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.226891002 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229079437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.227058825 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226970986 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.229979285 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.227337377 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.228638938 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229877655 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227295907 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230183681 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230871824 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230111019 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227649544 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228227976 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.230264752 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227536519 seconds)
  done (took 20.805111525 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.227352895 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.23014886 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.230466743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.229772112 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.22755941 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.227703152 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.230388276 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.226924713 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.227558361 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.231404195 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.231458322 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.231313357 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.230497081 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.23090437 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.227486585 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.230986814 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.228692569 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.228355388 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.230707298 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.231382698 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.228577896 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.227983398 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.230514628 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.231428351 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.228420259 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.228644914 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.229464607 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.228688856 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.229373862 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.231553716 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.228553483 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.229972218 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.228936844 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.228491918 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.232549577 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.229020546 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.232693708 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.232112182 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.232409277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.233010177 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.231612859 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.23001887 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.232628335 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.233468933 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.229798301 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.232622432 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.230738501 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.230667142 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.23030264 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.230985439 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.233253608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.234362832 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.233537304 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.234523675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.234161798 seconds)
  done (took 68.82595453 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233299511 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234062265 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231505184 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233526252 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.234882045 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.230894162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.234165897 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.232928168 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230918297 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233192409 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232148312 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.234867138 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231546733 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234123324 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232538088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233605425 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231228033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.231113495 seconds)
  done (took 23.342415615 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232224357 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232696628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.234516278 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.232576852 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.232243441 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235049816 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231873733 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.234765089 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234853956 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232267928 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23392384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.235286851 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234224485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.235117777 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233357275 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232128421 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.235878858 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23592497 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232591997 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233070215 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23528502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235636585 seconds)
  done (took 28.297904234 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.234099456 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.234168393 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.234197368 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.249789001 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.251244089 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.255003923 seconds)
  done (took 8.612053075 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24072361 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23643509 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234536809 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237353563 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237178388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234024166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233967941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234880801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236771702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234625965 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234949863 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236866656 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237555828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2348651 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238690245 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237105315 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235265501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234545791 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235572858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237811457 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234930901 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237727012 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234963421 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235226879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236021667 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235548592 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238737214 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235325904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235722582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237683403 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238056339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234662978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237415125 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235684051 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239188769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238597034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23692663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238279564 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237864943 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235505515 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.238485118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239169287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2391223 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235552989 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23994861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236836227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23679379 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236040407 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237172768 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239097333 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239893233 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237480139 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23976729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239465219 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239415423 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239486382 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237073947 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237517354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239469082 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236808419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238295135 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239421718 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237002271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238706758 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239119117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237967916 seconds)
  done (took 82.828621427 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238081533 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237164887 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238555188 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239116929 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237623983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237522514 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238316332 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237967982 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237982271 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238144196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240869013 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238263361 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238528253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238563373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238776826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238431652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238752088 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240605516 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239194647 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241491386 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239116789 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238631073 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238836762 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238301693 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239286921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241603249 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239617996 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238331933 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238762024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239163727 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239003077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2392374 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238681581 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.238558965 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240681805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240044874 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240093565 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239911862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239533025 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242510592 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240043173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242469163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240092944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240014116 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240427818 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.24009784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240106328 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240484683 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241627311 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240260518 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240886931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240490859 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241382534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242169505 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240339682 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241068675 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241236302 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241736482 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240665601 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243750315 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240829341 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241967914 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243881436 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241394329 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243158046 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242976162 seconds)
  done (took 82.996705032 seconds)
done (took 1670.962036244 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.405048957 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.361195308 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.242984531 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.264845527 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.243123482 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.262407725 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.238441853 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.243011591 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.242928378 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.242618189 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.24332914 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.429525486 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.296120605 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.242474401 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.243335133 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.3375802 seconds)
  done (took 41.701254337 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.268026595 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.249964429 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.353712781 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.264375126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.271860849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.418608494 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.302767112 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.25109136 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.405167232 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.293290953 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.680531485 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.270431205 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.249626067 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.282865369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.270950529 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.418531093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.479139034 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.692718272 seconds)
  done (took 28.585540631 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.658040849 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.26134215 seconds)
  done (took 9.083449585 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.268151908 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.250398391 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.25193507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.249451635 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.243064567 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.241966033 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.249445442 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.247796713 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.559562039 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.367686664 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.258112078 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.259048528 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.268707632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.252126494 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.248437104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.284730684 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.398712841 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.249399181 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.247094225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.256427112 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.251377024 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.344869117 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.288293701 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.249918162 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.365877329 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.61801948 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.253886516 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.259044472 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.382529335 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.250358485 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.251603479 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.25060491 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.253245153 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.110032282 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.741073792 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.249000703 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.273569277 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.260927508 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.249990872 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.393035145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.252848097 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.258564773 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.244989266 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.727825233 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.384809356 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.359083026 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.412630338 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.260248667 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.253953848 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.309999956 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.260146169 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.255567745 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.293488445 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.038409198 seconds)
  done (took 106.43775478 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.250483029 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.63427484 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411541134 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.272000077 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.955783559 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.925471072 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.26104345 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.50775704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.29208456 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.24514038 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.528662003 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.72387116 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.265671939 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.288768316 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.39914089 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.286504851 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246534622 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.970933073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.260310501 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.247627697 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729395513 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.251382172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.251502146 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.429810592 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.284257302 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.676633287 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.473942651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.563602327 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.261821765 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.246966535 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686047982 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.269095972 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.248936134 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.250452261 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.498603439 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.58371145 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557944992 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.249026391 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.273244919 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.249456345 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.283277345 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.672117152 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.563970774 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.247789149 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.26862464 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.675064834 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.248446907 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.252873623 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.247957063 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44458194 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.844094945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.249012148 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.486771827 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.249807383 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.519902074 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.317929666 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.257409436 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.706905015 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.249557944 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.256575724 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275875426 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.24943323 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.251611583 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.253730856 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.252534794 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.570479904 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.477813373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.255441722 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569228716 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.680329746 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.267821646 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.742929343 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.044662509 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.277586987 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.306973077 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.249922724 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.750559816 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720357989 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.269687603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.250698279 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.556986384 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.251058664 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.521024764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.264194793 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.251586897 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75591687 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.261688468 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.25472781 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.251516731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.25084273 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.925196944 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.262150282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.505326501 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.285841684 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.251391049 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.250894783 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.269815498 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.259410332 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.251315949 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.252706515 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745443033 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.274884696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.360549916 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.274417986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.25251195 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.272864233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.2541935 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.252554624 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465509658 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.787853885 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.279892585 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.252397454 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.252863311 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.252590589 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.415311732 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.258496933 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.533556697 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.251069646 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.252963557 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.252547801 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.894074777 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.291019227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.252743462 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.270709321 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148280039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.463857172 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.27544109 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.254567689 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.254243707 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.252754261 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.394772503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271287978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.304406912 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.255994893 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929906989 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30476989 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.259882507 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.51522024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.25472886 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.02222993 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.271181847 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253865814 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.534652168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.50681747 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.52722942 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.256498964 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.270097257 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903537373 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.296502888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.399119069 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.272782344 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291716282 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.449620215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.386421664 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.254248375 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.845176615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.256180458 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463715794 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.254912548 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56242236 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.716891299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.270771804 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.259180155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930478896 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.970448057 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.915106641 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.256923078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.519970286 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.224589678 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.735710849 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.257513048 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.25567914 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.742082967 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.25615357 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.257095435 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.256050767 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.2566901 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411374369 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.427225084 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.410519871 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.258998472 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681039925 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.264088373 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266165224 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.26074126 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.257997204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.605431794 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.263995956 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.262720955 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.26855798 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.25875997 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.25820109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7006212 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.069455691 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.25872731 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.407372677 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85825614 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.273379427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.258088304 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.95376007 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.945718866 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.742153567 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.266461124 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.540231169 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.264390169 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.295831736 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.861592344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337895138 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.704137187 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.261840126 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.259416842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824645453 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.274510343 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369368211 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.258289161 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.261519428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.761424386 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.274700193 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.260286381 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.402023788 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287369165 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.502421733 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.259031689 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.265514869 seconds)
  done (took 1089.647569389 seconds)
done (took 1276.617369734 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.25857712 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.268129629 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.253263771 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.265186846 seconds)
  done (took 26.226171442 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.270999287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.266471176 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.267794321 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.265334057 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.273755653 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.2673951 seconds)
  done (took 8.793744269 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.29716911 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.268023493 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.266992721 seconds)
  done (took 19.015070588 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.456890149 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.466696555 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.574916993 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.279558094 seconds)
  done (took 9.960843732 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.270770981 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.271275291 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.271159912 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.27537551 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.27563481 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.276257659 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.276960058 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.275925266 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.275536096 seconds)
  done (took 12.653722571 seconds)
done (took 77.832044043 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.250061544 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414489968 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.985738235 seconds)
    (4/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.014599134 seconds)
    (5/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.263612024 seconds)
    (6/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.631830593 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.500814336 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.387602569 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.308796555 seconds)
    (10/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.65910907 seconds)
    (11/286) benchmarking ("sort", Float64, true)...
    done (took 6.264550963 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666771378 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.305786071 seconds)
    (14/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.862031601 seconds)
    (15/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.261497637 seconds)
    (16/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.275605018 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.883121658 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.079632322 seconds)
    (19/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.291028445 seconds)
    (20/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.474366894 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.131658409 seconds)
    (22/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.392418228 seconds)
    (23/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.401895327 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.618231588 seconds)
    (25/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.370623401 seconds)
    (26/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.251915016 seconds)
    (27/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.263600651 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.575255459 seconds)
    (29/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.073394338 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.607543053 seconds)
    (31/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.267454759 seconds)
    (32/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.3029848 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.266945379 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.266887465 seconds)
    (35/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.298976353 seconds)
    (36/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.209690278 seconds)
    (37/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.297217683 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.39676498 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.254080822 seconds)
    (40/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.526159284 seconds)
    (41/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.480364939 seconds)
    (42/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.96201332 seconds)
    (43/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.3215335 seconds)
    (44/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.29089235 seconds)
    (45/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.571530792 seconds)
    (46/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.349061925 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.684789202 seconds)
    (48/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.630817867 seconds)
    (49/286) benchmarking ("sort", Int8, false)...
    done (took 4.291762202 seconds)
    (50/286) benchmarking ("sort", Int8, true)...
    done (took 6.268505365 seconds)
    (51/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.475344537 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.37868577 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.078664322 seconds)
    (54/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.254357464 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.584263348 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.266857891 seconds)
    (57/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.217780062 seconds)
    (58/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.563145215 seconds)
    (59/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.353288222 seconds)
    (60/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.254077448 seconds)
    (61/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.277900998 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.325845717 seconds)
    (63/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.255169902 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.854973828 seconds)
    (65/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.503061641 seconds)
    (66/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.312546769 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.427189244 seconds)
    (68/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.623243116 seconds)
    (69/286) benchmarking ("sort", BigInt, true)...
    done (took 6.274653174 seconds)
    (70/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.296180649 seconds)
    (71/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.277540774 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.113541715 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.374446528 seconds)
    (74/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.332549133 seconds)
    (75/286) benchmarking ("sort", Float32, true)...
    done (took 6.269372764 seconds)
    (76/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.977987687 seconds)
    (77/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.402663092 seconds)
    (78/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.927884253 seconds)
    (79/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.013256513 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.376540685 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.268675194 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.149742855 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065972323 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.41134518 seconds)
    (85/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.257520115 seconds)
    (86/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.103534523 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.2998604 seconds)
    (88/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.276280957 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.293558358 seconds)
    (90/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.073876788 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.279964458 seconds)
    (92/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.276199353 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.357449969 seconds)
    (94/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.287425053 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.374320299 seconds)
    (96/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.27091553 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.300723254 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.262735075 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.744639727 seconds)
    (100/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.459446532 seconds)
    (101/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.563084235 seconds)
    (102/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.083030267 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.605582593 seconds)
    (104/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.257716972 seconds)
    (105/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.257268443 seconds)
    (106/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.758526442 seconds)
    (107/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.257630776 seconds)
    (108/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.460706075 seconds)
    (109/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.484830283 seconds)
    (110/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.281275966 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.26503092 seconds)
    (112/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.271214025 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.6279007 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.882070667 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.479036015 seconds)
    (116/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.495641496 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.296516744 seconds)
    (118/286) benchmarking ("sort", Bool, false)...
    done (took 1.782926518 seconds)
    (119/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.296955008 seconds)
    (120/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.320836205 seconds)
    (121/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.982727406 seconds)
    (122/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.259838153 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.560692128 seconds)
    (124/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.356474708 seconds)
    (125/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.168973897 seconds)
    (126/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.847200454 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.991415449 seconds)
    (128/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33708712 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.272911124 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.576053627 seconds)
    (131/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.269340346 seconds)
    (132/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.38259206 seconds)
    (133/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.593947845 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.312388541 seconds)
    (135/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.399434266 seconds)
    (136/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.364236109 seconds)
    (137/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.306683192 seconds)
    (138/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.489616225 seconds)
    (139/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.529765496 seconds)
    (140/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.124000616 seconds)
    (141/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.383521025 seconds)
    (142/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.112684195 seconds)
    (143/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.333665785 seconds)
    (144/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.128801518 seconds)
    (145/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.989238877 seconds)
    (146/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.30133647 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.268249084 seconds)
    (148/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.262660123 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.313787811 seconds)
    (150/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.383319218 seconds)
    (151/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.500706088 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.383758829 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.262735089 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.297837862 seconds)
    (155/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.26248302 seconds)
    (156/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.271667969 seconds)
    (157/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.386990716 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.286391114 seconds)
    (159/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.309632777 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.261599974 seconds)
    (161/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.305616233 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.277256925 seconds)
    (163/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.337289894 seconds)
    (164/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.313843983 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.282834818 seconds)
    (166/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.292439616 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.824729324 seconds)
    (168/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.340326468 seconds)
    (169/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.335993682 seconds)
    (170/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.263224337 seconds)
    (171/286) benchmarking ("sort", BigInt, false)...
    done (took 6.27623346 seconds)
    (172/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.479681999 seconds)
    (173/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.306093119 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.302825911 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.147974512 seconds)
    (176/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.701846912 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.325389726 seconds)
    (178/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.513147733 seconds)
    (179/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.263298827 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.399993109 seconds)
    (181/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.593859728 seconds)
    (182/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.69735564 seconds)
    (183/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.272541317 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.304600681 seconds)
    (185/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.3590012 seconds)
    (186/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.786634022 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.281612995 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.398798387 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.335370812 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.565189271 seconds)
    (191/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.303328987 seconds)
    (192/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.974640737 seconds)
    (193/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.421915508 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.832010608 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.52133437 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.250920318 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.480786945 seconds)
    (198/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.461720677 seconds)
    (199/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.360716075 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.265838329 seconds)
    (201/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.777985564 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.286266962 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.867311957 seconds)
    (204/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.735187089 seconds)
    (205/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.048483854 seconds)
    (206/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.273191394 seconds)
    (207/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.056367567 seconds)
    (208/286) benchmarking ("sort", Float32, false)...
    done (took 5.260442927 seconds)
    (209/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.640830023 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.307654841 seconds)
    (211/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.293879712 seconds)
    (212/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.372408989 seconds)
    (213/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.848813433 seconds)
    (214/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.9967656 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.462026018 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.318965155 seconds)
    (217/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.271534368 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.686208261 seconds)
    (219/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.280313932 seconds)
    (220/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.282975162 seconds)
    (221/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.783048898 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.862721536 seconds)
    (223/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.258098462 seconds)
    (224/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.78532583 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.622656297 seconds)
    (226/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.872515942 seconds)
    (227/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.522307216 seconds)
    (228/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.321170871 seconds)
    (229/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.2839828 seconds)
    (230/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280879256 seconds)
    (231/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.267647225 seconds)
    (232/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.281274682 seconds)
    (233/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.770599021 seconds)
    (234/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.267917555 seconds)
    (235/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.268120808 seconds)
    (236/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.645042892 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.680933136 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.359066222 seconds)
    (239/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.9586139 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.295741286 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.024443002 seconds)
    (242/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.362338559 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.480810477 seconds)
    (244/286) benchmarking ("sort", Float64, false)...
    done (took 5.550762939 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.162865897 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.306909869 seconds)
    (247/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.635897359 seconds)
    (248/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.31454401 seconds)
    (249/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.319047414 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.058269109 seconds)
    (251/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.435535461 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.658391133 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.268108762 seconds)
    (254/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.40587156 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.297814533 seconds)
    (256/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.277033124 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.311170366 seconds)
    (258/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.392000202 seconds)
    (259/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.308265279 seconds)
    (260/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.367662042 seconds)
    (261/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.86099259 seconds)
    (262/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.724707677 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.269147216 seconds)
    (264/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.307887691 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.374483448 seconds)
    (266/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.268752668 seconds)
    (267/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.758194206 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.365486023 seconds)
    (269/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30959972 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.482329949 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.414505361 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.101922321 seconds)
    (273/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.274785781 seconds)
    (274/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.661097965 seconds)
    (275/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.810770145 seconds)
    (276/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.368999191 seconds)
    (277/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.269614746 seconds)
    (278/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.27120897 seconds)
    (279/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.280472227 seconds)
    (280/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.372374086 seconds)
    (281/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.324717613 seconds)
    (282/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.112345891 seconds)
    (283/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.28735368 seconds)
    (284/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.118296461 seconds)
    (285/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.992037174 seconds)
    (286/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.321528628 seconds)
  done (took 917.483768673 seconds)
done (took 918.670703347 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.316375123 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.311775312 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.294266221 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.315637438 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.405155047 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.469765758 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.304842539 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.296207788 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.342014152 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.34528247 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.292641367 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.470369302 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.296525186 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.29467553 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.294986821 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.310659154 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.282599923 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.297152269 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.311773433 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.305250939 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.31140939 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.294021409 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.346178194 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.469723092 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.299728669 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.297794581 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.298275158 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.315589593 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.408695391 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.298331085 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.299325735 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.308149442 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.291621836 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.302218371 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.291782695 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.316950612 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.308188244 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.305913124 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.30034064 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.32830646 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.659403162 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.296619293 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.299012578 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.298467903 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.297787963 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.300651683 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.299308257 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.30284711 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311029537 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312435474 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.652451764 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.312523663 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.300175531 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.298690196 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.307763108 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.297128172 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.302214014 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315271772 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.317501714 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315064287 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.285423839 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.308534596 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.300362374 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.314155318 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.306406715 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.693359065 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.294848192 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.301359323 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.668797038 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.303345083 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.694200828 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.306957196 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.299515372 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.313163976 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.330374013 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.299650782 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.301013799 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.298260824 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.306791199 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.297496061 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.308903494 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313357049 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.304076851 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.300255718 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314053064 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.475248137 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.310547818 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.300611032 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.309051462 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.319665929 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.308212955 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.31031432 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303656974 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.295936456 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.312316766 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.304253847 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.303819572 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.303420934 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.305635903 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.311380077 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.669204502 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318462164 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.29823437 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.297493148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.299797592 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.314724921 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.66849392 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.301173237 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.323261872 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.348609104 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.302816421 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.292739353 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.311357637 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319006695 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.310844336 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.304368323 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.297008217 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.293329292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.66588909 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.316793048 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.303935173 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.300716838 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.320664801 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.30477288 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.298957732 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.30429068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.310391071 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31743615 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.42352221 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.314290557 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.334072683 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.30074243 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.305644126 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.331868283 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.319884016 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.335241793 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.306033826 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.320219256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.318390316 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.300223995 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.314191619 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.314017165 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.304938825 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.308377753 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.298853084 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.332889096 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317829784 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31753702 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.325423192 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.424718461 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.301550362 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.293954984 seconds)
done (took 219.976943608 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.362842041 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.294837135 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.391875065 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.302334795 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.402290466 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.399227269 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.299590475 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.299280798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.299084095 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.679719046 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.299648373 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299921888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.298506778 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.299325583 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.38502867 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.302305617 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.299261238 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.644287437 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.30274956 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.370922244 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.301152499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.299743231 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.301591414 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.680275105 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.302547597 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.301304156 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.380159416 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.303352685 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.671609259 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.29549379 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.30200325 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.700226066 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.391815337 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.320312158 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.312341391 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.309830029 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.4027896 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.318730814 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.381752584 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.38242374 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.395398052 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.342609507 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.301484145 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.303875453 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.305450869 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.305820953 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301858176 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.330548261 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.296569112 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.301555523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.645187828 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.313636579 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.312288629 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.303088985 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.302406708 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.325709764 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.302023075 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304814396 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.393260918 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.306804975 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.364712501 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.684352522 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.683407207 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.305749193 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.301724228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.302523586 seconds)
  done (took 146.444674369 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.370600069 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377944211 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.412898518 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.306413289 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.35703699 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.419886122 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.307361426 seconds)
  done (took 10.76914446 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.311111619 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.307156306 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355425907 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.354264912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.307114979 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.483374142 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306904204 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.317264738 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.303206616 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.356945491 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.310857063 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307016134 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.313063829 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.30147475 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354152548 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.317169034 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.420886986 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.307775973 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.307815296 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457183474 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.30613502 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.312969786 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358268466 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.317772705 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.311160191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.313313477 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.133955241 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308496169 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304655458 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.307577604 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.30565006 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.386422491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.308367137 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.30127995 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306083059 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422001148 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.30924899 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305554993 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.30825057 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.302479942 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.308680802 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.309165136 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.308710488 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.305451253 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.308488974 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.331355279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.309177374 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.309141428 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.308548037 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.308823379 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.358446307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.309735784 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.306500442 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.306265734 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.361648103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.316153203 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.310073287 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.306767527 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.310899745 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307670635 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.459552572 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357332889 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.3101856 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.357283388 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.310014996 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.31126972 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.309855188 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.310758302 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363117 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.310691699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358812788 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.308370972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.490302992 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.333063387 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312848758 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.313415656 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.313327015 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310822826 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.306515673 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.316769484 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.30874036 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.310196901 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.317047862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308551665 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308152208 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.481561864 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416056629 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.309296419 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.324394503 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.31808946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.309363668 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.363616857 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.311768819 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.308675205 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362754097 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425561075 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.364588912 seconds)
  done (took 151.165130618 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.316155025 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.320251011 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.31635658 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.3356946 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.31247171 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.312342817 seconds)
  done (took 9.137185731 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.313647639 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.313476658 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.312261661 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.312172698 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.312362063 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.316675978 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.313943701 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313918136 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.316779802 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.313145243 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.316385533 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.314860153 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.317462198 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.314846354 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.315182325 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.312841464 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.314250985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310587494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.313365328 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314071779 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.421455345 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.314483666 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314741968 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.314712909 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.321424978 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.314139427 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.321881433 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.315212489 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.314171223 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.321175892 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.33321079 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.318208411 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.315650343 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.3190134 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.319051994 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.315754848 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317885388 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.315588898 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312835413 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.318370048 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.316665265 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.315697946 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.315180626 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.317046115 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.316214589 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.320139972 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.320458174 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.322372031 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.316808166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.317209896 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.317887405 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.315517087 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.318743018 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.317528718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.318393072 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335264858 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.321246609 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.316880664 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.317104092 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.316863936 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.316927695 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.321011433 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.317321825 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.320345503 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.314099924 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318265483 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.316975476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321059571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.317537066 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.317570271 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319855096 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.314982984 seconds)
  done (took 97.157720366 seconds)
done (took 415.887207043 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.632421185 seconds)
  done (took 7.860946274 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.513537879 seconds)
  done (took 7.743112714 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.205500906 seconds)
  done (took 21.441700396 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.320998809 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.376033068 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.318791721 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.311322859 seconds)
  done (took 26.555633576 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.59972902 seconds)
  done (took 7.829258004 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.312962441 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.310113835 seconds)
  done (took 13.853989138 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.315624225 seconds)
  done (took 7.54565005 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.906325081 seconds)
  done (took 8.142987428 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.31400848 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.333176622 seconds)
  done (took 14.131778166 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.294479676 seconds)
  done (took 7.521362757 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.213669542 seconds)
  done (took 11.441811184 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.318960123 seconds)
  done (took 7.547871476 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.339709227 seconds)
  done (took 7.566279092 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.059250269 seconds)
  done (took 9.286005299 seconds)
done (took 159.698044328 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.309097936 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.310743021 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.310890326 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.30920886 seconds)
  done (took 26.467125977 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.34914088 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.349294569 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.35102743 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.359960862 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.353399164 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.350920746 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34285659 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.342563049 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.360897091 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.353781755 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.351724383 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.352720077 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.351913696 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342918888 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.353721941 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.352795076 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.360516681 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.35248204 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.343018288 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.353240112 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318325543 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.361663068 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.353540652 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.318681966 seconds)
  done (took 33.608294288 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.836081147 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.387601472 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.471273746 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.36848615 seconds)
  done (took 7.292686314 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.369305632 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.370078234 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.383050996 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.420962699 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451820276 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.381126891 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.341018733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.340053991 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.326053516 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.370814656 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.446887535 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387472214 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.461920427 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.318037755 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.58358055 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.318818659 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.318684939 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.370380252 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.421809753 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.446367237 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.319954688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370992557 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.374574592 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.388524083 seconds)
  done (took 34.511454629 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.318799333 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.336075106 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.318098455 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.317381831 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.32748096 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.317847641 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.319158072 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320143427 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.318885626 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324065789 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.317683573 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.330001484 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.317898371 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.318811602 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.325175511 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320075311 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.325132266 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.319169404 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.319629483 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.326264234 seconds)
  done (took 27.668501063 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.31247634 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.247713426 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.665753816 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.571370168 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.315932725 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.321159117 seconds)
  done (took 28.666821493 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.387882951 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.516117055 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.320463156 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.660133586 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.736797357 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.327456767 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.320910633 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554312826 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858035526 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.838508494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.382631883 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.386786694 seconds)
  done (took 19.522601437 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.316372389 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.322402448 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.321804792 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.338135042 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373820863 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.325151163 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.328436821 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.315295486 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.381309261 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.378247173 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.325034933 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.374847879 seconds)
  done (took 37.334441087 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.403530616 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360104704 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.208325501 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338448239 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058500666 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528272255 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362021915 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013040547 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.338676112 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589065383 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319678765 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406656381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.57489064 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32103324 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324212687 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.296845625 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541386173 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761007885 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319067 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.257114081 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348851113 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317269905 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.330149456 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537748017 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537433058 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295515634 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.57866466 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.095631833 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592983947 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339067181 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328352867 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319214079 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593888281 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.242632613 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42106909 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522853548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330783131 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.864365337 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.323139878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.270906077 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328809034 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327431884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330776063 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319636145 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.253739848 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331940067 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.355491127 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.324167286 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.031571546 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318409374 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567202225 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422481075 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.323673206 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889537222 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326842061 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.349074436 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.32464729 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414410536 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892844736 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.497521406 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341571215 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.261319725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337156691 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2621059 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91955094 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.326136384 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.325486637 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.325232904 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254858323 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.257889501 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3458179 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468622825 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.346554723 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970660636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991979331 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338792916 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.251908903 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828541364 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323742017 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.263110032 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548229999 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.099653666 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257996217 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.262111177 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255720817 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973258715 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330992129 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.693305762 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342568988 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015718602 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.547418648 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349943499 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345762405 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.546241652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.20886908 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322072822 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.323126887 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473963082 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345733749 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018735452 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276009579 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.3280192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578871941 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.534402904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335071022 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.325231024 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079503769 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323115454 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.346844039 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333431559 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.535818452 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.888804389 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33968037 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.528085946 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347367916 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.101938414 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011050693 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324802873 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.335813581 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334828612 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591836226 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.055968338 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.210181671 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392890495 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329957306 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325377625 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.286345705 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173605226 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.484264895 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.521892426 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361006897 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.343013761 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.326259353 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271915125 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.322306802 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356185756 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.110249958 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54889968 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325554145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62360665 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25943 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472694827 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334995686 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.548275591 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.495804303 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.337008169 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584800158 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332203139 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335970065 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344550561 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345561319 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426422225 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347433488 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.326564427 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590212844 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330315306 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331396414 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309962677 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.113072748 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328410608 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.333234699 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325579373 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891352437 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303935895 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334111947 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216135536 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.341680247 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394952427 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333465843 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533477069 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.503319779 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347002826 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.33356837 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.338977188 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557272069 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33773414 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.27778378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415323034 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.798258186 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914121829 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34211931 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.262391835 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039250409 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.021425005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328927233 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.516733631 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328701409 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534811873 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351645566 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332704054 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890168316 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330625979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.307489264 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.334790349 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34132005 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.594230296 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329848162 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.49014092 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541902237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340238289 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.34725627 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473274522 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.343604502 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.26413361 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.84747563 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335208951 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330209504 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.105838388 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365554805 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.303980205 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497647899 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61286102 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334084433 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57851537 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.375189425 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.361884581 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334138268 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338493141 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333048142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.34519547 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346831696 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.342207718 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.286547549 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.775901958 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900634394 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032225989 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834253248 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.579387947 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.336442115 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.220137776 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033177105 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282506125 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987921216 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562654161 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031964075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295157718 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130354134 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506856055 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080637341 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588842237 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56906566 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576861891 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.341626751 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584423424 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552700134 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368281457 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333360831 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267253501 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.856916728 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264987354 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340844832 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421046749 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388297821 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333087033 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.112661366 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.395389972 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.993018807 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.974375998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885044807 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.720343048 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338350968 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338943515 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.492041131 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365996726 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858417472 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92848833 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345434041 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.811128636 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294840391 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.539787351 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.352690115 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.337870567 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.821813905 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.332491601 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.587616036 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584737133 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277242391 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.338462832 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843993518 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.190846955 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.340487213 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335065363 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025509577 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340596788 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618197408 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.35142469 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.517298563 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340195198 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268618731 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269631351 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.028168171 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344835545 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310175565 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784173708 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.33852412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338374531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36415739 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189299709 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592574962 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.350236785 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897461839 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561793681 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336360261 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358828696 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.341419926 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343943837 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.3245785 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.236780753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571571654 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372099178 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.566837927 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.251359814 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.244816013 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.360365319 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554607606 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.235029368 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351053715 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557375865 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.056287369 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.356800241 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022631383 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363626292 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.341762328 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347851959 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349239192 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358039822 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407830625 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545791255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.35614277 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348879972 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.001012892 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347003857 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340702469 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.352218143 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431631968 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.584707049 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.528498894 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.11187594 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904789153 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036926976 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.908225009 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591584517 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348037722 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343746722 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273478602 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487963597 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.864001027 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614458078 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468930664 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.349460338 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361733237 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339392148 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353180803 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55031021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614602995 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.209986684 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353749971 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.001125079 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.221804119 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351416002 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.551148265 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793149931 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855037234 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456049472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351954361 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05456879 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632889278 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431210687 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341164551 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930678696 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.343239668 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.003853227 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.346687879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34251225 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511687401 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.591059502 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.267734371 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359514894 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.497737717 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.11566184 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.35004894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603385721 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.769859952 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558276116 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916454505 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016782127 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612491784 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413055579 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551644689 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.453865166 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490276865 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.342155159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223732414 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343411497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185265398 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.052841017 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.352505207 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914036584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613503023 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.347180999 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.343845514 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366041429 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.353890366 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.566309424 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006427895 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567335567 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353960685 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352323054 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.913016704 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91426047 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599604145 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287082742 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.348333409 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561696244 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588153728 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369623063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.797754075 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.05634041 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860966767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.315609625 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365962888 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344895556 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02816054 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923110808 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.535408398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795998325 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003788237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353366477 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625798792 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.350825755 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356419935 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628228435 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.349306871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345698883 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579483766 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.918388173 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096540338 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.359523692 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.368863847 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.289282397 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570802604 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38156441 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306930192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356447607 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.757782147 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373321351 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477089029 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357894532 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.358517314 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347741584 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.080005784 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62768914 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.353193451 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.364068894 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.340368789 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357877454 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44454725 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324590562 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358028372 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.021446272 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.696522082 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602455126 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347191495 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.342100188 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.351230677 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348298999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.064561472 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317238969 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363454319 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865515514 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.354930442 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.365532313 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352423571 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.565421358 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560528664 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359994572 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558344464 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364425181 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369665163 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.254274272 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1153853 seconds)
  done (took 1668.721455392 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.356975466 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.375425219 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.369302815 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.396898743 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397926516 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478153918 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.395376207 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430415591 seconds)
  done (took 52.464182091 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.351693289 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.50401815 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.378881915 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.348366526 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.359434353 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.363034545 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.802905641 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.350786417 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.359745538 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.359742425 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.351277223 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352791415 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.970498229 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.359284022 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.356355731 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.336072025 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.358755211 seconds)
  done (took 65.5343515 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.248338126 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.614049644 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.947015289 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.406520728 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.357993661 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.354012108 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.818668692 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.380407058 seconds)
  done (took 58.392965356 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.368093015 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.367587762 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.367985936 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.368153325 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.372487328 seconds)
  done (took 8.110614491 seconds)
done (took 2069.524904658 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.356079488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.357838223 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.355425462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.357386049 seconds)
  done (took 6.692485478 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.337436033 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.068553055 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.3377581 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.358174973 seconds)
  done (took 18.368063695 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.35217218 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.36703672 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.029736191 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.986927177 seconds)
  done (took 5.283438514 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.102176469 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.113199871 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.098009542 seconds)
  done (took 7.579736838 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.349167442 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.358155925 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.359851958 seconds)
  done (took 20.333643005 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64088085 seconds)
  done (took 2.906783017 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.499295531 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.548940421 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.668637637 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.674589922 seconds)
  done (took 7.657844846 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.74102729 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.741055438 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.55105887 seconds)
  done (took 6.299828088 seconds)
done (took 89.107061856 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.063473644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.356304435 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.553887006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.038865785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.585115682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.556883953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.775540714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.001730561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.548207756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.536764938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.039871292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.58637884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.511719654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35265367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.510565103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.35602145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.756925654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.107524196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.765050663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.924146529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.778487809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.678117861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.874613021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.698009475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.755715553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.509578883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.258242648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.357752698 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.931976078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.279785946 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.510158657 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.095701169 seconds)
  done (took 188.924879322 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.355157809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.354236129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.357142432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.378271542 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.355289226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.356390162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.372680678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.354393749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.35509009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353244641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355075135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366223241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.356570359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369781669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.371220138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.355319884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.355430421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.355117327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.355554361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.354397176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.371146178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.355324253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.357509157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.354790346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.354264532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.356237428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.372114435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.371376813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.370804697 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.372051566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.356757268 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.372049427 seconds)
  done (took 204.821163898 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.368255919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.366586818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.357891281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.37338902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.356483553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.357439165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.374911437 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364924807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.355442146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370134786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.355704254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36107301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.356176369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.356933127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.359308378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.359285243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.356329428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.359882098 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.357376975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.357036145 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.372671197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.356182057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.35701741 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364470631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.356569942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.3587359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.356989116 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.373597581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.357745842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376677168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.358827835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.357515782 seconds)
  done (took 204.843950097 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.559740979 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.365878791 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.36597565 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.303150625 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.366311136 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.365276017 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.359350747 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.554080178 seconds)
  done (took 14.511785534 seconds)
done (took 614.370236849 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.643809583 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.351721324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.565160381 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.388433137 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.135104134 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.410701419 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.386229493 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.552292966 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.288367695 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.566335047 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.612748833 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.383020393 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.751327814 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.384103946 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633612245 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.481316104 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.228613761 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.31597156 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.692765069 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.884880648 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.641097977 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.822501657 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.555784567 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.274964872 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.765548688 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.818312715 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.037244968 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.21092309 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.402114075 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.702735409 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.978367455 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.328301109 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.425410157 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.429236866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.485050312 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.48103809 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.275867822 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.441450076 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.565349817 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.593292348 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.909312952 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.101928519 seconds)
  done (took 92.17624536 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.357107083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.355818305 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.35565253 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.356173358 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.358675959 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.355868225 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.356534242 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.355698917 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.356515544 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.356201764 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.356747086 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.357928125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.356465332 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.357661632 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.356081158 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.356314881 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.358074469 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.36002944 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.356663538 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.357110065 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.357641412 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.355957721 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.358066967 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.357214619 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.357783982 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.357570993 seconds)
  done (took 36.557320915 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.369848139 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.617699589 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.772568508 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.376250628 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.369886865 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.374281098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.445760287 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.37011278 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.374384808 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.373934404 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.537200262 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.37237846 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.404936627 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.806335957 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.373083348 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.370768018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371058393 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.370960763 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.626422798 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38007228 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.466151629 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.372813198 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.446254762 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.380525465 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.39196208 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.371567834 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.37619881 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.933089267 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.374334969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.537849103 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.138591604 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.451851029 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.882254065 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.789313543 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.140475208 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.381710025 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.373899811 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.543651037 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.374972 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.372253647 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.447080929 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.372939584 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.784812223 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.029306286 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.390281272 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.373409709 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.952778256 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.543424551 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.609814659 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382669936 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.811467187 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.375768984 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.374018546 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.373426631 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.608590485 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.380413554 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.372725084 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.928798036 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.395892677 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.448994593 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.375796752 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.37479269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.635304343 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.374671007 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.622695955 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.376753855 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.382864028 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.393108293 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.786648801 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377480176 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.047168385 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.391936741 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37418446 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.540347608 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.624499515 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.988527322 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.379337873 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.64071537 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896198583 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448732062 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.378621327 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.923606111 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.452069542 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.379675593 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.377735996 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.377525829 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37519313 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.423013096 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.448471718 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.98644245 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042154154 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.950988402 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.46832151 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38468981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.375940893 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.929796057 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393938108 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.376972871 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.784720021 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.050740506 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.393379655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.383906531 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.047800986 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.395059485 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.453077492 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.381663175 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.798813049 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.377636303 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.424050787 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.377884382 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.383591346 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.399891588 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.452551835 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.381193334 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.37863799 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.021267418 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.567019255 seconds)
  done (took 180.92543342 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.371219641 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.386556365 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.388547134 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.37125911 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.370952331 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.379096075 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.371893192 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.372101302 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.377193187 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.371236221 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.371916848 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.370410344 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.374540442 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.374654182 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.40133172 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.379302254 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.986724065 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.373140885 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.38685605 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.372215439 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.163402752 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.377768849 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.386673405 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.373301483 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.372107488 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.372319421 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.37315994 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.392253273 seconds)
  done (took 153.247705301 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.380260566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.923288321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382853845 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.506875035 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.400363949 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.377592372 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504655167 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442716969 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383597789 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.377078199 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.378272087 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.673157241 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.381866527 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.875858404 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.568000051 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.50637891 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.878834963 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.399138244 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.379639448 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.379069891 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.509247038 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390408201 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.676367107 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.938931783 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.385888169 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.931599097 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.378460062 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.381822743 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.380784432 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.933748414 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.387380037 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.677704833 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.462707253 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.438390327 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934752566 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.885407832 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894146527 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.524288401 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.381215676 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.379284444 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.3795437 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.371049029 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.934561523 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.390580012 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.382854176 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.929697827 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.406197158 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.384025189 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.388357794 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.379727523 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.439098789 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.445015986 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.686269843 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.943515307 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.462837308 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.394183393 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.50917513 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.798885571 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.385488623 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.878369555 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.370768191 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935872569 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404865691 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371439335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.382706403 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.38759406 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.52566153 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.511742074 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.879353019 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.399830911 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.878901009 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.542859456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.383755573 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.38243556 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.38537431 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.938633853 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.884478711 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.544345603 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.515084686 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.571869883 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.37433098 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.383780956 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.374728505 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.458856102 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.382934501 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940205116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.902032286 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.401328343 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.385481513 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.386190341 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.386671605 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556232816 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939853907 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.463657754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.876625173 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.700113472 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.692289127 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.393472877 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.44148693 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.404287665 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.687996798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.396193679 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.439208594 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.868402642 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.685948775 seconds)
  done (took 164.271544334 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.620552283 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.521573774 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.473126753 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52997372 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.973060888 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.959993661 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.647576122 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535763202 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.494714129 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.645151145 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.514586633 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.484337867 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.599477118 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.468810903 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.122796866 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.454600214 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.478867945 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.533314389 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.525174995 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.386418992 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.036303871 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.664817145 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.571067399 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.208701608 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.486285199 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.148425384 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.938415299 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.906194109 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.552645341 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.644503801 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.912281454 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.482733848 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.343816245 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.051071201 seconds)
  done (took 66.210198547 seconds)
done (took 694.662707951 seconds)
SAVING RESULT...
DONE!
