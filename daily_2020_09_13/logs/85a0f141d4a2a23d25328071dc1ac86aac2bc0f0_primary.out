cset: moving following pidspec: 30167
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.720301621 seconds)
loading group "shootout"... done (took 1.035580582 seconds)
loading group "string"... done (took 0.420854976 seconds)
loading group "linalg"... done (took 7.754625933 seconds)
loading group "parallel"... done (took 0.15877193 seconds)
loading group "find"... done (took 1.27174162 seconds)
loading group "tuple"... done (took 1.869745874 seconds)
loading group "union"... done (took 12.693140201 seconds)
loading group "dates"... done (took 1.34095252 seconds)
loading group "micro"... done (took 0.203842122 seconds)
loading group "simd"... done (took 4.3315299 seconds)
loading group "io"... done (took 1.026800639 seconds)
loading group "random"... done (took 8.721851835 seconds)
loading group "problem"... done (took 1.473380973 seconds)
loading group "array"... done (took 19.357979255 seconds)
loading group "misc"... done (took 1.486137247 seconds)
loading group "scalar"... done (took 39.430610011 seconds)
loading group "sort"... done (took 3.15809399 seconds)
loading group "sparse"... done (took 11.762462319 seconds)
loading group "collection"... done (took 17.346721475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491040118 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119686958 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1242704 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115497405 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195129868 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120052301 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122091038 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082355892 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897404137 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13411658 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111508307 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.404635939 seconds)
done (took 5.263861941 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162544182 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084906688 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076891648 seconds)
  done (took 1.290475404 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.062906938 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130080382 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06350494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064015524 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063756368 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063456028 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062995979 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063172955 seconds)
  done (took 1.640737538 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067965648 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065368177 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063027377 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065258291 seconds)
  done (took 1.393387721 seconds)
done (took 5.696741717 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.233467624 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.09847183 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282354246 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.382464085 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.449037296 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092671509 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072051936 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067536979 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126506429 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315044049 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101706049 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178372402 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088249371 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170096674 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.969809408 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114280254 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083351569 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.118826046 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091635804 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128519769 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.375665889 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076531102 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071553016 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067757155 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065025724 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642897068 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659584062 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12675299 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082611925 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.095997333 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113859829 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640025174 seconds)
  done (took 10.34597614 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088339045 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088776622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066300351 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121713097 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091063917 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066996607 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072386087 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06475738 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086332477 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122077675 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090331595 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095651024 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063855799 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066251127 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071708314 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194168481 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078261122 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078240729 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06477946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07751404 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103863721 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076292798 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075947324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075756836 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127030306 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168646203 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095936642 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096322862 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063912661 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076328168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112651131 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128102398 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064558182 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06239392 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117165275 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093406512 seconds)
  done (took 4.46791785 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.930018592 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08962467 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098480036 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.60023927 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063626881 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.147814215 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235405312 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.0705694 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.381295 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141585522 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135097312 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.1435523 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.113599098 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070083697 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.155335444 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110092451 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45637072 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065530687 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064783731 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.063582887 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06565931 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065070124 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060979093 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066945208 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092222222 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081151491 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084524229 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.150014082 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.895584356 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.229570484 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065558126 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162138996 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084329836 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.36444338 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06854148 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079990705 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062450368 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.412314921 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120604364 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063865001 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16144141 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.114839345 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062652341 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.113635797 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075342831 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067252782 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066416428 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066117338 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069340543 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078581707 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099212521 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066209847 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062758628 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161596153 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062365648 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063694518 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064622639 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148190033 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062684941 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136561549 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061551727 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066036862 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09913129 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066629265 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085288483 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094502143 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.330397936 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.064965752 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063924109 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.199803516 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073283681 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06217685 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067994486 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06396307 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.06524867 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064428035 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070446935 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067723419 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066057576 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.1068032 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065008888 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068088082 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064707169 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069381171 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095357328 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062821076 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062893719 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.475647352 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097595614 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062385551 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073504884 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10340641 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063665487 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.068892132 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064897738 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064761096 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063454545 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064743652 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067148562 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062297837 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092517485 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067471927 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111028918 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.14776835 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065734069 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064357414 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069028093 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067514711 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067498312 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064744986 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067443181 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065824967 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062420734 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.106050378 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065210178 seconds)
  done (took 21.455298938 seconds)
done (took 38.329348905 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24868389 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076305701 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076849266 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077283154 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076720201 seconds)
  done (took 1.78171563 seconds)
done (took 2.997848573 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.105443375 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.061514776 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096930758 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.09668173 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061141878 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061429664 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098074315 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061786231 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095199831 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096551483 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097837108 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097645578 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061601716 seconds)
  done (took 2.315443038 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06590328 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078124239 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079646698 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05961825 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069682979 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07871846 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059412877 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080975091 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084410476 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078501011 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078827408 seconds)
  done (took 2.024704136 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065809055 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078712715 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.08006842 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05944782 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069854724 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079133149 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059260511 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078258455 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081428623 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078786911 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078733891 seconds)
  done (took 2.011535232 seconds)
done (took 7.556887594 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063131284 seconds)
  done (took 1.249320642 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.495818159 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.134657878 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065814222 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084095569 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18585226 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.091173955 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.199149044 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068815644 seconds)
  done (took 7.679840233 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093032808 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07122427 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066679075 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066625443 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064833238 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06500302 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064726647 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064849389 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065364571 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064594404 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066528682 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06611823 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066719102 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066575839 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065774801 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067175442 seconds)
  done (took 2.376433114 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094593473 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09342309 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069475627 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070222884 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068940206 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.06832632 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070842516 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069637521 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066986199 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068854255 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070426389 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069188219 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06896395 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059868738 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069734176 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070852738 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066732497 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070329021 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070337704 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071420753 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070283562 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060261812 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068456688 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069134115 seconds)
  done (took 3.010271045 seconds)
done (took 15.518541942 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.171766836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072151353 seconds)
  done (took 1.440562557 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064262561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066584236 seconds)
  done (took 1.345016583 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.06992603 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057852487 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077109689 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068108478 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059070346 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058746058 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.075551842 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059020329 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058946738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058673868 seconds)
  done (took 1.85675926 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059523137 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066214411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06481362 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066577687 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064815617 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059694659 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063037545 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060213492 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06654424 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059182643 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063585879 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078219757 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062797942 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080037745 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063059562 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063294247 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065214711 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.062233471 seconds)
  done (took 2.384457299 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058104023 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059997522 seconds)
  done (took 1.340886099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061629605 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058924153 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06190112 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062411184 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059911564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059139444 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059078987 seconds)
  done (took 1.637318842 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395265264 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11755348 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.327077371 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066135921 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074549893 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244381546 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060871755 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066188433 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065730225 seconds)
  done (took 2.67476147 seconds)
done (took 13.904562604 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07694834 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.17040607 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086852988 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.402714062 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088874893 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064331108 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109829551 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.165409907 seconds)
done (took 2.403046441 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.229034513 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.276172002 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.877757145 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06767893 seconds)
  done (took 3.446797437 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308567152 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07629563 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076167836 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065823466 seconds)
  done (took 1.759950125 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061813072 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068434917 seconds)
  done (took 1.361547616 seconds)
done (took 8.033675063 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060163041 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.088481052 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060854687 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061341272 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061672638 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.061884012 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061294111 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.061518771 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061071925 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060668946 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.061132439 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061008716 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060918386 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060833957 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060690384 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061323309 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060854947 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060973072 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06144609 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060978195 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061456424 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060856521 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061562846 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060858125 seconds)
  done (took 2.752581528 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075302026 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063274816 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064569443 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064092226 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064766192 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0640291 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064324844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063044885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064302355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062570362 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064426781 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064472417 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062357295 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064531177 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062523346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064691062 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064057414 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063119427 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06274117 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064698137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064216257 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063185963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064905845 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064157156 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064586588 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064699011 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06284481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063402513 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064418018 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064613316 seconds)
  done (took 3.174218928 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060705398 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057600542 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05874182 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067269486 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057787799 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058402783 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058215538 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057350562 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057969423 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058917449 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058244835 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057837688 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058343238 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057631971 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057190963 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057953678 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061794256 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075470721 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057792133 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057393445 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061620987 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057816759 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057470234 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057454768 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058114152 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.05735357 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.05730216 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057964476 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057637855 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058558323 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057414822 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061786986 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062219388 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.067022254 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067383577 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062271984 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.058409435 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061510526 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05904172 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057547725 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057692701 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057471153 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057421081 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057728682 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066894234 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057694151 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05881753 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05812898 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057840779 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057301861 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057177954 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059139071 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062555548 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059166844 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057485891 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058308645 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05751255 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.05817436 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057228027 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05735862 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057410492 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060952762 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059273626 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058597961 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076055353 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059024427 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06679912 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059937684 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05860185 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061297761 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058383155 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07427145 seconds)
  done (took 5.555719005 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078939201 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084259364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063645515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062507453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058354864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057690716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06552415 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058072282 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062284834 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077019693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058417246 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062565361 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062411779 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061713969 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058629882 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062956841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.065914493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058302851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05812208 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061714082 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058440224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065429038 seconds)
  done (took 2.663016972 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.131065792 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064088114 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099371867 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072714751 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066146595 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072342044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063554572 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063637213 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063358981 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063902912 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064315162 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063314617 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065843033 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064067355 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064410836 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064146584 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063496505 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063899904 seconds)
  done (took 2.525499182 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072219851 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063726579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085843352 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063470861 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063445623 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062963822 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067766838 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067629834 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063111039 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063012712 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067598161 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062874604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062875986 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063316367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062674705 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063482816 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062675471 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063009401 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067348142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06688263 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06645671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067930704 seconds)
  done (took 2.703350467 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071079922 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062864444 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075693528 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064189403 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058184211 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058262439 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062990755 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062803032 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062976245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061857088 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062778377 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058215576 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064127116 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062507941 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063935432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062582361 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0622978 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062470617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062334842 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058028182 seconds)
  done (took 2.513576776 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080942608 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060659212 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060760525 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078781268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060713803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060640536 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078564549 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060505736 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060841238 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081228436 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060222548 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060544373 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078609005 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078930347 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060966863 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078742683 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07883083 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079023031 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060587933 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060454423 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081484034 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060761511 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079791144 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060883624 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060437519 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060362081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060302346 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079154104 seconds)
  done (took 3.178521082 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060165429 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060678863 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061147721 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060859083 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061625681 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061051595 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061053264 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060873349 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060647477 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061264037 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060908133 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060971899 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06074742 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061059529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060988333 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061004362 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060480893 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061163943 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061226227 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061676481 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061378098 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060702874 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060715454 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061023282 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061291514 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060901904 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061859114 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060829494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060692779 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061059153 seconds)
  done (took 3.09039032 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069440119 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069358774 seconds)
  done (took 1.398857511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058410262 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073773364 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057837944 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068489588 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066826617 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061393083 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06654094 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066642425 seconds)
  done (took 1.774732687 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.063195101 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087018799 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059408299 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060598742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062538324 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116548059 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072246219 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072982714 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072181317 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062126992 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059974843 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071394004 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05906385 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071390375 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06084233 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067631619 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065841421 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070779006 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071080908 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058010663 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071061326 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059983755 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058461321 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060096368 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059618342 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065984532 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074205587 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070731155 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067121931 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05739171 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077402448 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058248765 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.05937454 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067643669 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062742208 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058230312 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093041653 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.05847931 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063758369 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058146355 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069740519 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078406649 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07165192 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07563397 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0601717 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06009721 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058029069 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060907339 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061872991 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067450942 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058747674 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065084885 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058004043 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059952182 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068147927 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058865041 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064107724 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067151352 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071126389 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068258799 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069985916 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072798959 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06729079 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066707284 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059367767 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076700017 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060169281 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070600218 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072567242 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059733517 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071264087 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057993552 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057771652 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058101175 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08957278 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060090114 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059360267 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058683583 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058644 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059997826 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067409635 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064211111 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06527864 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062005554 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073495539 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067177617 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058689153 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065532829 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075965256 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061971844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.05872693 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074631608 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062010352 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05822843 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074899137 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067526474 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059893879 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059204714 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061887281 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071385043 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060029393 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057483969 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066792072 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059754271 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060953273 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062318375 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065763503 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057661104 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067635997 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062953108 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059553899 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056852727 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061631377 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058362419 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056096515 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065853167 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05751489 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071298868 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063440041 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070960893 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070942459 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067153144 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072292532 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057644589 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056190344 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073886506 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06644096 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.058970057 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074553546 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057274561 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.204458035 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060055312 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061881214 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069313562 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058946312 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061138444 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059567042 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064894813 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061243997 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061153069 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063634935 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066621939 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070886157 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061068594 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067254371 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059032241 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073976991 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068582106 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063288008 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063390271 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059493694 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070469266 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065372043 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068088387 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058484742 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059326614 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059290481 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069583454 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067702315 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060698491 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066466555 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063461828 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059678731 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059134353 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060283639 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061875735 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062469477 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059769884 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066269623 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06773788 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075183814 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065990443 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067724934 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057897613 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058183025 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060512191 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058325754 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062772072 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067101559 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073211592 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069744055 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078260274 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058848334 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067731348 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060072474 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074459047 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071170483 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059658314 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063642483 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057557421 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060389511 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06799248 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069350396 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07173641 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072627115 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063008289 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063017241 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058348668 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072246567 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058820989 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067073914 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067747725 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063509196 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058438684 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060358166 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067586023 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062839486 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058761571 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073206019 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064877629 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058105304 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071885033 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058951134 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.06895851 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058337882 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061841518 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063623904 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060335441 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067718728 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073460493 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057915475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059200783 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073467819 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060831356 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.0600612 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066299061 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072927189 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062945338 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066269565 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068420738 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067463454 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062692325 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067372596 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059152718 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066867068 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061744078 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069874639 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058250927 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074894961 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057194815 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072029615 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058997285 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068494562 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058629851 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06705651 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058871168 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074514963 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060163773 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.05920286 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069141415 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056816816 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066270861 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057290604 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061946377 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063543219 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066243956 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059330857 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065945474 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059024417 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065338686 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061698969 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0656107 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065840773 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061366395 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056914232 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.205188177 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071238723 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068127137 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061483606 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061688636 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059931349 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067880433 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061318524 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060294903 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066555136 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063467608 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064241854 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06112341 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060626814 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060990452 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066767337 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068342988 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076283264 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067145557 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065898268 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068051854 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05902079 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073215733 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059012733 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065960187 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0580863 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065380936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06751404 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059230503 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076788521 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059974706 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065925936 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070813898 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06713088 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062596032 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076279417 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062379466 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066891795 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067010099 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063456011 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065142302 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060486487 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066732087 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067765698 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06962633 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060401422 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065805124 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067618778 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059979496 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066402763 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060187178 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066178289 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060064024 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057701579 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062996117 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069303645 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062714129 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063390159 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058813186 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057762722 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058868925 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065385537 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062951203 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066651358 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073040104 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057863031 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059513319 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058083718 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06496716 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07566825 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067934586 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066457955 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063515839 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05787252 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060590802 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060540991 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058763407 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062314437 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057580174 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058153833 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068813685 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060705157 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063600183 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059103633 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059772819 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06719908 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063479175 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059040861 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064629296 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058597871 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063487159 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057692282 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059941997 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062504649 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057808632 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062391297 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068335867 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074048285 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06482252 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067076686 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059830257 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065828372 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073616246 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066069492 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059606146 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067342668 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057782084 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076229747 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067672436 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066369583 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067866749 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058812912 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073858112 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062357981 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067687695 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073056557 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059248702 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064751987 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057712598 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072814434 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062588705 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057638133 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065372328 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065199892 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063068679 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068901384 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058429475 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064816818 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062366323 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060798654 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.05896478 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.058739821 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065504067 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072392133 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.05825391 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.204491075 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067843175 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068317428 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063848645 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071509838 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067365793 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060948704 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061440659 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062742287 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060188599 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070644815 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059365089 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063365107 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063100853 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058648558 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064380324 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074809463 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06768583 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067929058 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058582868 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057651805 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075466182 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062703618 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062348552 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066525432 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067909244 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070324552 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068322509 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074955707 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060000375 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064572438 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070928503 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.06043877 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058615748 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062238779 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060526354 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067759377 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068105814 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065969439 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061322889 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065579898 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071828146 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060183663 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063473243 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064262712 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059485681 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068697644 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066242554 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066867483 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059988144 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057986724 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061776591 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066498839 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065888186 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066606829 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059338741 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065119289 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071748421 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066157902 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061902769 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058266916 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061935869 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066997395 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063053168 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058324952 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062995005 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061656466 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065761745 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067573328 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062767733 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058274213 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074500567 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066405529 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067574399 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060574398 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06058837 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059152519 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058438076 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069157209 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058581829 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060095997 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062934043 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060643721 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075437125 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06665332 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073882666 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05956104 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063020708 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059044562 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067567969 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062954063 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058745391 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069027181 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057915312 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073024312 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070669804 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067357929 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058439398 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063395561 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0668453 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072615066 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067720523 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067376867 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062208197 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068001662 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060907963 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069033705 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058343069 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057750924 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068224429 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066772757 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070064683 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.05797984 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067904948 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060050285 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065530348 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065758357 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059921116 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059582964 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059752175 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066664362 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062402938 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066317204 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062204947 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07346425 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058623467 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067697706 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066313253 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067660557 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070468681 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068896642 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065286874 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058175141 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064769161 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.064988381 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.199665624 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065104776 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063583507 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080790735 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06180126 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061465589 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073134028 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065860172 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059332067 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065685719 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06374331 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069003083 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06016041 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069017881 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062936352 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060065758 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063852855 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063093319 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057795591 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058815383 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059085408 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068679604 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063719554 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059020806 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077088822 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061096528 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067567151 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069422323 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065017965 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060979747 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057997561 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059892165 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071459038 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07367702 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06236984 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067288494 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060168486 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066868581 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057737939 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066412102 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06664607 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08492533 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058404436 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058975546 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072716412 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073425813 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063473009 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067655532 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066947371 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060469414 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080306815 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066691952 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059210479 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069146321 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060850195 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057996471 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058476139 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06019811 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069750386 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058500711 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061001438 seconds)
  done (took 40.379627818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093853539 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060201788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058557067 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058569238 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069362933 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059473166 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058995003 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059363367 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059176558 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061132961 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0584151 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058212684 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069058965 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071570904 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068595906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062204522 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058142985 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059312086 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058197672 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059146451 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068393921 seconds)
  done (took 2.700438497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064297589 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073977742 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069943722 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074834196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066593396 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062879003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069365802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062714964 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070313995 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067696374 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070176684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062591068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067672228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067582208 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067474705 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062738763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069983257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066354088 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062559884 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069745627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062647955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069967134 seconds)
  done (took 2.832456065 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058750481 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059240313 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067189898 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058109473 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057870502 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061498688 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.0576195 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062485036 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062188565 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062493361 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066633494 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059333022 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057523371 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063507117 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.0574978 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058451373 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098264302 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058890518 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058893194 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.05812737 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06363219 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066662728 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05793408 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058049024 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061908012 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061347457 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.05779802 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060577277 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058589836 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062471546 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058990969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057722002 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066364933 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065615027 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06232368 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.062230358 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059761065 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058735391 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057780033 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057847109 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066229279 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059433798 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058213465 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059331584 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066212112 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058181236 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057673018 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066266401 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057826676 seconds)
  done (took 4.365985443 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.067478058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107388257 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064164574 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089448371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.0711091 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065123459 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063722149 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089439256 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059240468 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060066247 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072263632 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.072091368 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060791669 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062809932 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06500456 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061265605 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062156701 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060633244 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063791317 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060526484 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064285867 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064729664 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070855037 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071080875 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061879316 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060249869 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060376439 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062362782 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071271981 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064308153 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062433399 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063168952 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07175689 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065813662 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06079544 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060708403 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072090087 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061536984 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061064633 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059446875 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060589533 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062277942 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065179855 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072302121 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061106996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065587173 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061066585 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.05916095 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071718962 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061562509 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.065244459 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072605683 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06240192 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06201441 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06305038 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071376531 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061568625 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059946072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061414622 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071626774 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059784568 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062237922 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071862585 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061123031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065011657 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072207891 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065420556 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061922895 seconds)
  done (took 5.974285198 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066490344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089970483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069822028 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069676922 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068757834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069077822 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069221903 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069073221 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068639427 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069188138 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06866859 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105377347 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065010321 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073309187 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068491647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068399359 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068341115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068770833 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068309282 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068352653 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068721714 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069055645 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068837152 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069052428 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071329463 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064698197 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068694748 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069084764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06957889 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068665012 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071175926 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068478461 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068956921 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069585135 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07114476 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068496043 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059023136 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068471947 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068443398 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068478055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064747709 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069139056 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0684388 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064775313 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069031068 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06856134 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069109442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071458726 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076026539 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06945411 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068733232 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069354324 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068865928 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069021794 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069555357 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076008811 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069389758 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069590123 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069109517 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06973537 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069718643 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075862983 seconds)
  done (took 5.726739923 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07055738 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065488953 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077965007 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0613769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058466452 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067880569 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058466695 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058367795 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065704655 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065620852 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067340045 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067645152 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069467366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067066936 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067317437 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069472346 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067284523 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067297069 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065757286 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067710562 seconds)
  done (took 2.708315357 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069625843 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075751239 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0644581 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067477982 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063982385 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06794265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062814589 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063719377 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064567777 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063902877 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068512225 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068954963 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063995319 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067539458 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068660632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067799938 seconds)
  done (took 2.440830053 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063765016 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06538338 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065884227 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060212147 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063253339 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058678786 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059324176 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.0582457 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059045888 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072571269 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059630636 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070666203 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.05944258 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05826403 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058741136 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064733189 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058476908 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059294233 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059812105 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063739038 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065673794 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060309317 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063258911 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059577373 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064447679 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066575011 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061199046 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063168837 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059258694 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059625417 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06468852 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065948829 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059244643 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06032361 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058786448 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059600862 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059203175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059563064 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064744391 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059455279 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058541842 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064142895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.05950093 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060119307 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058850762 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059511157 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058563869 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065233062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.05990382 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064708909 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059571866 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061494522 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059868488 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067015289 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06199122 seconds)
  done (took 4.76628252 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072073506 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062158205 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058834765 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05883428 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063790713 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064776907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063438584 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063556229 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064510526 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059420592 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064198542 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06333355 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063949911 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063913998 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063891994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063251941 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058215131 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064052724 seconds)
  done (took 2.521602748 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068227402 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062138226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068246684 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063294103 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063795641 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063274613 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058614959 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058536999 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05880928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06300634 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063182103 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062994511 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058658256 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06348813 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062856614 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0633473 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062930306 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.05867195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063049535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058597839 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062966473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058350019 seconds)
  done (took 2.746513131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084279877 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082057679 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.121355727 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077643796 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085606585 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069562897 seconds)
  done (took 1.89880337 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086718192 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099276918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063477287 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063337281 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073194288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066267365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066409692 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066808655 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072256968 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070703043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066938927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072047421 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072296208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068424233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072266676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074416913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066743455 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066395235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063426629 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074542063 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066459568 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072194883 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067195763 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066203493 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066873178 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067955083 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074758025 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07076571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069100014 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072099017 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074590703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066693575 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072294983 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070589301 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06375878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072069431 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066460684 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074731008 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072384955 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068384741 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063150722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072280329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073187813 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068923006 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075233596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067044955 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068483279 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066689612 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067048703 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077208425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072689289 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068774823 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072753238 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075095753 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075293146 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077299045 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070873598 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068302301 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072611827 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070659076 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068336929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072547202 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068674113 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070961349 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074909043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068682007 seconds)
  done (took 6.05668446 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092587031 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064058178 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066670221 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070671141 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068804403 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066778675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067099766 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066927213 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067325219 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064474967 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099506509 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067121273 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068862775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06848744 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06705941 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067016994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06667913 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068411831 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064162541 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076757221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066798644 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068532431 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068997679 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0684299 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070977495 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074493241 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067016346 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066463034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066334329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066534754 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067934645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0667387 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068438652 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06340311 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06856661 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066654744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066512561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067893681 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066513647 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072492871 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068497476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075047442 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066547014 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066325592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070595806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066920765 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066457633 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063909356 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06629242 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063874544 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07098625 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071090762 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070982673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069098714 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066767572 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067173818 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066713135 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066709355 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067046797 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075407295 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068446085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066771726 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076906268 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066431683 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067008666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068514589 seconds)
  done (took 5.957614961 seconds)
done (took 123.644022221 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204384445 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181492756 seconds)
  done (took 1.756458209 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070147987 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093808344 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07281944 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132278706 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067804018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103863406 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100957825 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070938283 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068690279 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068986949 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069442447 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070862929 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134472145 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067442123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069062749 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07157918 seconds)
  done (took 2.721666821 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101247916 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177404938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109383107 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067637797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102848179 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074308338 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066612681 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077503449 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070609592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070493025 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073366669 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072256484 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070411323 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071797783 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070899612 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073812039 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070147172 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073734935 seconds)
  done (took 2.889776116 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089309923 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083905174 seconds)
  done (took 1.571541977 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149469534 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101336987 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139073386 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.309167571 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130424223 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.123005012 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129029129 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125236041 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.110022239 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.118095898 seconds)
  done (took 2.824653908 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097485923 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169854615 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302676949 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115968359 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073159444 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097288794 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118297195 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07947716 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07745373 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077130046 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079621941 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074314183 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095165679 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073685568 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07400141 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073686651 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098174288 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073116441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072452074 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072954151 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097862753 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067762882 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07347108 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072733485 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074802006 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074781203 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069069877 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067671931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073308317 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072497989 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075332233 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094035146 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075063313 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096810436 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072120571 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.09825896 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071836087 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07121472 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072170017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071448562 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074816404 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074332643 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07606845 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074099764 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068655766 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071884025 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068947232 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067311059 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076169141 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068261899 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.075830347 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075537664 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097461744 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068374082 seconds)
  done (took 5.982140215 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104397802 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102743439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067929277 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109324024 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10230916 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067412571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101349748 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096433144 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105227219 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067427046 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066642452 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066735456 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074474414 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078542745 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114552196 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104972216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069045409 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067235591 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104169335 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104324898 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066195581 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096930705 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095903958 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103666856 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06596102 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066989025 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065530462 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06642109 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.071953264 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072847274 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066270043 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074296328 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081325006 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070936029 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065117605 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065928732 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06562897 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073739809 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074862978 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074413388 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072789129 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065411324 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065768309 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066509951 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066655184 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065726534 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072677989 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073854068 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072615268 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066274047 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066590836 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065650727 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066422611 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073831409 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073025686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074837977 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07444117 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066016475 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065987223 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067486665 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075628946 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075211748 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074606106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067264189 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074789953 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066333392 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076653451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080349763 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065831149 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066294189 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065855661 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065997764 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066567669 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072292765 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072411697 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066619337 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065933118 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065867611 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074667227 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072587417 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065869807 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071695941 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065637698 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066407764 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066217749 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066586581 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07194834 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.073597445 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066926075 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065441834 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065721976 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066085302 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06512997 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072335835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073237167 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073130078 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072532076 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066353039 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073006944 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072844568 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066136447 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.071888044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065666607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065891964 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065934584 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071559368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071000837 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073516446 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065214941 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064557921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071521235 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.073549192 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065257933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07069529 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211496658 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075448699 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067036408 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081120632 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068030868 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075932461 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065261032 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076658631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067619856 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073168286 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067251274 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066191565 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066999204 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073645216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068310004 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066815112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066979222 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066705995 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073414415 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077409004 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067355594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073683763 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074008983 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067376961 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073275479 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066091042 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074788559 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067102871 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066924709 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065962731 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076256505 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066474321 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066448533 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066431723 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075677715 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064862869 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075917629 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073521851 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066445946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078513559 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073619312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073615131 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076119809 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067641346 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066537329 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066605812 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067205896 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071668997 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0738522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066945003 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066580165 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072376961 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075783833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066033078 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072745744 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072956778 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073042566 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066770341 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066140918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076043423 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074033339 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073605125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072736733 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074026871 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066475412 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072481561 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07354901 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066183115 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080167319 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066505458 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077006257 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074284057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072574775 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073537024 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075099819 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075911258 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07615993 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078797075 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066263557 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06606273 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073148681 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0661889 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066736492 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072884715 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066911825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066854026 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078508653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06459105 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075748658 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066229783 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074072449 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06642871 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067032332 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078613937 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067052133 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06669034 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072698604 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066266961 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072215133 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076060933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072352947 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066064865 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066258143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073657509 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073505954 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065510989 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065232289 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066029483 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.070591962 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07071654 seconds)
  done (took 17.75650473 seconds)
done (took 36.911972042 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.198024036 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155318443 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189660252 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11154932 seconds)
  done (took 2.152779708 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.088444603 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09470951 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.075262772 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063601071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079845657 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063308283 seconds)
  done (took 1.907694256 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.251639213 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180771118 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165948587 seconds)
  done (took 2.034906252 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209548455 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190479381 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464427174 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.288137036 seconds)
  done (took 2.687138679 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.125350313 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.077025218 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061665682 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071849801 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.103367384 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.129875298 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085353507 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.106604385 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072877863 seconds)
  done (took 2.333378563 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.126079139 seconds)
done (took 12.707000794 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115914971 seconds)
    (2/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.202231206 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.2220819 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096039076 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.204098787 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077024243 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06638333 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089507231 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.227571482 seconds)
    (10/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.092979139 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074133911 seconds)
    (12/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215552041 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072400746 seconds)
    (14/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157102436 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072021838 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076898821 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221693035 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072139267 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09213315 seconds)
    (20/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.157760511 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063893991 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.219588717 seconds)
    (23/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.072249192 seconds)
    (24/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072085489 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.296137768 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080859321 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110632207 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.178389155 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065256896 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076128232 seconds)
    (31/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072171532 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140585953 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085743246 seconds)
    (34/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062746836 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074139112 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.193684447 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227826524 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.185562666 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089623413 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063460809 seconds)
    (41/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.140538717 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074420004 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076136449 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168600071 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.141583418 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.07618962 seconds)
    (47/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.172625417 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.20377711 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.174173708 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.145581924 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090848087 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.064684615 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163479904 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089461609 seconds)
    (55/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067847087 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082054538 seconds)
    (57/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155971718 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062923127 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072004039 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061843056 seconds)
    (61/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.241263384 seconds)
    (62/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062434645 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073540488 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143029915 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148428832 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063637918 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065305498 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174855037 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151920342 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078846687 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0740187 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.139574744 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065050049 seconds)
    (74/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115729507 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089064421 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194212108 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087647928 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072034621 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063891437 seconds)
    (80/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.14787313 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069889453 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123782285 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072013685 seconds)
    (84/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071050996 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.234559803 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093854411 seconds)
    (87/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072957869 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068934755 seconds)
    (89/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075881731 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122631938 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179824649 seconds)
    (92/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.065330384 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080785484 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064014228 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072732828 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063654404 seconds)
    (97/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065700117 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067134666 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071073228 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130397792 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.17169154 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064857762 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064735362 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064560937 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063623117 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194138814 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071750353 seconds)
    (108/309) benchmarking ("sort", Float64, false)...
    done (took 0.132201254 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067181646 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085812429 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.1435993 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.096620191 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065310281 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075092787 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07568242 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062518182 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071247084 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072912697 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063632772 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082990916 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159338182 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072255706 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15448017 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074984741 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118953477 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078228635 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06263473 seconds)
    (128/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074282624 seconds)
    (129/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068077529 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086043409 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.217632476 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.20289325 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151486276 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065026061 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064721875 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063763175 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073509239 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065300712 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.183444417 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075151027 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062802174 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.141738301 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166461275 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075510605 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070802968 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076193356 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125293603 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064401666 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078988065 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062484841 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064430967 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088056843 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071460322 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145809961 seconds)
    (155/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093267809 seconds)
    (156/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.185359825 seconds)
    (157/309) benchmarking ("sort", Int8, false)...
    done (took 0.164389963 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064319804 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062189866 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072766023 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067698512 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089258784 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108621825 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.21286196 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068564626 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070990529 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062315299 seconds)
    (168/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063280518 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.192720962 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063676994 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144724831 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146471396 seconds)
    (173/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075251076 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062950405 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149269174 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074014825 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.145563202 seconds)
    (178/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.076522752 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087507585 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143623232 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.184027086 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144722566 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085481693 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193993738 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064034881 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.062472036 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062569063 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070898698 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061799273 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0647648 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.0620681 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069185752 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17482131 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062739464 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.253650088 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06846341 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066013579 seconds)
    (198/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068888668 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066332368 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068432094 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121503946 seconds)
    (202/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065664129 seconds)
    (203/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063957959 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07213773 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.063865134 seconds)
    (206/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.065386912 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089722309 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063684931 seconds)
    (209/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.065672583 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070991544 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126455378 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06324959 seconds)
    (213/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064152492 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076520119 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076349981 seconds)
    (216/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075417632 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143591558 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166870095 seconds)
    (219/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.063987111 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067023417 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147569425 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072451659 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071227018 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070930514 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119338522 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062820071 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063204747 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 0.132687087 seconds)
    (229/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.147198466 seconds)
    (230/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071493996 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065055092 seconds)
    (232/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065882701 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072643596 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.207280481 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06373596 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16998227 seconds)
    (237/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.064129176 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063512453 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086715959 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066197851 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072362501 seconds)
    (242/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.063702512 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085642008 seconds)
    (244/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071604951 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062464591 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150042797 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064332432 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.145152741 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085837337 seconds)
    (250/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071996621 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.139943667 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062687643 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063827625 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13373968 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112385392 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070402365 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070959344 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186077659 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063696384 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085366951 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064119514 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063494641 seconds)
    (263/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247841821 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065145237 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070748254 seconds)
    (266/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.06777802 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064081611 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.063381892 seconds)
    (269/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.063638377 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064154674 seconds)
    (271/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063481836 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062888172 seconds)
    (273/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.064664637 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062680392 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.157459478 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064453915 seconds)
    (277/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063027783 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065141496 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064318441 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064496493 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064771463 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064802056 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063200079 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066575871 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064613595 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076071966 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065255093 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09069603 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063476556 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.064281885 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065576779 seconds)
    (292/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122862833 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064505217 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064152807 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062853083 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.063775367 seconds)
    (297/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063245253 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062998913 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07106226 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064721539 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063139695 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064473018 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127067385 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070386243 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065991967 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063006603 seconds)
    (307/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064331503 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063471691 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.083752472 seconds)
  done (took 32.393931944 seconds)
done (took 33.8515057 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082488778 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089112986 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07249566 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083952859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080224492 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095683104 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072792573 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076891172 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079400768 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077657083 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077246247 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070632906 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073607871 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073649514 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070983722 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086591031 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079557301 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072100722 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072721255 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062882262 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072087813 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064181639 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062795681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070811692 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075817233 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071204972 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073579076 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073260544 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06467241 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064628899 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06915805 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073500871 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067062278 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076230409 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072532231 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072587236 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073936426 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077048903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062906687 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064467445 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074294992 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064106312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072063531 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070734079 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069258051 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071252654 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072191861 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075531098 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086962894 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06846687 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074691455 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074839975 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075011744 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069615673 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069328335 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072252716 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070442167 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086557528 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073055474 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068460525 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073824461 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073062329 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070908133 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072220585 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071986317 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075245122 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076156616 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07052366 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074808953 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071435307 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064001326 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071881684 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068629482 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063955356 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075334519 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07742813 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062759297 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068254935 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072147892 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072351733 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063180941 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06822301 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063384165 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068610942 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068090717 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070383476 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069218924 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071149821 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063146627 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072505651 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071317543 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071888578 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06320412 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076035458 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063657356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070378418 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063970658 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06388218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062915607 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069666528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063723685 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068700352 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072268965 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063064896 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068868 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077165081 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063506053 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071685705 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062630217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06285573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074425314 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074298371 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063886436 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068350512 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062964447 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069462242 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063028281 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063718066 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063644703 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06392231 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068832315 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063862366 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068237675 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069395494 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076302353 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063359185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068571353 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06833683 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063894818 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069830742 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063707165 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.0634198 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062171437 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076820542 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067825719 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063207265 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068602034 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067494679 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071309254 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061832296 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071793111 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068897677 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067483653 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069055278 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061609073 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073938229 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067375751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.213384423 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064306309 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065159976 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063385032 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064384061 seconds)
done (took 12.427291676 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064029144 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.090225093 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072455839 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080560403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076615274 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065465238 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06761054 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08092701 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067695329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083355733 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087037925 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084859528 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091197119 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063734784 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064652078 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06502518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062927394 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071470906 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078685307 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086770574 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093320643 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064171534 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072804286 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080056101 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074677588 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08019393 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065986255 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065226499 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066874415 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081390053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088691315 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064224675 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065713246 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.07785704 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078247084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071041178 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065311449 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068470363 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065119202 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064225242 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066549642 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078162873 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.071106094 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068711468 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065371435 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065194108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064435883 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067798402 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077378682 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067618677 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071977723 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075928112 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065994568 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064566904 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062801865 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068781603 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064632718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064974831 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064978411 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.064584304 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064788413 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066804057 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065227911 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065418106 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068091386 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067381601 seconds)
  done (took 6.23109755 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08116686 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093884152 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08155366 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081491722 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064697824 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065686007 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065149797 seconds)
  done (took 2.094005439 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063853297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077277889 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08064862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080430631 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073198591 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082496983 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065142894 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09504831 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064458014 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076899943 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109002143 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081519617 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0681541 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076164878 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065723906 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072037119 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065333469 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072881839 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073049553 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080699265 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068914678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092708872 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078982283 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065564974 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084453398 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.06887141 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06411297 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064996591 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066077935 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066010123 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065586041 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103399423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06841565 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076930144 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066550612 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064484994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070412179 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068099287 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066902669 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073464704 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070030744 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065679602 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.0633895 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066088448 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067156459 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068565532 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063249196 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065878947 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066228473 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075926084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064163958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06833568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067884953 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069451749 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071560348 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06935408 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072888329 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066033719 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0767432 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072864488 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06601654 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073082633 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072088652 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104634316 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072414416 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069197571 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068876938 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069697596 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065614466 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066648031 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06584197 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072080412 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064255921 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066467828 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068213757 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066617742 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.06850069 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081330581 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081212939 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077193215 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067290725 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066121398 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068646792 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.081241478 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069080307 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065798553 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068187922 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063948258 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069049768 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066144114 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071258864 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066858225 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072962902 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067076948 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069089022 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073557877 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064887086 seconds)
  done (took 8.500222108 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065446934 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065180945 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067387834 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065778588 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066135007 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066591588 seconds)
  done (took 1.987462881 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086009203 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065726258 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080015232 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066431161 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10057776 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072255401 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072256069 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073341662 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078173832 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078122173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072086372 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073911405 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071263368 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067031193 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071440983 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066426729 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071191857 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068080705 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077514471 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067211142 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077609796 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066568697 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066843121 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076601137 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067788016 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065731813 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065674599 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077509189 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079881132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073608469 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066849546 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067951891 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073564058 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073100729 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072081198 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072926297 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065213995 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070490079 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067394983 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067452147 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073827463 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067069851 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067859784 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070548317 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073290737 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07331399 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07040552 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.06878708 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071206839 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070153104 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070734442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065749069 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068011801 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07026978 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073419587 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073259626 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070555874 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071424643 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067191367 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073048462 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064996009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067554697 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072565468 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067863837 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.06880837 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070707717 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073175907 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067348192 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067178721 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065180375 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070759397 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064952248 seconds)
  done (took 6.684264146 seconds)
done (took 27.040633263 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.950004265 seconds)
  done (took 2.489937619 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.552972513 seconds)
  done (took 2.131355969 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.767463089 seconds)
  done (took 8.338961009 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.279348954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.308208894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.708132246 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12679163 seconds)
  done (took 3.026027557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715509086 seconds)
  done (took 2.298199598 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226960178 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222593007 seconds)
  done (took 2.044303432 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.338330356 seconds)
  done (took 1.913935489 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.092741803 seconds)
  done (took 2.66477799 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.212403138 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155788024 seconds)
  done (took 1.952165885 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466136551 seconds)
  done (took 2.048299626 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.119057668 seconds)
  done (took 5.702987115 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226610113 seconds)
  done (took 1.846677069 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230622681 seconds)
  done (took 1.815081276 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.721599463 seconds)
  done (took 3.299477359 seconds)
done (took 43.157439111 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079536047 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082647908 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08270327 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077635602 seconds)
  done (took 1.879879432 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070234187 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066409563 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072272946 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072326732 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070823427 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071449482 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.07127396 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068234422 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069926923 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.06811825 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067154968 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068210031 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070784482 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067949161 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070446318 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071795347 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06807575 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067879957 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070843309 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067809416 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070539521 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068153769 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066614866 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068214261 seconds)
  done (took 3.245938023 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074701286 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070381277 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07385557 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069917804 seconds)
  done (took 1.878209736 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072189662 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081628546 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083995194 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091010788 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074967495 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074282175 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081306746 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082450468 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064229541 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084702116 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066573759 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065471315 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065995446 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084762261 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081089403 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061387384 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062663721 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074703298 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07372372 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076114614 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066631387 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064307454 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074352082 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073983572 seconds)
  done (took 3.373051469 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076010759 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06279361 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077108526 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090723663 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092908517 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064840495 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077986785 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092667487 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125932284 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064036978 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070347593 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064342883 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105156462 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064377988 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079206131 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107100658 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109084724 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068058041 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096813491 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064348231 seconds)
  done (took 3.252046291 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073582748 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06668902 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069071273 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064811675 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076465146 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072187071 seconds)
  done (took 2.023206171 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065260031 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065810907 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066277211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065696544 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071105052 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066361459 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064658517 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066155219 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066254341 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066230409 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065683067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064913573 seconds)
  done (took 2.386606365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.155610881 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.066957958 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067168232 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065367625 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068155523 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065201267 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079550697 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067635604 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083700483 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065262494 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065799279 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06754781 seconds)
  done (took 2.51487481 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090812409 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092060623 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126498999 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107770192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089244936 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089412331 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.142115515 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131127944 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10849688 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068828226 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08164804 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100608358 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097702953 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134941804 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106708066 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070938537 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096916796 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079554762 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101016681 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108486854 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105249161 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108424942 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086815946 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097637312 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100718287 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109228941 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069571181 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069074605 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.130767288 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095388738 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087480483 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090307882 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105877126 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.06722182 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084306521 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096512412 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081784618 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098717128 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085082263 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093648613 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075216781 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.121095084 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097651083 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103874892 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115652625 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090793116 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100187485 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097119282 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080802449 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.112500638 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093072115 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089783193 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074732334 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149921939 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.088634168 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.101330316 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106973612 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080053345 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.084794074 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091155183 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.118276501 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.093956913 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102685617 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.251624155 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086964689 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091455765 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131886655 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084645113 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102029738 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121291681 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088593262 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074367029 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089450015 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068373955 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096430023 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098436018 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0916244 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106332478 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075967443 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123127466 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.104345628 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071284131 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109063117 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090491219 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148850555 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095929174 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099690004 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090685185 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.143769058 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084476266 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078479975 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093039832 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125930821 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088427893 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094848331 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.123430245 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087997928 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081512167 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073979183 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083749236 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092118268 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106486176 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096390421 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087443012 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081170163 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087433349 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073831003 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079820486 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.095647792 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086297829 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11582517 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101522133 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110941979 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077497417 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106407898 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091530257 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12722241 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115220924 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.081772431 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106920875 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130692507 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105579288 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083493334 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.099207085 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111637521 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10147226 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086741574 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128950428 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107006741 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082575412 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.241848701 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091829817 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.104992844 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149251783 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089665319 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104594372 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132860952 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.105542538 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092065317 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082596807 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089998766 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108413735 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136500854 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091593817 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069989682 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092795355 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126494384 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075379469 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093964491 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087560767 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083340551 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079895902 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067021551 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099957105 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131076531 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111517029 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099031383 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092311483 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067853221 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097969653 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095809905 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142223835 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.114468573 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097184104 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090483894 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09921447 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07825606 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127953577 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.125671392 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091059958 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09039855 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122013547 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088558035 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099334728 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10624212 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104171946 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096358201 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136944714 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121213781 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.112731636 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103624589 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122214121 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080306687 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10609947 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073322791 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102007357 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074735565 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100097479 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076601027 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106535322 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075884606 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096852285 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067560307 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.232137134 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102645493 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089175022 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085824652 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131252434 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122258822 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.081085525 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.092077253 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099067577 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096848604 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105823196 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.086158926 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091302855 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076828192 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079792756 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090734986 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094928381 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103271054 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076892445 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07397404 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.137883957 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102416169 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090106985 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090094604 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.115912283 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08324086 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082053473 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10403573 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.132540068 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115694466 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077956351 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090089598 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068293821 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082994444 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.07474798 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108144482 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073153226 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110345623 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067725478 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.12772575 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08616056 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100808405 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092345255 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122558169 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084757749 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.122389345 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085947588 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107198753 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093215765 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089194187 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105630945 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091049586 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098072335 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102523497 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085629384 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088351127 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122306238 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106606721 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115356042 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105199372 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134856155 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106750966 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07328256 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101723149 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089803098 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149233687 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098025722 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081431512 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082437618 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.254947348 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084173992 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140905637 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08625818 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081750861 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112223604 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.089058709 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088918548 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075936846 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101682287 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086223401 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108690017 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.096619481 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092731613 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104645632 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105711173 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085655805 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085489808 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122289267 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.128304211 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100894027 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086029444 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08694797 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099447931 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092210369 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108254286 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080707445 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075012115 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.067042754 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070549917 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.114832383 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10134748 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092633678 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093278526 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101820061 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070979276 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087282627 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090109715 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082939223 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088843518 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113026745 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102441319 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126797756 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100355782 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091720299 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.136858761 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125310248 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087606573 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092085749 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096261429 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075858869 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14665837 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113235036 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077025165 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081741753 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076243719 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085041464 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070290381 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104956403 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105125021 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075730211 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098569735 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09319366 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.114735761 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092017957 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07661483 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.079784738 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073194838 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073339721 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0964545 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.075790421 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075686391 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120349038 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.258405008 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105357235 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080785493 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07557191 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131008004 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068126969 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129922189 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080384225 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10497489 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.078832367 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076268588 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085715726 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100081176 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105441073 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112107976 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069937449 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101988499 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148661977 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076287858 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074096454 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073634827 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11072122 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086707224 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142257204 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089177745 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088142629 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075738246 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121764756 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101293121 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081680693 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122368928 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079335887 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070171819 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081110734 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106504557 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070967321 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073698123 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111175543 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.622212861 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090093417 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075673091 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083515386 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118971714 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082040987 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108019558 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.11603912 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105119382 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.177966144 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072748389 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090094023 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104003596 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09797863 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090459392 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078582914 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086473575 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087535597 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079336472 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105085644 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079940096 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085111422 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078904497 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102880713 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128414964 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08471901 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.101272152 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087121667 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084856057 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09546361 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102665184 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.258049742 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086179483 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088279669 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105697781 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083691998 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079403009 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098987874 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076110849 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077014739 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111334971 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083492583 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.093052375 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103812587 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084180696 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109318748 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116952111 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113397917 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097195044 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078254817 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085376938 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.0874228 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072759421 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078837991 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074827681 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068883945 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106038763 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084868769 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081607513 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.098999645 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.105488202 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.099446522 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108380783 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089233091 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09486993 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100717124 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124749206 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150647282 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098659397 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.116879289 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130719861 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07666096 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07529726 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079579414 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130867659 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.079345198 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091161636 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.231402549 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.076724447 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.080108813 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090054411 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107282919 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081800169 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07956859 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097443999 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110426239 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084160808 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081079931 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092917007 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.104420548 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129667136 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08824168 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074280082 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107726271 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101300516 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121887792 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071590215 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080932764 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127929348 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086523237 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100286733 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.0779034 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117745116 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125853363 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072578348 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.246633657 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070920651 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08828583 seconds)
  done (took 49.878889198 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151175704 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.150717237 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078450242 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.09675472 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.188775266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.205118067 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.115130779 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091034757 seconds)
  done (took 2.796704347 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064820361 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.0809051 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101367325 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082941747 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066268278 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066832331 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.196755587 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081904282 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065545334 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105223023 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074218462 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067423235 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.353325603 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065408132 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065760653 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073782234 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066710997 seconds)
  done (took 3.386568315 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.34893365 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613640082 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.314257288 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073678228 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.036088744 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084857861 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.231385696 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133599408 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078061336 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551909174 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.359561913 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128852413 seconds)
  done (took 18.671194296 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07203735 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072908209 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077186398 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076792997 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073449313 seconds)
  done (took 2.083513335 seconds)
done (took 98.998346094 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078520144 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.16848217 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067256432 seconds)
  done (took 1.980579037 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078060391 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080449579 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080174862 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077486416 seconds)
  done (took 2.034706098 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070600458 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073992012 seconds)
  done (took 1.855936363 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234239824 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163053744 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090024598 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078612269 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079088269 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079677887 seconds)
  done (took 1.96089543 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06829314 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070417629 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070454345 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071187365 seconds)
  done (took 1.99183131 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064873627 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064716458 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067580318 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070315291 seconds)
  done (took 1.980971261 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07881137 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082717707 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076674558 seconds)
  done (took 1.952249226 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107640717 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097873944 seconds)
  done (took 1.917672857 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076504564 seconds)
  done (took 1.794142562 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083976276 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093175271 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.142306792 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108133888 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14123414 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.125458146 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075494573 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077075953 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072163878 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071064412 seconds)
  done (took 2.704985494 seconds)
done (took 22.451390645 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075767857 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367606952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358961485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086055912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669347122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355051219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984025398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089812709 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09813256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067227044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083759694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648100722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976794837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329531462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963030044 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328639786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649753342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067816049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066704899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06746138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9696264 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066782402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067378717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067906581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649199312 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37244187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068097439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323883672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066936458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069760386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354441732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068292328 seconds)
  done (took 16.170424702 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067013612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120334737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072299938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083228804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069758004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068735466 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070479392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067874116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108050795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067345245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084352854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067307238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071347134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069447391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087999126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067892847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069608317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069078897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070813737 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06836547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086043635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068012689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068769776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069371943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068809637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08101255 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06949841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068249881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068340308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07118118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071650316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070086082 seconds)
  done (took 4.113521654 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119116742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126337899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073284608 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108058517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118406273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069698565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150348934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090765011 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113319054 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068294414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085068822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068463167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103210653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070069402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08876216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069038966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069867851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068783921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067782064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069777542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086753918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06784314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068698973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068807748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069000504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082827729 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069806746 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068777523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06859076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071027318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072836038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069897774 seconds)
  done (took 4.397338371 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066501579 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069027065 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078783414 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080179988 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066091922 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067477073 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068917812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065913604 seconds)
  done (took 2.301244217 seconds)
done (took 28.713042933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.075114427 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067117444 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069750493 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0867001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072835238 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.06918177 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064327958 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073208477 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07008658 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069831875 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071886263 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066007443 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069339126 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064141694 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071507695 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065406108 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0721778 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069311523 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07046304 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071649643 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067764385 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070352449 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07353704 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07030363 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069853687 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070500975 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074556234 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071330888 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065956151 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068622755 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067917054 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076812756 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072172946 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072044212 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065933683 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065495077 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069868052 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067792307 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071552926 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073666006 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06789801 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073918356 seconds)
  done (took 4.661263218 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080656076 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.086795816 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080280901 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078660079 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096890076 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079493822 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.083227122 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078342745 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076035512 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08473255 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072952487 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077256126 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078691271 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071647581 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077514201 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073692443 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079521143 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0729231 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078746552 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078021359 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086990701 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07167087 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078164 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079154635 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073470071 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079848971 seconds)
  done (took 3.799711274 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069268602 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086368083 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091114376 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.155051991 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110352384 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080759576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080912332 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095323334 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099047506 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067235845 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070661814 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092938047 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093689315 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073589181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106641945 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084004532 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07825362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068884446 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073809657 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100059944 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089469208 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085178775 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098468348 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085977039 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066333997 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075465184 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073150995 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080881049 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073625047 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07830036 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070613261 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069843504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067463316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078134663 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070194396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064690781 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087897178 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078725218 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080208407 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10871343 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076050905 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067855113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094928417 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12878674 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066605166 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069399112 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070222396 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.0784956 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067813459 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095419336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084658141 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066856915 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084434689 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067664505 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067992692 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082348309 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068466278 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068673498 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078325916 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072876529 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086593821 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071249199 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086169699 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066350206 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077180452 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067851847 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071969621 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065225983 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100622245 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073800428 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116777328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067566109 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064879677 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078033161 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077120013 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073151343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066743536 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084666982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077907812 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070160722 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078028616 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070188505 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069812586 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100930369 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065209069 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064621461 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064666364 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068815263 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069536281 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066817806 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079453625 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066170774 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069606201 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08102712 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066205065 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066935098 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069096986 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067720253 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065718288 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077336503 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070215789 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068194245 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078187306 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067233815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069639791 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080682774 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075326032 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066071719 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067549324 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069367563 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067747109 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070223644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070019258 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067964932 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072079548 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073928285 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071810971 seconds)
  done (took 10.845393951 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155580165 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.147775848 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066480531 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142358014 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075078897 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07134024 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145002212 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086151432 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067492919 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068279024 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066581394 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094338188 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.088294399 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102891038 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071695305 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067306593 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089537445 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098500061 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147722436 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14330517 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089715527 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074123495 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06956577 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068726957 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069055312 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075457744 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085199111 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07443112 seconds)
  done (took 4.388466443 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072087262 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.091105201 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070832972 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.07836461 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086023174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06804142 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069074637 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068235095 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081492465 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074562077 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06688239 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071679606 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070985175 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069675159 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067612031 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073279106 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0740629 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066135466 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070820672 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071592328 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077043884 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091543652 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071456557 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067110663 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069551452 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067147324 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074275667 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076676152 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066403572 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080760312 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064035691 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071117206 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080944321 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06761592 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067021803 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067224734 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06690276 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067189413 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067116559 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0647935 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065256466 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071647514 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066063063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073258044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081198099 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073627385 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068326432 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068741432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069046527 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063700371 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06984939 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070189205 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069672437 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074847721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070328966 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068975269 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070867436 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09208902 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072415156 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06664242 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065989636 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065668179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067957722 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075273006 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083313374 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068207785 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065762559 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067340259 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071806812 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080633462 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066192154 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071382751 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063731554 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066831911 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068988995 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069182657 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068358606 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065419638 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066493098 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066984054 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06726527 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067003181 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066182869 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069471885 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064861853 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065222517 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067361393 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067297004 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072855821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064948912 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068783673 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067684451 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066158004 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069746327 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071509419 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069905321 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080670527 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076139122 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067316746 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064893382 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080976778 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068786943 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06629106 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073364906 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070602641 seconds)
  done (took 9.212721198 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086468618 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068928907 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086236987 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091994414 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077377453 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073072575 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08060818 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06843229 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082901768 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066540321 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07584517 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065686118 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080423948 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075610834 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069102382 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077243397 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069812305 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086069974 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081034242 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065695136 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075419505 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078440308 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078660691 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083800307 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083600457 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084528778 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078717787 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069953998 seconds)
  done (took 3.955750429 seconds)
done (took 38.594642327 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.812232264 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.982037444 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.807565801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.001676316 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.02097432 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.928729959 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.928598379 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.804251452 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.043011636 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.842437559 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.113562639 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.242188989 seconds)
done (took 67.334257954 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.828965789 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.964877072 seconds)
    (2/2) benchmarking "String"...
    done (took 2.026164142 seconds)
  done (took 5.733702618 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.992066684 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.453696545 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.072858023 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.805354193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.810327984 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.237548444 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.594236653 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242779482 seconds)
  done (took 30.960573948 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.913190573 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.031281291 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.482074607 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.511220342 seconds)
  done (took 15.720418299 seconds)
done (took 64.071090926 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.84008695 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.807680238 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.864212497 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.838385231 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.818136905 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.810094577 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.808694921 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.810943978 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.861597501 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.001178214 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.80765427 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.816574326 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.808214628 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.825438574 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.499515763 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.866308553 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.817666177 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.810221444 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.81995296 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.84030987 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.814258207 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.810651016 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.291256731 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.998326329 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.418203021 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.139478554 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.315492439 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.210276428 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.814161639 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.808789625 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.890014846 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.132956102 seconds)
  done (took 205.761286128 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.807161515 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.81345044 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.883945001 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.839501259 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.321309446 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.987804416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.902114873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.350189202 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.815235092 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.830493243 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.012803788 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.811934105 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.031640517 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.844708634 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.843250639 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.850072266 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.010399917 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.047166347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.850946512 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.953423236 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.828516321 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.828061052 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.806468562 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.002241676 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.853615713 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.901208075 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.812396471 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.842541894 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.998050228 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.987108288 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.834258285 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.850317615 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.978939816 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.678184036 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.830208587 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.821619431 seconds)
  done (took 171.409652903 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.007918037 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.81638988 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.80934336 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.867140335 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.930673935 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.813655803 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.46080456 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.820443733 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.579204184 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.816547359 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.808538743 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.808826026 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.810438145 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.821026218 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.889131111 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.81333862 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.824821609 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.812181999 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.835284768 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.813254845 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.809804435 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.809296575 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.809279761 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.809780022 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.810239686 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.809280178 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.809621848 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.363031533 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.054641176 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.812149038 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.810494518 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.802896169 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.825533022 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.987704601 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.817947616 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.902636973 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.811723181 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.868716588 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.930842431 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.81661908 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.028808974 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.885241705 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.812586363 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.812440242 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.876153634 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.825050819 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.813264566 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.812757026 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.817829846 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.876686167 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.05613294 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.811770095 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.933762516 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.298001049 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.812403912 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.812088764 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.811624124 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418706127 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.817024163 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.812025934 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.817538995 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.818379409 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.812747526 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.813153259 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.199422868 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.883442417 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.075720528 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.299963332 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.818802887 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.261867076 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.006676292 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.813097613 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.812742564 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812886706 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.814464773 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.812271162 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.81476753 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.935691238 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.823066319 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.949947882 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.898806569 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.935748833 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.81842861 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.82615268 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.660184775 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.818462979 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.881700664 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.851477943 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.639922937 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.812025157 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.186233658 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.578195262 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.814405334 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.81306513 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.824913459 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.813378351 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.81433216 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.817372689 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.894579536 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.81471839 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.814063345 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.93582299 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.540430523 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.287507553 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.81992853 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.814531131 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.824349926 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.895397364 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.937126691 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.818882444 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.880013124 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.819526715 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.815854681 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.89324397 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.815376763 seconds)
  done (took 406.359255707 seconds)
done (took 787.340085933 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.390562857 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.367101605 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.459835242 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.381309434 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.355560606 seconds)
  done (took 13.707333044 seconds)
done (took 15.460175152 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.829191317 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.819463424 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.871795021 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.898641431 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.831899718 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.833881336 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.897506899 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.836152168 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.865891209 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.870461167 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.898823359 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.900335173 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.839202416 seconds)
  done (took 25.946996896 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.825882457 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.959917044 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.0379231 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.85551882 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.825882063 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.037162196 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.880069993 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.955590576 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.957512148 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.046337347 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.043887763 seconds)
  done (took 23.180724135 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.825231416 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.963841561 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.045206264 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.858144171 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.826670022 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.044569413 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.886120506 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.955642215 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.962614614 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.041576722 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.076739479 seconds)
  done (took 23.24724378 seconds)
done (took 74.128272763 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.81910518 seconds)
  done (took 3.574797042 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.837051394 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.964322779 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.820395173 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.821091622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.820796873 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.820029908 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.821500064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.82045656 seconds)
  done (took 16.481431537 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.820024349 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.820672138 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.820929104 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.821235097 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.821229135 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.821091542 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.820347739 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.821571858 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.821232266 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.82183691 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.820988022 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.821463313 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.818674547 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.819081673 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.818520236 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.818266361 seconds)
  done (took 30.883955025 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.820086343 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.818269276 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.819053045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.817038906 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.819173275 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.818147231 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.820195452 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.818773332 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.819452588 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.819032863 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.820577403 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.816622966 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.816445537 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.816671639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.816981442 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.817133145 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.817072838 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.816965461 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.820895455 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.81804272 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.816855245 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.817383207 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.817737087 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.818174666 seconds)
  done (took 45.392024377 seconds)
done (took 98.093825513 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.48383831 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.782098823 seconds)
  done (took 10.018609571 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.819227825 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.818659366 seconds)
  done (took 5.394021559 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.818110456 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.817597883 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.816990341 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.818177663 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.817053577 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.817997928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.817672773 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.817659656 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.818526466 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.818788019 seconds)
  done (took 19.931370433 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.819041742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.819530622 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.819752448 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.819199737 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.818522242 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.818510806 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.819801561 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.820407851 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.818761668 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.819078528 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.819583238 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.819668796 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.818796961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.819371827 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.81859079 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.820408304 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.82072643 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.820176117 seconds)
  done (took 34.503954546 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.818949548 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.818293402 seconds)
  done (took 5.390849784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.819961397 seconds)
    (2/7) benchmarking "second"...
    done (took 1.819828863 seconds)
    (3/7) benchmarking "month"...
    done (took 1.819294062 seconds)
    (4/7) benchmarking "year"...
    done (took 1.820063787 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.819710222 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.820458701 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.819954464 seconds)
  done (took 14.493616437 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.819519524 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.966148998 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.017327779 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.625578183 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.821769384 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.822537917 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.092896262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.824247609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.823883205 seconds)
  done (took 20.568806106 seconds)
done (took 112.052615634 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.655695634 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.825688265 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.073396059 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.887279809 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.843363537 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.115708714 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.846993623 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.463332663 seconds)
done (took 42.46776437 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.904029284 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.818647533 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.864000375 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.864824141 seconds)
  done (took 22.303414401 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.820135086 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.142053609 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.844439315 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.656003397 seconds)
  done (took 22.235935578 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.199464674 seconds)
    (2/2) benchmarking "read"...
    done (took 2.169226629 seconds)
  done (took 6.128847938 seconds)
done (took 59.32941236 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822551589 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.823069351 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.822516699 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.821279683 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.821651375 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.82218692 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.821565711 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.821969396 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.822405795 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.822928125 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.823533293 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.821870097 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.822136502 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823941219 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.822839517 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822722377 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823117048 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822993867 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.822926064 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824017793 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822079467 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823075564 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.823647153 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.823514883 seconds)
  done (took 45.504093224 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.824060582 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.823918911 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.822668718 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.82472054 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.823121051 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.823786021 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.822120796 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.824775465 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.823076388 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.823581763 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824658459 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.822537495 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.824053966 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.824723014 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824161696 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.823855198 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.824346463 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82316094 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823355755 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.823878547 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.823733606 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823002125 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.823968913 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82528792 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.82411114 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824280854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.824772589 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.824820475 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824586933 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.824831221 seconds)
  done (took 56.478102756 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.824549482 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.824905645 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.82452163 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.824329158 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.824148083 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.825321613 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.825018312 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.825647029 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.825084195 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.825521707 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.825720165 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.826582256 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.826637722 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.825579204 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.825400681 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.825394191 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.825779038 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.826706061 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.827108004 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.826539284 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.82566734 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.825703052 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.827021894 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.827311242 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.826464523 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.82551952 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.825772088 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.826721381 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.825701204 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.826605348 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.826687203 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.825766807 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.8276351 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.827009214 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.826578026 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.826450003 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.827048649 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.826224217 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.826566419 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.827075984 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.827497767 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.827521846 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.82672364 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.826767903 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.826823301 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.828206619 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.826144694 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.827708921 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.827707986 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.826906307 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.828182432 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.827737514 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.827763329 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.827758773 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.827827878 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.82860447 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.827268788 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.829020015 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.828649861 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.828288595 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.829844189 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.828921661 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.828352027 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.828475539 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.828045399 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.82909959 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.828696161 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.827940164 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.828143477 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.828717657 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.828313661 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.829066485 seconds)
  done (took 133.299519615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.82931478 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828996135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828656397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.828441239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829835143 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828461678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.828095549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829600306 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829948366 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.828290128 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828813646 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829392117 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82932668 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.829195412 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829815008 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828939817 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829658427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829515755 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.830553838 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828796198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.829833889 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.830220482 seconds)
  done (took 42.007025286 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830155616 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829792897 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.829304621 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829185289 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829690783 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829923529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829802237 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830513739 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82888303 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829356692 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829091371 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830259509 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830225843 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829776825 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829566915 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830069953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830538273 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831500849 seconds)
  done (took 34.701879154 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.830380132 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.830241393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.831063576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.830763133 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.831363797 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.831369352 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830986641 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.831379938 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.832801675 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.83124926 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.831663283 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831981805 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.831403814 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83208603 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831688122 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.831008083 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.832009004 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831508178 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831200046 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831978771 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.832626146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831338131 seconds)
  done (took 42.058843831 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831999128 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.832216509 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832667284 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832078342 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832760512 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.833402237 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.831835834 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.832540083 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.830858381 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.831955621 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8323681 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.832728567 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.832185321 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833695352 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.832123681 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833755959 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832049225 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83460882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83306658 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.833163274 seconds)
  done (took 38.419293981 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831975121 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83326277 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830949597 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83342426 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832962018 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.832498413 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833486533 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833889513 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832992331 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833037174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833194337 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.832821111 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832597508 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833232313 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832742637 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833054631 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833853376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.833795939 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834002081 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834290972 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833618065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833505432 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833456006 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832515397 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833025708 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832742122 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833558055 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833767765 seconds)
  done (took 53.09665805 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83519649 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.83446521 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.835339641 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.835860824 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.83541282 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.835785812 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.834239666 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.834594021 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.835385579 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835034975 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.834376625 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.835805701 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.83447034 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.835472161 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.836030013 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.835390663 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835558563 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.835291073 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836073402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834526096 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.835403708 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835509372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.836021602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.83586096 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835192613 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.835980997 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836335844 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835491062 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836272499 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.836054028 seconds)
  done (took 56.833216804 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.855971485 seconds)
    (2/2) benchmarking "in"...
    done (took 1.858530614 seconds)
  done (took 5.48499307 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.836186034 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83644348 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.83572855 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.837058899 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.836974113 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.836690038 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836517255 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836232569 seconds)
  done (took 16.462458232 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.838460719 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.842083146 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.839690001 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.838916707 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.839304066 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848011569 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.840286221 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.840711099 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.843397182 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.840185271 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.843312788 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.843687947 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.847065497 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.845149342 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.84037945 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.839945663 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.842346501 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842313367 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.841832369 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.841513993 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843821761 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840255622 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.841392255 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.839735216 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.840783116 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.843104469 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.84986176 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.841330553 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843309364 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.840472819 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.8476156 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.840899198 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.839488513 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84208299 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.839471393 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.840696353 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.847446289 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.840451751 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.840124074 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.841356829 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.845245342 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844304389 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.84504573 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.849745188 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.841531985 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.841313341 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.841677317 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.841209992 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.84131606 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.845382093 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.850645851 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841502314 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.843158657 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.841714424 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.845830123 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.841369395 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.841463744 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.84503816 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.850387425 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.850699842 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.845895432 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.862939602 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.852313348 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.842179877 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.841879491 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851231376 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.866062533 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.844676069 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.844571395 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.844161123 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851118473 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.843740451 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.84209938 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.842213845 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855952401 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.852745525 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.842240233 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.843346507 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.842744881 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.843054132 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.845461049 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.842789843 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843845053 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.843459057 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853819158 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.868208684 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.842991026 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.843084402 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.845877427 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.845587697 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.847747878 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.846643596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.843842057 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.843814232 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.845082873 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.84573943 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.843167833 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.84396224 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.843741849 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.854878618 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.847046842 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.844208385 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84915708 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.852507302 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.843396412 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.84496798 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846543159 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.844377929 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.853136859 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.844502754 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.844702596 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.845005486 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.846331747 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.849308922 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.845734338 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849991567 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.853541182 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.855152435 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.847769578 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.850384789 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.851489969 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.850082103 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855677928 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.869244755 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.846412162 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.850669993 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.852098509 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.857439568 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.851205679 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.847007223 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849450664 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.846437974 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.846945506 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.849773174 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.846568591 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.84593132 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.848120585 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.845448827 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.847064995 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.846714619 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.849190279 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.84841576 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.850529546 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.846629198 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.850775024 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.847211444 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.851147364 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.855311371 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.84710192 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.846922215 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.846711688 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.850614624 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.848371043 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.848749982 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.847575237 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.84748029 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.847022594 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.848016735 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.849718279 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.847380967 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.847682332 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.848458758 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.852965675 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.848579901 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.847403518 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.848377101 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848315999 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.848379654 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850271732 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.850740676 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.852153101 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848917545 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.854512673 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.849966398 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.84921769 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.849617697 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.850501422 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.848447357 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.854958294 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.860613715 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.853401146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.859351745 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.849859492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.857300889 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.851174484 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.851054732 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.850423878 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.848548809 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.84930467 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.850112058 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.849774597 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.853507104 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870616344 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.861225907 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.85194797 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.851106103 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.855257996 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.854232565 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.857064075 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.851215793 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851911212 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.852141181 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.848445199 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.849910004 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.851367576 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.854607064 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.850160188 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.85105713 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.855593612 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.850961739 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.850757665 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.85302212 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.850689987 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.852884779 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.852546882 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.850506131 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.851257859 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.85050882 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.861139923 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.8541728 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.851773433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.851566815 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855042537 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.85122321 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.8510361 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.852766992 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.856598041 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.851404943 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.853817263 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861879402 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.853142943 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.851538053 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.852495297 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.853710047 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.855242628 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.853038844 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.856472311 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.861167681 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.858260965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.853169234 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.858185883 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.852717374 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.855612666 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.85213928 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.853749166 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.853241635 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.85554834 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.852514043 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.853497623 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.861572756 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.85478093 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.854425716 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.854443763 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.856210005 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.855739733 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.856052988 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.852823784 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856978515 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.861653636 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.861396866 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.854021938 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.857482297 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.856357209 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.855274167 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.85808746 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.853836199 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865877711 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.864713215 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.854096396 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.855366655 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.854586162 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.856197628 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.85565772 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.853784036 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863769301 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.856587557 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.856270018 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.85952869 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.855334924 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.854015613 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863699076 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.857035142 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.858544255 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85725989 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.857276233 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.856653395 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.854843283 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858588774 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.854765944 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.859293356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.860737955 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.855594007 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.856594913 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.855884718 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.865351794 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.856101508 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.85614045 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863763906 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856623267 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.855126213 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.858443232 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.856843168 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.857151875 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.857400438 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.856007416 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.858931219 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.856609219 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.860801919 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.868182469 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.860542755 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.866542302 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.859117297 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867791479 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.856063601 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.856187473 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.855662018 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.860701516 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.864774159 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.856706617 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.856552457 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.866620151 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.858205484 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.858931927 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.860988167 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.857450549 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.856530258 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.857509639 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.859153149 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.862468692 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.861412515 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.85823928 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.857047281 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.858498851 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.857000567 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.86056042 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.859477848 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.85847845 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.857815879 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.858795965 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.85833962 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.857647504 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.85764863 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.857905616 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.859216023 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.858847929 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866552003 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.857409118 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.859889142 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861541379 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.860042239 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.868374349 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.858890428 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.858430957 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.859422912 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.859798358 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.861921345 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.858741394 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.858313402 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.858578569 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.858650672 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.861100508 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.872036657 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.86753046 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.863154254 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.861299707 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.858445343 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.861395299 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869311175 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.884397644 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859404866 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.862446614 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.863944908 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.868028697 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.862160363 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866920127 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.864541425 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.867338437 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.861442335 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.858840119 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.864072961 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.873864388 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.859938428 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.860447771 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.86102508 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.865520054 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.86326054 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.860984842 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.861274601 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864824247 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.862858384 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.874282509 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.862608132 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.862591982 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.860752188 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.861089422 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.860638336 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.861423023 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.862702369 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.86414068 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.861263328 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.862128588 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.864311288 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.86687899 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.860925803 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.864132951 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.872758237 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.861625838 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.861311071 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.863434279 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.86124846 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.864598268 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861629824 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.861839751 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.864731454 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.863360902 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.861808634 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866471507 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.871731075 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.864283608 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.862611851 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.862829595 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.866515869 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.8621264 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.862589286 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.865592487 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.872774652 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865934141 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.875133398 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.872208687 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.862455458 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.863616062 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871251738 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.87072643 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.863688591 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.863132687 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.862310993 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.865643922 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.864977754 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.864354546 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86387609 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.864704085 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.869391728 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.8641849 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.864639005 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.863434626 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.864172648 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.867858136 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.867667651 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.87010103 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.863891427 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.865845496 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.863289822 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.8660028 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.866400254 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.867246245 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.863850942 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.865043813 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.866219033 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.866700254 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.868723776 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.865349386 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.865807434 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.867682248 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.865470316 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.86508337 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.865662976 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.864544166 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.864886357 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.869432028 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.873363144 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.865909169 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.867883012 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.867375676 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.86896961 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.865769379 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.865085285 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865479642 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.866298173 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.874417175 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.867411348 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.865363401 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.86600435 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.866513734 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.872864256 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.868454781 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.871637115 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866304787 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.865773411 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.868284879 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.870394166 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.875572859 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.870329308 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.870990665 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.875731587 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.871076832 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.868845455 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.867112679 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.866913662 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.866891611 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.868641727 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.871609268 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870111821 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.870347878 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.866905337 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.869935512 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.86804138 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.870557359 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.868206232 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.86878957 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.871939673 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.878182474 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.878463981 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.869194639 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.869578274 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.867527406 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.870892375 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.879957049 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.867298116 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.868410702 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.868306102 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869547308 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.869850847 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.875925315 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.877051149 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.873035307 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.869459195 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.873812102 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.887681006 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.872518592 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.879471246 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.90082141 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.870247678 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.868583534 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870769373 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.870649652 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.867445454 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.872541835 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.87085078 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.877747851 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.869276627 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.869740396 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.878089404 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.870669557 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.869997488 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.86976655 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.870681464 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.876129467 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.869714816 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.878462864 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.870748387 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.870954058 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.869551777 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.873858486 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.871906836 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.871493526 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.870243593 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.873145241 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.87043852 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.869775214 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.879665074 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.870779193 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.87297698 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884357364 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.883794924 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.870571814 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.870888932 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.870370685 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.875852061 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.873353899 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.873458009 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.875071917 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.879666258 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.875562231 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.880915342 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.872806938 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.872972755 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872939141 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.872464174 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870867072 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.884606458 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.884141349 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.872749971 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.873432392 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.878399675 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.872106263 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.88148594 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.878949267 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.872570576 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.873886238 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873106401 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.873033424 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.87386143 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.872748568 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.876311918 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.881459561 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.872722714 seconds)
  done (took 1109.48157119 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.873086589 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.872749879 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873325028 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.872830366 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875899745 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.874039312 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873832664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.872528171 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.874950454 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.873226166 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.873959871 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873590608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.873363046 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.873288329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.873627891 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.875145218 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871724061 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872172131 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.873138959 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873749606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.875424537 seconds)
  done (took 41.15183708 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.871900708 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.871804095 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.872297939 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.873968538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873248931 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.871491502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.871094327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.87293206 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87152234 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872614222 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.871508392 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872531641 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.872038357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.872392316 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874144755 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.87267852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871992021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871581032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.872944822 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.872167491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.873620949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.869066845 seconds)
  done (took 42.996750743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.868140865 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.868327928 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.871227031 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.866763593 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.867827635 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.866963273 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.867285926 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.871604934 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.868357493 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.869586859 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.876589866 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.876069788 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.867933184 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.871032895 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.867560769 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.867861204 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.016299569 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.866982937 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.868129368 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.86699222 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.865928011 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.874915876 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.86793258 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.868860618 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.867125054 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.867631063 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.868195898 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.867244167 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.868222516 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.870505415 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.870036864 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.866751954 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.868021727 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.870064591 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.867962724 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.867541625 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.871184932 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.86585597 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.867883351 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.869727897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.879074022 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.891777554 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.867129695 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.865735381 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.876952391 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.869531587 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.866941405 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.87158249 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.874549571 seconds)
  done (took 93.570162098 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.868857695 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.867655585 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.86977457 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.8672882 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.868095314 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.8688387 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.869560748 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.865869787 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.866394625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.866922523 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.867785576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.866748792 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.858491637 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.859569569 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.858498231 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859455532 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.860308709 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.86001623 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.857932711 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.857546697 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.85690327 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.857761654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.857833013 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.855789065 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.857328638 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.856779316 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.856979173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.856859514 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.856311247 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.856268837 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.856921267 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.85679822 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.85706296 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.856552297 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85559786 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.857019038 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.857291892 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.857639262 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.858049776 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.856735293 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.857031352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.856311527 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.858144141 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.857183163 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.856807957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.857805923 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.85765389 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.856883298 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.857430863 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.857799253 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.857916938 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.857596942 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.856961904 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.857662594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.858558433 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.858447691 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.858051927 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.857458103 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.859573307 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.85875699 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.85985826 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858361175 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.858191363 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.858264224 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.857426981 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.858104149 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.85738403 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858831996 seconds)
  done (took 128.248196298 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858458727 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.860647588 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858451419 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858249934 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858067761 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.858594869 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.859027267 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.860422981 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.859117373 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85896837 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.86021016 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.859920409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.860299902 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.860085999 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.859219843 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.860844142 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.860623969 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864558844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.859476655 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858759924 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.858308399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.859033098 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.858727336 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860049082 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859916322 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.859694186 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.858753729 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.858587805 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861331804 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.860320222 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.85918723 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.858707179 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.857996465 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.862322572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.859771645 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.858161067 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85725954 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857134846 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.858361419 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.858906689 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85709177 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857172392 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857470541 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.858295134 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85869959 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85566339 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856513875 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.85571509 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856015222 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.857879707 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.8565828 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854506919 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854856054 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.8554348 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855562483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.857319217 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854603892 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854931121 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855090549 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854950647 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855972579 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.856614341 seconds)
  done (took 117.008562273 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855800078 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854902756 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.854932939 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857704913 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.854026399 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.853073409 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853002726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.85358544 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854988732 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.851525415 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852576781 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852488984 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85335926 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853311666 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854159215 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854062605 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853106271 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.853046551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853749562 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856912046 seconds)
  done (took 38.869520918 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.852230118 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.852923749 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.852863159 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.854138733 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.853513104 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.852197179 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.852925155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853028315 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853132605 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.854181575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853085237 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.853980046 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8529864 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853398169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.856150812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853907512 seconds)
  done (took 31.442375986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.853284926 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.853541915 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.853156488 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.855342811 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.853661459 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.853736706 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.853928264 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.852815587 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.855041413 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.851825657 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.852190734 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.853042877 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.852364181 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.853415875 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.853418957 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.852112967 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.853033685 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.852453776 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.852045065 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.851980017 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.852979282 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.852229617 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.853061675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.852632559 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.8528508 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.853825891 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.85209164 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.85214682 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.852281008 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.851839536 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.854680061 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.852245578 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.851854241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.852263309 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.852347129 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.852402258 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.852708143 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.852627005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.852660941 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.851946386 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.852533072 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.852897372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.85171346 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.851920484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.850993973 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.852246224 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.855106893 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.852312719 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.852674855 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.851000805 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.851694288 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.852033524 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.852968714 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.852204268 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.850860266 seconds)
  done (took 103.687520728 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851637096 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852168685 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851768079 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.852050328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851064252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.852401325 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.855202013 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.85231185 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853215421 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851613726 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.851889341 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850908965 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853364578 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852132851 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853303133 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851643655 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.8530613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.851653176 seconds)
  done (took 35.12754116 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853382629 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85218187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.852447315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.854045428 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.85218593 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.852781316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852010761 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.853149815 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8523219 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852171805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851223782 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.852913651 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851423976 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.852541871 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.852839943 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852223551 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.853025199 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85191676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.852067164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852952219 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.853700831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852376377 seconds)
  done (took 42.543149931 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.850418325 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.851515583 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.866358126 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.870603169 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.870236061 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.883328489 seconds)
  done (took 12.977908982 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851607976 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852232997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850756089 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85050907 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851935335 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852015761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854202007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851309765 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850904424 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85271646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852558363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853624877 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851780019 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851221701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852372454 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851598039 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851948394 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852933944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85165413 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852146331 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852265007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850709446 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853875182 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851520475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850963499 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851814929 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849886918 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851405809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850962243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850717994 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851089568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851408619 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850766402 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852709498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85109936 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851326949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851381091 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851751985 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854047301 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851413232 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850857555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851347451 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851520216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851585358 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852996113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850817957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850999629 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852145089 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851949208 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852286339 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851555979 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851745405 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851805266 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850803791 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85312728 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853867045 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851541169 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851729296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852016691 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85172797 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852557129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851922794 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851899671 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851688378 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852576442 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852653846 seconds)
  done (took 124.009360237 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852790772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8519105 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85181663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852648146 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854182721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852508474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852772083 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85149531 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852118182 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853734702 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852060508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853180103 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852166821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852435316 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852755769 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853078339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851718468 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852800325 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852605383 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853090563 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853927924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852752757 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852606438 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852698293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853066721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85386361 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852879357 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853202018 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852802225 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853732206 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85384023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853698303 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853136877 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854102152 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853915598 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852838711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85456352 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854176474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854087303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85271012 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853311183 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853043931 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853900583 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853602585 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854856208 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854082714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854947454 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854390839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853791724 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853530876 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856781604 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854268459 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857623739 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854785725 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853108114 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854653982 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854714912 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855716138 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855018476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855156704 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855636327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855183256 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856118094 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856199516 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856461291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855175974 seconds)
  done (took 124.135030612 seconds)
done (took 2571.3595424 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.947887794 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.959935795 seconds)
  done (took 15.695634532 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.02320422 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.97310258 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.859778849 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.867056639 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.859752302 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.880195126 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.880371897 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.859980605 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.859360114 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.859950056 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.859237987 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046241079 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.916446713 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.861022612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.860236083 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.950504623 seconds)
  done (took 52.210910381 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.865015871 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.862549147 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.876592403 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.862527169 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.864716291 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.876353647 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.892072372 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.869006301 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.901141484 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.877532293 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.936323224 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.875339315 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.866700051 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.919732023 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.880128342 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.880163811 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.95754945 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.940445117 seconds)
  done (took 35.794145333 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.94176318 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.869352775 seconds)
  done (took 10.609803439 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.866578694 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.893922002 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.860675756 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.862339293 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.869724109 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.856834471 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.888351483 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.892069435 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858151169 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.897074914 seconds)
  done (took 70.538845699 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.865793384 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864035438 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.864810863 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.862860311 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.858208192 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.865317332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.860546659 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86016964 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.554717906 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.900770016 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.875015589 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.869375018 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.8608161 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.861621219 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.858942813 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.886236544 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979189633 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.859270096 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.859628742 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.867019791 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.861320995 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.912021112 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.875088615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.862663235 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.896968163 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.549982405 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.87449653 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.867399644 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.99310424 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.859788274 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.861987481 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.073590882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.868016605 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.331207545 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.14802075 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.868549333 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.872105544 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.869046286 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.860049997 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.988014626 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.862477058 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.867747624 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.773257713 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.125275895 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.955289756 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.907254129 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.21395729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.868177253 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.861602611 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.895752608 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.863679437 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.862731561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.883699177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.370132893 seconds)
  done (took 132.533310385 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860661752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.211578987 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02467153 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.861757662 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146518937 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066481624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.865088372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905340514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.863977503 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.090852661 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116277021 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96773996 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862692776 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.859381743 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860487823 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85978348 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002775532 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93267859 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.861948305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.862958301 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.887917313 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0998934 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985151303 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.863798668 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.887297324 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067809871 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.980449848 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964236974 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.644472784 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.860682795 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922021657 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865221423 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.8618033 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859493013 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012117378 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.952762372 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940706613 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.862027015 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859902779 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.867805535 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.515666701 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062654519 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.955035603 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.985058844 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.110996724 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0646887 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.641540557 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.859666027 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.596541461 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025382791 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.08760982 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.092245545 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.978381725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.866060733 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.392262231 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8607295 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865343926 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106165222 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083791606 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956095928 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863594602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863802989 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.861882924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096667895 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.864763788 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955412629 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862788504 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862523079 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.956241431 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962704625 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091491573 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073014197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890556539 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.188583123 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.357640465 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106375647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928435024 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110930231 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865124934 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864978558 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941199246 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.698086143 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115501428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.102187845 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.105616993 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89753015 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.604155679 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.862410237 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.090555475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.081282134 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112805753 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10653154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.092861481 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.17228028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.862535619 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.863527729 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.144331024 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982018595 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.865744891 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20550758 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092969536 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.406895563 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.890732396 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165616567 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99113976 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.866316954 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.488623397 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.863848778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.084251509 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901629492 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.86447559 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864369711 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084712333 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834198847 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863639544 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.516731335 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.923896716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870834539 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095075508 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869445493 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125233358 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866379268 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092576486 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.32472613 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894351979 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.092339939 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.108966825 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.868184147 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108493157 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.100911491 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.979688836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08532466 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.567872135 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866974445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150625927 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869595058 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866428878 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034007303 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865877189 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006404853 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.867319375 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14874554 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886310333 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095778323 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868655757 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.121207407 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896605144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914898618 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.872925407 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992696165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86928136 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.694056198 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021805286 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869135059 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.865689389 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.652732993 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.868324423 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.013804796 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.087455341 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888171429 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935175054 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.532623279 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.865991491 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946965575 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888163712 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.255570306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.869697869 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.118031311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.871292847 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.866800365 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.867368805 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102478782 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.051036411 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870325856 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866845016 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.763408258 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.867858349 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868223357 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.046919814 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.23833419 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868224889 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067627638 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.869905776 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994684174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.872521751 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.937718947 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206016757 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868732826 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.868440245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.868730081 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.869070244 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871099087 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126887778 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.892056735 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.384202837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003288604 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132466351 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.176715688 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.1085074 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.909039236 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870662523 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.123170189 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.870978066 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.929689457 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.870224284 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888265217 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096154413 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870364701 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074649166 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.136367149 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713496309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915488571 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.87248889 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86969888 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.869950738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.005979294 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95135125 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.872837931 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.869311903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983446008 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989526997 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.079295329 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.871749776 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.954919951 seconds)
  done (took 901.829210841 seconds)
done (took 1221.001989086 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871106271 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875360656 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.872908629 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.87395017 seconds)
  done (took 29.296933985 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.872973341 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.872059561 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.871338394 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.871138568 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.87190385 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.872481078 seconds)
  done (took 13.036519236 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.942889885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875050307 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.874853099 seconds)
  done (took 21.496945668 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.955761578 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.284774701 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.013206263 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.301114718 seconds)
  done (took 10.359323833 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.871921441 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.87219081 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.871226816 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.874964924 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.873848005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.8742233 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.87337471 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.874294203 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.875969885 seconds)
  done (took 18.669129831 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.633603089 seconds)
done (took 99.295995646 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.608314684 seconds)
    (2/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.397752258 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.047730066 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.940141784 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.047412666 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.089121465 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.97664876 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.184797981 seconds)
    (9/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.091612641 seconds)
    (10/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.500563922 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.890093241 seconds)
    (12/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.871884004 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.957029625 seconds)
    (14/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963934581 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.024754185 seconds)
    (16/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.882240963 seconds)
    (17/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.167622561 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899753678 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.468634309 seconds)
    (20/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.366717292 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.132652006 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.87595373 seconds)
    (23/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.560999684 seconds)
    (24/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.361542153 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.065762178 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.881831012 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.631715664 seconds)
    (28/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019062061 seconds)
    (29/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.852733498 seconds)
    (30/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.075851008 seconds)
    (31/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.024352237 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.11061343 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.803645217 seconds)
    (34/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.981157625 seconds)
    (35/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.96157495 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.052539579 seconds)
    (37/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.107840084 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.705222883 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.337170021 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.191465525 seconds)
    (41/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.348894739 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134371636 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.348484541 seconds)
    (44/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.024769071 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 2.097017023 seconds)
    (46/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.297813235 seconds)
    (47/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.028709487 seconds)
    (48/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.878978751 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.040098181 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983169382 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.875654093 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 7.283766565 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.973850341 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.961514351 seconds)
    (55/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.975080671 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.126174295 seconds)
    (57/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.948015459 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.030251441 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.896884554 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953969511 seconds)
    (61/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.639336567 seconds)
    (62/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.081242784 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.894391521 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.874499467 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.881587372 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.959937463 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.970496061 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.307454155 seconds)
    (69/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.535918354 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.673355074 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.904632049 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.973498952 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.956835011 seconds)
    (74/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.876743244 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.971453739 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.188131487 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.187426354 seconds)
    (78/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.901575674 seconds)
    (79/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.124804062 seconds)
    (80/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.332415539 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.08285381 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.003743082 seconds)
    (83/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.398026263 seconds)
    (84/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.005866543 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.191556333 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.894125448 seconds)
    (87/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.266898177 seconds)
    (88/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939073944 seconds)
    (89/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.632366373 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.592702484 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.978650438 seconds)
    (92/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.191455788 seconds)
    (93/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.350084981 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.191238552 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.991627445 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.194094172 seconds)
    (97/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.291811791 seconds)
    (98/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.877594267 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.426221411 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.981055391 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.293893141 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.877698918 seconds)
    (103/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.282328813 seconds)
    (104/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.138658389 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130410958 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.062959718 seconds)
    (107/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.016379753 seconds)
    (108/309) benchmarking ("sort", Float64, false)...
    done (took 5.583527384 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.942585992 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.762877972 seconds)
    (111/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.886589553 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.908414125 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.880755107 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.586361137 seconds)
    (115/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.669194366 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.99336637 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.906357188 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880884221 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.261754566 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.188978325 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.986956845 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.905786354 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.131738482 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.01791011 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.013793011 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.422100718 seconds)
    (127/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.977527989 seconds)
    (128/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.009149095 seconds)
    (129/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.956899946 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.260573223 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.881841846 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.883281658 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 3.868746978 seconds)
    (134/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.666745955 seconds)
    (135/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.136581743 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.26582207 seconds)
    (137/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.912326181 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.880028188 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.669563897 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.14246153 seconds)
    (141/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.182896551 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.015560679 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.174589674 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.577821144 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.899346549 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.178231737 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.987167387 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.881135275 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230388381 seconds)
    (150/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.067834782 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.189384276 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.479921878 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.916622801 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.880191132 seconds)
    (155/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.918688329 seconds)
    (156/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.621150424 seconds)
    (157/309) benchmarking ("sort", Int8, false)...
    done (took 4.818146359 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.984557743 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.905273119 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.884938171 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.897343755 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.795579581 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.098816221 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.191190842 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.9640922 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.960411073 seconds)
    (167/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.240695914 seconds)
    (168/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.576428806 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.172154862 seconds)
    (170/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.582713585 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.127178789 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.883418158 seconds)
    (173/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.046765133 seconds)
    (174/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.27176908 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.883848706 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.886406854 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.239000012 seconds)
    (178/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.760798923 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.88957198 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.926524133 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.881892177 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.902448765 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.742502035 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23022021 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.10938887 seconds)
    (186/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.041267948 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.219706184 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.908240979 seconds)
    (189/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.034826163 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.340999376 seconds)
    (191/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.221139498 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186399324 seconds)
    (193/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.885222205 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.231974802 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541807646 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.191010736 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120020441 seconds)
    (198/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.947073145 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.95800831 seconds)
    (200/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.984036393 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.992553482 seconds)
    (202/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.098768166 seconds)
    (203/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.089606788 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.950358323 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.133170939 seconds)
    (206/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.088070665 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.643833364 seconds)
    (208/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.074975007 seconds)
    (209/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.372455944 seconds)
    (210/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116243165 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.012125167 seconds)
    (212/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.88855331 seconds)
    (213/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.014120505 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.600463026 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.193917662 seconds)
    (216/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.886520298 seconds)
    (217/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.959452038 seconds)
    (218/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.888663944 seconds)
    (219/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.632018589 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.886316696 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.743381571 seconds)
    (222/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.928893881 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907172269 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.897975663 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.888490183 seconds)
    (226/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.065853056 seconds)
    (227/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.983841858 seconds)
    (228/309) benchmarking ("sort", Float32, false)...
    done (took 5.554990819 seconds)
    (229/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.980797955 seconds)
    (230/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.897372752 seconds)
    (231/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.078280812 seconds)
    (232/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.227314079 seconds)
    (233/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.006612454 seconds)
    (234/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.134683853 seconds)
    (235/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.986959658 seconds)
    (236/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.886787985 seconds)
    (237/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.333242443 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.969600242 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.764710397 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.978723967 seconds)
    (241/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.913107108 seconds)
    (242/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.886718325 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.854924533 seconds)
    (244/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.924913877 seconds)
    (245/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.021642392 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.885769836 seconds)
    (247/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.075652611 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.020104185 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.902204723 seconds)
    (250/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.036069934 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.960997314 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.970461645 seconds)
    (253/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.88600398 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.090202599 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.010881109 seconds)
    (256/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.97938255 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.906057566 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.199910589 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.283517076 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.766046863 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.154345367 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.278423847 seconds)
    (263/309) benchmarking ("sort", BigInt, false)...
    done (took 6.887649596 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.835986129 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.009911953 seconds)
    (266/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.975725836 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.88726601 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.346052285 seconds)
    (269/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.018449821 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.255767178 seconds)
    (271/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.381695822 seconds)
    (272/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.188112577 seconds)
    (273/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.999778567 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.971172693 seconds)
    (275/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.148645415 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.225715409 seconds)
    (277/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.253201973 seconds)
    (278/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.355142102 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.038059371 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.899124234 seconds)
    (281/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.97362306 seconds)
    (282/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.047546304 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.001537754 seconds)
    (284/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.14761905 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.975373666 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.748398825 seconds)
    (287/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.299089468 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.915393685 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.066193428 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.885758945 seconds)
    (291/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.056910641 seconds)
    (292/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.890835675 seconds)
    (293/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.170489473 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.657639489 seconds)
    (295/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.315975394 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.893391945 seconds)
    (297/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.211865451 seconds)
    (298/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.291603727 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.921330166 seconds)
    (300/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.175819565 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.061696852 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.315693251 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.023586396 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.900796208 seconds)
    (305/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.888550912 seconds)
    (306/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.197238643 seconds)
    (307/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.063542142 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.106796965 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.998328052 seconds)
  done (took 1015.719254022 seconds)
done (took 1017.602376012 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.918327356 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910230918 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.894467171 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.917262202 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.005942896 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.938932577 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.90800587 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.898944918 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.945794068 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945540186 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.892466028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.934085858 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.895183184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.896025954 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.895959205 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910522702 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.197661359 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.919819141 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913208894 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.907645066 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.912235449 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.893445574 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945282251 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.93499048 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.900762208 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.900910302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.897592477 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.915404376 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.008968689 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.898896393 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.902686263 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.907327188 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198242429 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.921289903 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.895144844 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.915629123 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.909912524 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.908851852 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.901686102 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.929905633 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.333091242 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.90120048 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.898327424 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.898056735 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.897920047 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.903017883 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.896554851 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.905993529 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911758976 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912232565 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.330210858 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919569282 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.900296422 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.897675955 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911302986 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.897700039 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.902444333 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913317303 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.916831846 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914380618 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.18718524 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.930575363 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901585556 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.915992169 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.906389408 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364265275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.901357256 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.910514621 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33466091 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.909937109 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365752669 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.912490141 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.901688022 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.912887251 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.930479942 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.199607154 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922024185 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.898106369 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.908432783 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.89792863 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.912804979 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913885245 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.908344969 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.902691291 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91471657 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.941464665 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.913260394 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.89965698 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91120369 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.917997866 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.90795722 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.911618333 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.904304075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.898815356 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.913767804 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.903667291 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.902195272 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.901736091 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.909977077 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.912950464 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335471902 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920722111 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898653009 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.897848344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.900273685 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.914859767 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335795779 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.906131986 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924262966 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.950426489 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.902806485 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.189337174 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927003692 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921287031 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.912996392 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.904860328 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.899850387 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189007975 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357377594 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.920090274 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.902299025 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.898129605 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917258516 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903112005 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.898609913 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.203996309 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.928494423 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917709999 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029090919 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.915959026 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.934403302 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.900076572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.906736536 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.947117553 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918563439 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.934702404 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.905479379 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918417715 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.919966509 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.90001505 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.91370246 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.916023109 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.905156609 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.911026514 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.905681861 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.948040106 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916799202 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917306841 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924002007 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.025012435 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.901494948 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.191858464 seconds)
done (took 298.541518286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.980377262 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898100731 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.026355574 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90302472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.98528403 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.971328549 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.90022836 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.90061881 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.900411169 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.393932823 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.900452737 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.905682605 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.898390359 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.899754001 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.968231218 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.902579184 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902606941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.178600919 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.900236481 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.980268552 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.901229846 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.902598492 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.901475047 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.398614768 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.899773244 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.90123711 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.980205745 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.900249241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.196929201 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899873555 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.899516707 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.186295815 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980203252 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.918016936 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.911692025 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.906462768 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.98763181 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.910179879 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.967254318 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966968899 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.017928692 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935690572 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900024089 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.900219677 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.90484975 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.901315785 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.902707141 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.934602709 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.901635678 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.909323405 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.182841085 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.906732756 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.90744077 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.902994254 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.902526955 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.917274753 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.905579866 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904577595 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.982493426 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.903006852 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.968982683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.399514938 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.410035387 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90408611 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.901725551 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.903747556 seconds)
  done (took 186.759593815 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.96979505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.974217012 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.972307515 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.906665845 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.951885997 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.968734864 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.906502148 seconds)
  done (took 15.483835021 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.909373772 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.903757471 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.952930508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.954212534 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.904775907 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.09086997 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.916011743 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.909799139 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.93020971 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.906507517 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.617360186 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.952889673 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.911991734 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.904519635 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.916437509 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.961477027 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.906346289 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.904423936 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.013941689 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.053019142 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909931157 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.912738362 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.930525944 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.916264751 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.907049288 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906827116 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.90480153 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.913687033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905925321 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.906509399 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907540998 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.957097852 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905747484 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.904548469 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905774205 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.908025917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.905761009 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907246242 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.906338108 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.904243075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.906698829 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.906756732 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.905783285 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.905993907 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.90635853 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.928290457 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.905597261 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.906379131 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.907043588 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906850629 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.932921684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906205848 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.906204983 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.910864006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.950716853 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.912085835 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.907229249 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.906895507 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.90816714 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.906414448 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.907284036 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.054879186 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.956737161 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.907550257 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.956285557 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.088314429 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907613744 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.907782829 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.908317484 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.995025157 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.907976594 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.95601675 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.908790462 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.023509494 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.908976125 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.098433902 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.930830988 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.911349075 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.909608671 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.908088574 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.914560476 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.907848578 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.910536371 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.91530485 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913151075 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908617389 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.909548473 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.909438364 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.916170533 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.90801827 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.95877209 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.908844254 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.910369779 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.04276201 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.908383791 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.016813693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.935241666 seconds)
  done (took 209.667566977 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.91620035 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.915456314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.909550879 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924197345 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.910192736 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.910218898 seconds)
  done (took 13.325079868 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.910480404 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.912011933 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.909875366 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.911329269 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.908531238 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.909376041 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.910486414 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912182225 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.91285229 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.910218139 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.909893565 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.910162834 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.909910498 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.90974844 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.910251028 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.910539733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.911803316 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.911099709 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.91133072 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91037176 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.043781121 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.910296251 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910291416 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.916263203 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.91381989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.911321272 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.922325099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.910065426 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.910374443 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.918496886 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914058014 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.910294404 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.916350424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.916001745 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.916192158 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916430272 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914019839 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911512207 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911584369 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.910849228 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911452721 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.909965756 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.911288454 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911807925 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.912663777 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.918598145 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.914880581 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.924505368 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.912079066 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.913355709 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.913442874 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911532034 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.911650489 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.911749701 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.917736076 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917736595 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.9159958 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.913454608 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.911783279 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.917500935 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.915584716 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.911112607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.914558993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.915400243 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.919674349 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.914116487 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.917021311 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.914975906 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912776017 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.914340227 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.913837469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.913198129 seconds)
  done (took 140.721474429 seconds)
done (took 567.801024782 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.599706239 seconds)
  done (took 9.442536702 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.956477834 seconds)
  done (took 8.804491364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.602771627 seconds)
  done (took 10.447393241 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916015717 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944792717 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.927366552 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.919948184 seconds)
  done (took 29.559569034 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.208735704 seconds)
  done (took 9.049850402 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.924124835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.912483113 seconds)
  done (took 15.752094979 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.06679615 seconds)
  done (took 8.910347609 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.293795682 seconds)
  done (took 9.148457195 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.915951335 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.944386461 seconds)
  done (took 15.724986883 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.915234036 seconds)
  done (took 8.758036268 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.676505579 seconds)
  done (took 9.616368413 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.930902032 seconds)
  done (took 8.793310468 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912540454 seconds)
  done (took 8.75532417 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.162144019 seconds)
  done (took 10.005562395 seconds)
done (took 164.612882931 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.915837446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.911717192 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.915508804 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.917120494 seconds)
  done (took 29.50532523 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.950077392 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.949609477 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.95843537 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.948312503 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.938169354 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.939122439 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.949339379 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.94946704 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.939489983 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.946611806 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.94885037 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.948364837 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.948568916 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.958316176 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.957461375 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.947898 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.948413125 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.949818213 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.93958049 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.957700501 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.946024485 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.949510076 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.91429478 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.915119025 seconds)
  done (took 48.543581806 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.100284308 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.979430867 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.069413681 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.958975215 seconds)
  done (took 9.952489833 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.91464563 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.98311046 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.96855569 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.964718729 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.002965706 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.020555396 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.969373871 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.121574703 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.03374163 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.065613869 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.925281653 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.93875209 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.941272914 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.966137843 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.021228631 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.91751531 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.919105807 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.034111977 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.980521369 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.128842955 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.918745888 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.972729914 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.004642408 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.969440296 seconds)
  done (took 49.529877202 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91847543 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.927869824 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.926166373 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.920411292 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.92127695 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.920655398 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.928691428 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.921908953 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.944022896 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.922524957 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.920378339 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92113256 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.926434493 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.920633215 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.919228969 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.933333941 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.934036942 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.921152311 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.925026156 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.927271222 seconds)
  done (took 40.34881909 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.917190805 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.764912195 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.262589883 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.174081915 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.919033949 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.917629505 seconds)
  done (took 31.803303983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.932646226 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.926553304 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.919489294 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.975428908 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.053756792 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.928799223 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919471939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.93181864 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962607077 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.983265547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.938955059 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.946209 seconds)
  done (took 25.267618133 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.919979909 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.925102974 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.923283634 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.934691653 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.930699799 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.926941496 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.92749185 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.921368886 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.935644431 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.937484322 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.925763278 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.931543688 seconds)
  done (took 44.993483329 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.135178937 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.146148009 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.14368878 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.298071707 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.910178586 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.822893853 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.623678644 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.7017967 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.220808051 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.903853172 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.883343657 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.823820485 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.160680687 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921163981 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.184638101 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.855280184 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.922341792 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191951115 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.92290795 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.925179885 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.21323922 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.978396378 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.135041349 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968549056 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.13744631 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.19262007 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.162994871 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.180495112 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.261766236 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.981770979 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.004283977 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.963680596 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.929788431 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.93619813 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.926564407 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.935022712 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193256941 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.925851775 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.930298213 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.041278226 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.847400645 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.293512727 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.043954106 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.339492145 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.053791822 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.164236026 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.930358563 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.884447072 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.977778206 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.231450886 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.034335154 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.136424534 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.847505332 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.312894786 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052579097 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.92467142 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.92722338 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.623131573 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.162559409 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.003071418 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.303775056 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.04087057 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.924785948 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.01094157 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.92292138 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.037888328 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.11076188 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.927343497 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.922101066 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.930106722 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.021211651 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.136721446 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.924730704 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92469516 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.94017263 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.925881168 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.275878284 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.256925181 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.908652903 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.481701936 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.194219233 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.887968682 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.191046256 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.964183118 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.208547713 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.139462656 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.005228408 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.168249042 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.787082701 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.930192331 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.731438132 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.004658194 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988857168 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.925271948 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.886780293 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.270472965 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.045153966 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.926146103 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.850359264 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.93595204 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.126832364 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.188415588 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.980313878 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.92491501 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.926226163 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.929240317 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.926213719 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.942247259 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.937727175 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.8451131 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.22434495 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043008907 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.184860374 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.922556753 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.609500463 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.200754236 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.057527973 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.535544872 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.059999684 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.79369357 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06815522 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.934541449 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.929902991 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.114135073 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.337998624 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.889913738 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.165456642 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.016462595 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.958157413 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.932481884 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.007938195 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152995297 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.927029615 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.182762215 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.172787818 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.570889116 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.003602286 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.000687272 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.93608823 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.141473104 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.009627506 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.460751543 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154222386 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.284671609 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.916134989 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.524207722 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.263476869 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315556686 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.942965789 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.891121351 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.958340056 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.629982276 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.855023347 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.934711693 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.269221751 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.962916909 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.984338196 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.929661826 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.929694942 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937218444 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.009788989 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.003787369 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.003425536 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.856540586 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.931884394 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93520142 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.929371024 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.465821726 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.633879619 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.217881306 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.929253272 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.002833233 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.93297367 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.519279607 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.932611571 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.113290769 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.072857079 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.703648021 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.957235633 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.237235791 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.347171679 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052020071 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.92951501 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931773422 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.628945603 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.939878216 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.630473961 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.242977618 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.932746241 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.392225582 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.997508158 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.010920535 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.943811535 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.93228061 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.932327759 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.933387299 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.134411643 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.43871552 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.327437333 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.278156181 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.012198521 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.208185607 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.125939441 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.201121623 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.619378218 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.457141691 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.157435319 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.93135812 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933028431 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.392600379 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.938594789 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.146602444 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.13388612 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.211212085 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.236382317 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.350625459 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.936023982 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.947135192 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.174097812 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.931660655 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.363946095 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.019285436 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.343051208 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.746517877 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.201224701 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.001142769 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.94341413 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.588428617 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072445862 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.892365284 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.060220928 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.858252914 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.687726723 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224708094 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.215233908 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.916637039 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.275725734 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.232836785 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.244467019 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.568795782 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.818180858 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.986115071 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.01514909 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.934484587 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.254447018 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.971675617 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.990968765 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.939460793 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932436095 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.939607833 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.612556945 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.011441716 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.06592634 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.705626067 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.222164896 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.840978271 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.210596277 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.993931015 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.39330471 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981338584 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.149788911 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.939882713 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.270420164 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979792626 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.213485052 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.892386887 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.147836197 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.144713142 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.953897324 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.939852246 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.861614632 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.800702701 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.938522254 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.901325128 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.815645831 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.937633631 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.231420077 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.324077125 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968058525 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937301426 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.332904023 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.405711719 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.117259863 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.943494021 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.14919165 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.064166524 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.855124445 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.421361815 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.519679956 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.637099565 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.951226429 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.14055253 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.326880093 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.012920599 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.972331768 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.014773906 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.20973363 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.919048505 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.936937005 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.461158972 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.034516375 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.176519812 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.264705591 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.243266725 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.385351707 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.181104368 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.923940684 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.163969981 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.312078225 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.181713369 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.86995491 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.029775247 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.152343652 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.222957877 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.819969586 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648045921 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.178965203 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.945098338 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.864793781 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.147343634 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.439734485 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.301363035 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.480537302 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.907352519 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.964482714 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.421829437 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.954073387 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.877004874 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.939262732 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.886986851 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.152347613 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.904551315 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.976000554 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494996553 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.267551451 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.347563119 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.960498632 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.975483905 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.864400976 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.711265196 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.88920241 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.026389338 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.982552862 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.011745347 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.943139418 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.14211096 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.378329929 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.996197699 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.479153311 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.149454765 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243410056 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.215921411 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.256687352 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.900657836 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211799677 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.888668364 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.284469479 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.023543644 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017512397 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.939849299 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.944583538 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211422 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.326057457 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.325765303 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.974118202 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.325196329 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.048622913 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.942698568 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.946900341 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.217443036 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.175050783 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.156038398 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.018977392 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.144098893 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.014020684 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.454958979 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.945350664 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.945418953 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.077327578 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.824698957 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.743867177 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.240840034 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.690363827 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.144096614 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.461257507 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.810021456 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.910495499 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984703922 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.943403711 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.949399056 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.06156678 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.18388299 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.216963244 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.704879365 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.947791204 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.94316839 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.830743509 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.647284915 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.177914969 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.962583529 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.962785627 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.94667054 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.059549499 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945523149 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.21469202 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.997752314 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944332801 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.943873689 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.155569371 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.457100593 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.959420206 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.641665134 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.145609977 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.946618436 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426705047 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.40349978 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.985651984 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.983244769 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.91041345 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.194944991 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.467786012 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.918039542 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.939692564 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.170781449 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.946493463 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214618414 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219276215 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.94490866 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.160191074 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.213997511 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230276906 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.954665556 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.831812806 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.947953657 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.215589615 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.99808078 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.943995404 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.953546705 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.943932676 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.64155175 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.435220462 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.106802182 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.323783899 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.817179026 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701208424 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.946917812 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.947078389 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.69246396 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.679840317 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.157996819 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.230107463 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.891977478 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.14899381 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.649406672 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.823170051 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.216373631 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.873401488 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.948608561 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.24454548 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.216203567 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.881333115 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.950993143 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.502919542 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.945256889 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.030679399 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.946983289 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.072761063 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.217486908 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.360127288 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.065518814 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.585561567 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.696165991 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.886154679 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999763099 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.755235643 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.505679767 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.640497444 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969168709 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96348966 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.872843666 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.949215639 seconds)
  done (took 1664.761801505 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.023121351 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.024466904 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.989146821 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.077021684 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.053758028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.100253406 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.047173221 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.965388382 seconds)
  done (took 58.156821076 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.946220984 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.962176981 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951845972 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.947990925 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.977450461 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.948225467 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.106154554 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.954539574 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.950654156 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.951725621 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.950185235 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.947844275 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.22576054 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.962962704 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.947420968 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.955541137 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950869631 seconds)
  done (took 75.545984636 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.949986252 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.149291202 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.998210282 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.948137156 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.892831756 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.950698673 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.877903344 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.994388841 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.952078615 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.172072991 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.240926611 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.952310633 seconds)
  done (took 90.958218198 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.954663584 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.949028651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.950004698 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.948478867 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.949762898 seconds)
  done (took 11.632447356 seconds)
done (took 2182.875880057 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.21058579 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.003732429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.045731278 seconds)
  done (took 5.927081463 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.095602688 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.144623807 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.253405784 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.015504868 seconds)
  done (took 10.392350656 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.204652237 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.336607525 seconds)
  done (took 6.419125621 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.300382156 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.965156655 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.309619734 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.951248211 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.957864908 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.955810828 seconds)
  done (took 22.748432159 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.950108889 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.950880244 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.951758955 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.951758717 seconds)
  done (took 9.683582105 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.948718928 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.675953899 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.953664977 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.96280618 seconds)
  done (took 21.420366751 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.090947969 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.061957151 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.088431678 seconds)
  done (took 8.120280203 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.170917598 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.168060272 seconds)
  done (took 7.217945273 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.094108811 seconds)
  done (took 3.973351748 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.979194798 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.221645707 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.446081806 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.911445464 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.609993325 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.034412695 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.336876985 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.217076167 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.408058835 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.42201633 seconds)
  done (took 26.467985966 seconds)
done (took 138.034981999 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.503172111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.998020847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.16616107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.381658255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.199757194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.165554867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.181826699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.377782924 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.041230565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.017036854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.359293974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.204234055 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.124468125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.991047442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.133884889 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988145503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.195729651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.373331524 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.030326444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.287092913 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.190941656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.007735954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.223168503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.007583985 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.196054594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.118066219 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.55086424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991850999 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.178559231 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.550401796 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.120024445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.435720992 seconds)
  done (took 172.185202029 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.970087145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.96715049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.96825242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.967953494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.264736626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967409084 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.966446067 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.972178629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.194885786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.181751935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.967765449 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.26263817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.9695354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.967914336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971202564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972856771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.338423014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.968207151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.970487516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.967378423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.970643407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111992051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.96766292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.109044137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.318823863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.969587439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9689919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972484309 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.970224757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.969336823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96987348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.968605695 seconds)
  done (took 210.941604799 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.969513701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.969383919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.968558503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.969198166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.969765872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.970947431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971254365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.969241495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.712148241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.698868618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.967474398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.970081343 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971011748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.96959982 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971429743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970062597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.969326791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.971014316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.96968994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.969547219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.971781231 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.720384358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.96953974 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.731984208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.96948445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.971172383 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.971235798 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970882769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.969448104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.970757494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.972775935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.969667928 seconds)
  done (took 223.925519989 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.217080493 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.971111119 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.973311546 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.026102343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.971996718 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.970937981 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.961054955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.220468555 seconds)
  done (took 20.212121086 seconds)
done (took 629.174933617 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.327681751 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.691806019 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.115290576 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.997134012 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.240253244 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.040978826 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.991642349 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.057222678 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.92274751 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.068976435 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.398743559 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.999539522 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.758831891 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.020401753 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.114764755 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.050684603 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.350759031 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.689419256 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134660277 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.640781198 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.156068241 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.94005291 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.07951813 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.963122672 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.41964856 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.031316877 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.051574725 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.359570004 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.995205619 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.153555658 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.665046881 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.272624884 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.007175185 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.992615123 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.051216825 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.024440115 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.212593772 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.003562208 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.117640904 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.737852935 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.661089642 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.821302575 seconds)
  done (took 105.230247361 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.982843011 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.978948025 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.979947173 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.979466142 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.989455727 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.981247243 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.980535354 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.980676301 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.980045664 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.979719829 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.980304038 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.990267458 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.980283863 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.989230351 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.980741628 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.980620429 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.981164905 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.989934369 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.980737534 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.980900013 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.981814458 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.979997431 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.976022057 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.980742191 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.981077894 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.979987725 seconds)
  done (took 53.444189642 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.976086719 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.167897464 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.221344964 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996797238 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.977253016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.979691792 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.00643558 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.984494938 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.979248088 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.978956667 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.093237745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.982682264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.989596301 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.222509345 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.994536899 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.976986018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.977247861 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.977506431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.178044179 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993826134 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.008967514 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.98320142 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.007481732 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.994607635 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.980807327 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.97875417 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.980972697 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.450193265 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.990115612 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.09477529 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.048227868 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.012220692 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.324664678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.236859422 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.033255039 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.987437196 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.979019201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103243644 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.98453161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.978685908 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.006908084 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.985730003 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.222966425 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.513288582 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.993578616 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.97824688 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.449153927 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.113523926 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.019996247 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.991072762 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.232136505 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.99698898 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.978488101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.979805556 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.015829915 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991038807 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.978785204 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.268674404 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.995321539 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.007196954 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.987861507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.979845258 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.188464586 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.987757422 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.171206601 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.988344086 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.986900295 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.980361507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.223625407 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.997174541 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.527754915 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.994838927 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.980306641 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.097311054 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.175460231 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.476953202 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.994838208 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.187341978 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.340283048 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.01653652 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.993460984 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.433713626 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.021574837 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.991242935 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.981430148 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.980964882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.979871841 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.025503461 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.006993014 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.434352837 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.525104343 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.287398844 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.022112116 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.994157312 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.981717374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272717102 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.992771607 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.980327483 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.216710171 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.537259247 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.997190332 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.988011865 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.505181621 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.998038892 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.009845258 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.994669188 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.238471491 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.998492961 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.027564572 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.984069666 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.988668227 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.984028645 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.011654552 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.992413368 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.98192577 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.497529374 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.11970527 seconds)
  done (took 245.700638635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.982623254 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.981641613 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.980491158 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.981950097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.980556801 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.982575857 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.98109764 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.980747404 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.981654133 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.980484163 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.980998358 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.982647918 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.983274226 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.981277199 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.021300305 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.983384178 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.473214356 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.982967142 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.983641863 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.984396619 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.545248824 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.985899033 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.98125658 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.983319401 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.980274254 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.982531449 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.986926919 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.01972503 seconds)
  done (took 170.548857062 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.983180609 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038343717 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.998249544 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.029964266 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.000085387 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.984672158 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.07991873 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.001270943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.990199598 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.984456604 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.986570326 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.016487971 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.992253951 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.080766103 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.014325811 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.090578823 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.086520738 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.991742844 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.984668078 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.985326613 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.033019798 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.003477274 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.016128403 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.047450641 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.003123449 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043849757 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.001197124 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.988108735 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.984838045 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.098109769 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.003556645 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.016990853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.021118572 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.006292084 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.102614357 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.100875844 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.088669055 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.089728007 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.992193092 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.987477797 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.990754173 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.987256541 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042446514 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.999549249 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.986484308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.101189716 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.004741222 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.986894236 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.98656879 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.987109845 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.999533107 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.005328391 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.022907265 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.113260533 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.032696952 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.014597243 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.083921152 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.105505198 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.987644148 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.084022485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.993993932 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.101195733 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.005294305 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.987318846 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.990705266 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.992308691 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.03752988 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.100039405 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.091282772 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.994560429 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.084833325 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.042307771 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.001535262 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.989252839 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.988997054 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.043966087 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098112267 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.044270121 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.048984497 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.029319632 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.998007145 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.987076153 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.989194433 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.016016578 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.997951804 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.103356175 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.103227938 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.998029285 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.98976419 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.989793626 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.989210704 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.013589697 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052187982 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.033291109 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.099743524 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.025240132 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030108613 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.000739948 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.002779945 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.995609024 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.023551981 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.000037304 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.001477259 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.270550586 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.020605695 seconds)
  done (took 214.785400697 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.356669929 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.034522394 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.063482211 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.271949302 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.35708089 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.896482001 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.029544053 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.041255244 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.059601777 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.167094784 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.111419485 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.086852247 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.031580653 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.010943575 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.032327329 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.061996457 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.064230569 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.350076804 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.237760881 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.495626061 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.028861275 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.336252683 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.384522587 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.426116092 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.089525347 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.44034698 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.648092489 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.138818961 seconds)
  done (took 66.174709072 seconds)
done (took 857.784113586 seconds)
SAVING RESULT...
DONE!
