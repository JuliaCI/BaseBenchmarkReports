cset: moving following pidspec: 24605
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.236019553 seconds)
loading group "string"... done (took 0.460539647 seconds)
loading group "linalg"... done (took 7.597332822 seconds)
loading group "parallel"... done (took 0.170830249 seconds)
loading group "find"... done (took 1.151852433 seconds)
loading group "tuple"... done (took 2.086905976 seconds)
loading group "dates"... done (took 1.338850468 seconds)
loading group "micro"... done (took 0.247689603 seconds)
loading group "io"... done (took 0.650561112 seconds)
loading group "scalar"... done (took 41.716641378 seconds)
loading group "sparse"... done (took 12.501664335 seconds)
loading group "broadcast"... done (took 1.112792084 seconds)
loading group "union"... done (took 13.63423798 seconds)
loading group "simd"... done (took 4.759378361 seconds)
loading group "random"... done (took 9.606059477 seconds)
loading group "problem"... done (took 1.971452509 seconds)
loading group "array"... done (took 22.439506807 seconds)
loading group "misc"... done (took 1.437259631 seconds)
loading group "sort"... done (took 3.580029442 seconds)
loading group "collection"... done (took 19.354253074 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513293511 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.137569628 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132152885 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146524684 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202350439 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142810664 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155289042 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11442604 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.981170315 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187217913 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154069176 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510027826 seconds)
done (took 5.123571478 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.236271597 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093666212 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102660575 seconds)
  done (took 0.869229107 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078114884 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144944262 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094047566 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077547542 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094500781 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07689167 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093997523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076864742 seconds)
  done (took 1.339662871 seconds)
done (took 3.21083902 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728844966 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.277401225 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20232228 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459920449 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196346826 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213916025 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672052489 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338396814 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255654477 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099657676 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143353944 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387155922 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136129386 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671357179 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088941409 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123439847 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176191496 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448104549 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082306812 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109748127 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116025747 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140094725 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129032136 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09000304 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186637034 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081573422 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194221346 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10724725 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08114606 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287731625 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200437514 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675700135 seconds)
  done (took 10.818049204 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110882624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132918929 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096626381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137964145 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133014243 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099627108 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083807729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096308991 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120911651 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174757602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113371833 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135352123 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094916739 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081749625 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114413987 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243859028 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121369862 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105339944 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099952169 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103990058 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121919304 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112104298 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107290386 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0924558 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166326275 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219860454 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112704716 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126775637 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099055595 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114138396 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144376472 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141839743 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09361343 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080113664 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171749584 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123326164 seconds)
  done (took 5.123557467 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185720678 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11924103 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168016535 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163097891 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139525192 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159675092 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112627476 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24520616 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.104769124 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164500158 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142166764 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115553627 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080341533 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098019512 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09495425 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.63243098 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.162769753 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13443165 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113666712 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102434829 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083775354 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364132297 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101893374 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079775337 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097784676 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064915079 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157978062 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098410164 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138198335 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119834591 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085462029 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134588228 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205018875 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109144438 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133808459 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095043995 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079179537 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177911615 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105000568 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080345217 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121898287 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132867433 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134203783 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096059914 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080468796 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202500541 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.13620907 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097844806 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114403305 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07744561 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.926479288 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180774557 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09049337 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097049728 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321455178 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100158106 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097954499 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077024483 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.241464638 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185925936 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098396476 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079825786 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097104799 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080712092 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400486558 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086578525 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.677850075 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083626412 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106555042 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082628123 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096365191 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102647688 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087188895 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114561026 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077549629 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096466334 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080488282 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098165561 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078172165 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09955558 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106569289 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085515201 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097030822 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147976037 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095068224 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09947485 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129627997 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101451144 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079025724 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130567704 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098322905 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080138041 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133004886 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097253142 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09081785 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099639454 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143312797 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098583177 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.141300826 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09510393 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126559074 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100397173 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11377017 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115148585 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099401402 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084431043 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095968724 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077398332 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164232941 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.080304223 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096706662 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080995387 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098328382 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109253246 seconds)
  done (took 22.419564338 seconds)
done (took 39.041719657 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325236192 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101229237 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102143178 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100538566 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099852227 seconds)
  done (took 1.478724303 seconds)
done (took 2.202840559 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288791349 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170974694 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094195546 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164924159 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092879351 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172919728 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158482773 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111528588 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218021212 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076598219 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162424592 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094112533 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076994962 seconds)
  done (took 2.633066341 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094814087 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113597534 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082416093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110479932 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076419405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111443447 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091741034 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116408275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108317817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084721344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093481284 seconds)
  done (took 1.808103686 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093858696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112370063 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081183403 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109329534 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076067976 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109182277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092312288 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114701192 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108464939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084880058 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092586385 seconds)
  done (took 1.798222479 seconds)
done (took 6.953802657 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091260803 seconds)
  done (took 0.811137916 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.922803506 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.872991355 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113282316 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151014959 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297194012 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19251328 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474132099 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127719525 seconds)
  done (took 11.083877984 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.144617714 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0848257 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10352103 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085647806 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100040673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082409716 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098116093 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099180339 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084252971 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099465033 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085183071 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101980866 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100306761 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083607384 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099071564 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085219384 seconds)
  done (took 2.324131907 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118517986 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119034178 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105068411 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107934226 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086321515 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105028566 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105545013 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08874482 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10165429 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10427702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09137672 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107050108 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105394408 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080614216 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107633673 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109624711 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086999344 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107061225 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109352392 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091998868 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108030351 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097486077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088537164 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107902989 seconds)
  done (took 3.270921368 seconds)
done (took 18.215325404 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159073655 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108412606 seconds)
  done (took 0.994739311 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093937991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111261758 seconds)
  done (took 0.938055673 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096287067 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094908242 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1214557 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108690182 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079894409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096011797 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120034419 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079866516 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095491428 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079555531 seconds)
  done (took 1.708959893 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081620248 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109508231 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10077337 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094184733 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104444345 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093911956 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087408609 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100464624 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111734201 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077641889 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104028611 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116491916 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085427928 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117045441 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10473109 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083815377 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103679283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099593942 seconds)
  done (took 2.511683898 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078869684 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09720031 seconds)
  done (took 0.913069066 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08018589 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094009921 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080979279 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096549923 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094443741 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076235642 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093741126 seconds)
  done (took 1.351478241 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471232023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135591734 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251234135 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085441957 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119479321 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30189422 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097369793 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084023876 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10137482 seconds)
  done (took 2.44004479 seconds)
done (took 11.590980499 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092892387 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117072897 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111872341 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469519857 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106700895 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096917035 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159510375 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255222046 seconds)
done (took 2.14976149 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150067978 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32467542 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113075139 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066974702 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093953178 seconds)
  done (took 1.341233562 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079355731 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09974429 seconds)
  done (took 0.919158213 seconds)
done (took 3.153837456 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079757513 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131137195 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080153815 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095699827 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078656208 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097898435 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077647408 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095545004 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079922683 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096216006 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095894421 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080149579 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096112848 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076485375 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094567467 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079524704 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096389016 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077548692 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093555418 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077018185 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096955514 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077189362 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094351067 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077308373 seconds)
  done (took 2.900536252 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09908763 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097560373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10244434 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085407556 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10120713 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085526162 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102358614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097051699 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086496387 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098718641 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100972745 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083310957 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099304662 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083915942 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098089021 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10016028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085647691 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097805639 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082754086 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10075024 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102253156 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080265643 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100411467 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101582891 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08259947 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100069591 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08211405 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096352152 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101262205 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083856243 seconds)
  done (took 3.563889525 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084790061 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093200019 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077866127 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101243167 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077438264 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096715391 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077427884 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095509808 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078601931 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094474704 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079305311 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094985186 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077709921 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095636989 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080308265 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098119258 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107541437 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077421575 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094789676 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078570482 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098202567 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077001476 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095395118 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077209102 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094611119 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077984548 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09474399 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077928624 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095174515 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077618723 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097778022 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081273781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094249317 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084004985 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098165898 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077845985 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099291011 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094441648 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078396559 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094123031 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076763663 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094538015 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077294432 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101474956 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078025635 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09635569 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078120958 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097086937 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078265179 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099379058 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078707475 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094437272 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079194887 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096208909 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097758618 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077441597 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094837893 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077689151 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095905712 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077693488 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093369193 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076586166 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096903231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078289448 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110442642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084539422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09402055 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079299191 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095778343 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080413529 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097553997 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10934722 seconds)
  done (took 7.119179246 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082832975 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105416856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079264757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097483244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075818544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095786885 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098682175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077869102 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096380992 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084176487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0946821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080091438 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096270664 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108609083 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078960256 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09780565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084744178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092481949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078947034 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098890726 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079035594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09802568 seconds)
  done (took 2.732580769 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20827317 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10309056 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140793828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107002675 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082269522 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106030591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102333994 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086472815 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101487318 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083407238 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099334381 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101625 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081582702 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099790413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099834924 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084493969 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102171064 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084393289 seconds)
  done (took 2.628641218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09423212 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098168624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102225451 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097710375 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09863748 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083067571 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103867076 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107929914 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08310337 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097624777 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089789294 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100621614 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100597095 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080155752 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100582959 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081168737 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101232321 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081434304 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106807218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103715328 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102851388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089649923 seconds)
  done (took 2.861068918 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096002161 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100162903 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115924005 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083097731 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094973664 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078830891 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10570338 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081232477 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105540125 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100094362 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081069341 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096020143 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087315423 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097212314 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10282702 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082033072 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099799427 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081020294 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099615197 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077046854 seconds)
  done (took 2.624506035 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102947781 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099552828 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099166345 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091243695 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09971829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081913638 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109317921 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100281869 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081962799 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124083659 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099420724 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081906708 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108158046 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105484093 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100013959 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092178447 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10795011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109127134 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08320942 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100101059 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124536682 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08221716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107155491 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.20932237 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082687679 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100024783 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099680073 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088078528 seconds)
  done (took 3.632589436 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081202919 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098767233 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077960027 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097004639 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078333642 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096911718 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078862063 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095805788 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081616139 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096477824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081651184 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098925218 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081076012 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098502107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080453114 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097801576 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082623897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095622752 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078794055 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095724364 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081750709 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098232483 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081352657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095389923 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078402803 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097989362 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078348993 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096257953 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081808025 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09533722 seconds)
  done (took 3.422657207 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090385473 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106317517 seconds)
  done (took 0.960823135 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078320645 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114266282 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078847077 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101579255 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086229289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099819144 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106960916 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086971139 seconds)
  done (took 1.515091819 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096019523 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109100005 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083033961 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110930288 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109241229 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094071118 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159000356 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100775441 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087539542 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096210797 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112009957 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07985477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105230438 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0813965 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104710349 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08741335 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096659247 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086736736 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101803018 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097582579 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082947831 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111201889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084856386 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095332956 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082906781 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110394446 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108144513 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082336265 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102174644 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107754866 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086912798 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093903361 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08237763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100050095 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079801091 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107697305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112083855 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084705116 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108121071 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083081009 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11007149 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09403603 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08630213 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105147248 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092796918 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100316379 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084655214 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096603684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100092208 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08543564 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095131153 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08156918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094323288 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08942164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10306084 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111885781 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080612633 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100109079 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084834766 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.1018735 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087483426 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101171709 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083709344 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097788339 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107252671 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086000769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105978372 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077898824 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093721695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080119333 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11101819 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126779608 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09154249 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100812045 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082919163 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09743154 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103764328 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083463334 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107494886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089924667 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099807935 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106390314 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089440275 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099422826 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084327151 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106536662 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098963 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085135458 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099693172 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099742095 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101710203 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082859044 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100294867 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111389186 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087642124 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100335062 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081830156 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108577439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081650001 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103324516 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086280514 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10350425 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111242156 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09058882 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108313991 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110330853 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091151471 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10209374 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085890203 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09731987 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083936126 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103615259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107399787 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075185965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102981751 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08347831 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100374804 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088894687 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09699226 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082542603 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106817786 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107238797 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081138695 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096310593 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084398176 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099328626 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085738447 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106569684 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099015296 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077480323 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095378927 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086105127 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099685776 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085932091 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106442841 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103409074 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077877634 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100380894 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088891748 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110156446 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102394228 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085469971 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107869686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084960763 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101456694 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089761424 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104339485 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083348721 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106153468 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103940731 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080114311 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106473825 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087157192 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101145864 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088179681 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106789794 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106613064 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085299399 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102255244 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091198916 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103112226 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083198362 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101900953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101287798 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092883943 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103437969 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079803945 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100492239 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.092382827 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100457419 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084710109 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10286132 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105266903 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085586505 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.1008446 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083830397 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104449361 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114155776 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089033795 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105041997 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09060251 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113232231 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083525547 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105717734 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102933723 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085776143 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103752378 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091912515 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108936962 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108985956 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087556956 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099219582 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091242325 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111117469 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083972653 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100820707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083653311 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106666357 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109595588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088499875 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104633368 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082873969 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103467302 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107427518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088166757 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103752237 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08355439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.108456178 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084522386 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110879177 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104340521 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094309219 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106904849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079669499 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107790152 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101941479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091051224 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09903788 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082462864 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102480195 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086184589 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102786348 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087416965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097795774 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091785319 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113000386 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10308712 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083995482 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10442767 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094430672 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105373316 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088567119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106992636 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108314317 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098358033 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103063833 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088704078 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112440674 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103697076 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07916868 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109337981 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083514278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102530182 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083627781 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102200836 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089235089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113546365 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108084748 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079127056 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106045677 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084054826 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101800086 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080769654 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110923198 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107107701 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086559514 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113425298 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086250227 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105181333 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107830116 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084533221 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105117099 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086481862 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106980739 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085707079 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10651303 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084223021 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106507961 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103304292 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083581526 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105779519 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085889289 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103145122 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091187296 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105368405 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085208036 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.1064233 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105483217 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086174325 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10548351 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085125868 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1068893 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083485114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101783503 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085806749 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095784634 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108241568 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083393975 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109064426 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082939602 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096934391 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087330256 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105169847 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106080314 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084132457 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10225672 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083712378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101095091 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08571198 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109493715 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098978206 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09189033 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106815046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084195453 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10470555 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082053514 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103454881 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099868995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084060588 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102144147 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083076883 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101047552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087321149 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103671564 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082727197 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105001195 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104518465 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084570287 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104794509 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079816859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103846808 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085492966 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104003657 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092451911 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10541108 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105033404 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082726513 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103629809 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082957245 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099566682 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09104469 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113522615 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103085577 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092642286 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102527837 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086591681 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114782794 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098179288 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084395144 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103096115 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083290285 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112994283 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086899914 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113370445 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103905987 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085352732 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101398159 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086828338 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100460457 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077024832 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100099878 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085825047 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104457822 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081811378 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102095061 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085606782 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106283175 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111959097 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085481901 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106300863 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085721679 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101717602 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083882698 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103505502 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107634018 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087556546 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102287296 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082957821 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104376061 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088026701 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114577968 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085442195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107676429 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09247014 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104653857 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108109658 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090326862 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099319267 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088754026 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104543939 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084887018 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103922037 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108958992 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088341806 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103027621 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090470108 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101550542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083278244 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101929439 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.09974967 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083709003 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10195429 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083466577 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101617519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084818952 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110978888 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080784067 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103642295 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101727356 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083813577 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106329543 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084127301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103527558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10966066 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086801891 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103449284 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089848282 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105581825 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086730926 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1027824 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103945586 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088910485 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099999463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09156335 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101986859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084478209 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102688354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081118987 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101955759 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100810536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08235239 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10719592 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084223866 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101515653 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082148951 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09978828 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084773514 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106251426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110538241 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088291726 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107587472 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081187964 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.102450117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087785976 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102773194 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087450459 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109187266 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111780095 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088372454 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105917099 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085657946 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11392259 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111687309 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091078901 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101250933 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090498087 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103246084 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085828489 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103214073 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083171664 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103585599 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109044498 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085486306 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101603448 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091868577 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105776573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084402816 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104053681 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102690443 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083339025 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098086968 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083644738 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103836727 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090179392 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103934416 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101757019 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092736844 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10183753 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083251868 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106643089 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083372383 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107998112 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097213357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085190128 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104011295 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086623548 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098554887 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08229285 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102808057 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088057535 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101653525 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078926734 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112750853 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110339836 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086890589 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101705885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082034224 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098496237 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079073428 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101568564 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084783323 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10428647 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111757697 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082537261 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101251415 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079141598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104700089 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086341429 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106167605 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080605482 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097729897 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100468234 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085406163 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109316755 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082462022 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101944439 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08763062 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104068431 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080498419 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106805532 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099225762 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087210126 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113076073 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084356019 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102875433 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107232156 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09229489 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102956105 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078738191 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103348374 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0862232 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103004373 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104587509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084855905 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1164633 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086327497 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10146123 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081980668 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104505596 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101169272 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089842463 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104067834 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084138689 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106798946 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084954882 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111988337 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105177029 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089793985 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104426169 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085845961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101414075 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102666186 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081259363 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100194053 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084495851 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103786503 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088689936 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11030441 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101273261 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093400068 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110570996 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088812308 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099151348 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083395277 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101664005 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078264204 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104810108 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100648423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081658389 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100604046 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082989179 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102643297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089070978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104717505 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085424618 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102523788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096194257 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085272717 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105323697 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085314965 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099053889 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085705491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103468647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.0898664 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109061819 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103392481 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085407802 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104541325 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085121939 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098290593 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090420502 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101393911 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086429627 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102731084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084036774 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10417436 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105769327 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089921438 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104659718 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085667024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115510663 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104689275 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081457356 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100203484 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089448045 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101589883 seconds)
  done (took 58.227567107 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145816459 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080554667 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098063457 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079410391 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112900837 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09958024 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079094572 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099666624 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08006071 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101913316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079832217 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097780529 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107770426 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124780951 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093175217 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103623163 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09769847 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080304933 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097526198 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080162294 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107912141 seconds)
  done (took 2.861186709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104860772 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11604995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114501839 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119047892 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089460487 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115413407 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113333472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113599092 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098658748 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110683084 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11853665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114381344 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091173161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109744444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109970432 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093245325 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117852252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108872719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116566712 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09492693 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111929778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113058918 seconds)
  done (took 3.209661671 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083767472 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101734248 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08453366 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097306378 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083867017 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096875818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087094837 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100248865 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086246132 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102189703 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0825392 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101792176 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103034706 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078772487 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101532267 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081298961 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151182812 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106256246 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083100631 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105048972 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097413554 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085853577 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098151971 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079421889 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101230254 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087205047 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102956624 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081647216 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103144922 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082455648 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102983926 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080706119 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104896542 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102492516 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082075268 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101326896 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083775032 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102382437 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079011026 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100749837 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083876003 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098458304 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082859474 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104282918 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081101593 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100906691 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083539608 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102888675 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097863163 seconds)
  done (took 5.430239533 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105215281 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160824166 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08507827 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141448911 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121087513 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112119672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088015718 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141672883 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102831081 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083261781 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122423219 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119767228 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103352041 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089460091 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110957089 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103062672 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086129811 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101412964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107797333 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083956562 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109680015 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089539417 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119027231 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116957845 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108208256 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083208306 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103610175 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107723536 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097335756 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109412104 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108754652 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091095409 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121710874 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108191648 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102822536 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086871472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122231729 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103383002 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087660505 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101317258 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086104012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108790335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110287686 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120965598 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084437741 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108989331 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084806215 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101409583 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116837086 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088056142 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112998192 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119547632 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108499077 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084846775 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108798517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121252805 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08442692 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101732331 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107219183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097971235 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101010814 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108595567 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099302205 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106288774 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112744957 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099407322 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109955646 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109523095 seconds)
  done (took 8.109714579 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093147852 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11035975 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120905345 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120054531 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092091292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110826247 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109976924 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090829624 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11041256 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116575913 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110448125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13401116 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086273248 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114094607 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111127553 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091483582 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110574408 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110707099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090989211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112317541 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11203991 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120103043 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091787324 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119921974 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142351652 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.1049895 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092246201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111330425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121353502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111503112 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122427096 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090873193 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11093643 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120704518 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12354516 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090413566 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103557428 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11050912 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0912234 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111411331 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105340245 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120372266 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090675248 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106267689 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11109381 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091695772 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119854907 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124425912 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114428416 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096682817 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111415128 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121859431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110042965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091636904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120008528 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147296951 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12049646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120924898 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111326229 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119450669 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100958317 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128872436 seconds)
  done (took 7.661129664 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107546284 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115696419 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117723763 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100206452 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08307208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10945199 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083130499 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10238102 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114007414 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095064785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11673595 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109063382 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1114329 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098134435 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108931267 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11196712 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088888764 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108780174 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114467845 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108055877 seconds)
  done (took 2.933538345 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093282171 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123724292 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085052386 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112886461 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10753975 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091143053 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106974299 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107973102 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086296983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108147924 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095815779 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116470395 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104890038 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09112713 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115440188 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111399219 seconds)
  done (took 2.487719106 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095532163 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117221044 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120633317 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084607851 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104092573 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101213254 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084458749 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100615894 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081271012 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120531056 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084623478 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109251274 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104699773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083515976 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100957425 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087682638 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101745229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082563724 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104842601 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121973371 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095914286 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104341432 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105505445 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086353436 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10444851 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089145105 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10570246 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102252922 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083374022 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105984116 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085186447 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11303594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101111211 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083327344 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103433208 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082476864 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104498537 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085306933 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108003387 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104452037 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083497387 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104273334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084977985 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106632599 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080738073 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106419792 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100829924 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092086809 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103498805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085188275 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105011989 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107122376 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085792651 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115927872 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088781159 seconds)
  done (took 6.229763718 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099949921 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109020972 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08004778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104019728 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08795954 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107905333 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108262778 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088614126 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106898894 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082690653 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106927623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089383665 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107792599 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109015188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087140832 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109432901 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081927087 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106093593 seconds)
  done (took 2.612118077 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091946552 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104828813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092401279 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105547514 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084715196 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107722123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081341471 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104430857 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102825468 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08578936 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105214186 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088017487 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103603277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087831742 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105209523 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08472076 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108034597 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104028329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085913379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101385107 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088391534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104488946 seconds)
  done (took 2.964524992 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117797337 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124585716 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092584008 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227958039 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103099605 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132324333 seconds)
  done (took 1.635898442 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109257573 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122046356 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106436051 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106923069 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114939178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107506399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087635849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107882175 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119406627 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101663562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108563139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117736073 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118495409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097371466 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113810254 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114355521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107805351 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087501883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105891672 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129012668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087269686 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118036813 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108210132 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086924434 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107955613 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11715662 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117140302 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121919717 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087541825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118663986 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113370836 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087228285 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118165415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121824626 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109338451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09721293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108331514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128353536 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113850596 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097035882 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109431097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114626098 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097978073 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114090577 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116745062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108368784 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0932319 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10759127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107492361 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136257425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093038666 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117058028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115562553 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11834174 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117964227 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135577612 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101198248 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117627198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115793605 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121879919 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118111562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09387971 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11700278 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122956963 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115462749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118134725 seconds)
  done (took 8.13648497 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102087531 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126196363 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108095132 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122616759 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096578512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108825166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107355813 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088469389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109045193 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106689848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152343857 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08831025 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118501518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118113949 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107724618 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088201272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107933672 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117467102 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087999629 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135740775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108340223 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118548174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1180421 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097823953 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123966572 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115294003 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108371228 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087891175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107642137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10829866 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094739498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107676596 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117619398 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087081089 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118584818 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109064667 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087820693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114549242 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108564081 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114834739 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097721748 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127867167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108707609 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10831449 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122668989 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088837611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10805159 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086855818 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108967501 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108408365 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122598722 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103600605 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123361419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117618367 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108579715 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087913669 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10908921 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108493514 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0875244 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116041773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117149493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108005808 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136388547 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088134043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107783092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118086021 seconds)
  done (took 8.025586607 seconds)
done (took 155.225635842 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097900759 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136481493 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09619525 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168478509 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107015069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118580747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137983179 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096898425 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10645807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085739634 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10616358 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087771719 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172302129 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085495779 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107206406 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107803299 seconds)
  done (took 2.662699309 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200708013 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254979891 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101842994 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106433048 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08828224 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110399605 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105074575 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09138712 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109893558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086527224 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10871341 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087632268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105852941 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085878456 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110161091 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088255393 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10663356 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087613279 seconds)
  done (took 2.88600886 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112261433 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149036737 seconds)
  done (took 1.116199226 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118195475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180112612 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294708006 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155027549 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118382013 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12685575 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156484349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130663276 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197444146 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122898362 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122873427 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097762175 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139996427 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115393716 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094965221 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118307627 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142650199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0932769 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115446593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115358303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116966413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106563312 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116516253 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093670291 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180033631 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119045245 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084959502 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10768475 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115528542 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095528596 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114404964 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124107603 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098221841 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175652835 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101524575 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176362071 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097857632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112295602 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114567558 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091311262 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11853787 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118368533 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10509021 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118156688 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086761584 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118596853 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106233503 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085434855 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114537417 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09773272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115080433 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113206207 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155681409 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118410614 seconds)
  done (took 7.521332372 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796507689 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164742596 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090638919 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883128729 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138400774 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103553189 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.781434396 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132601641 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234271403 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762757623 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134736145 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12276311 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226591176 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23711495 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924566124 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308595858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67299693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102020699 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149155562 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152680524 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119748458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138651135 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130786875 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453603124 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094831815 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112528545 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116291312 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099446896 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158524553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126440584 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.1140939 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177406784 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266769406 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185537924 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116216066 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089236495 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112639859 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169269717 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264809131 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214207589 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182162869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08735335 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111361923 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12181801 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110760552 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109152519 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1631637 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194258671 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173738648 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092890888 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122310904 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119930023 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12063814 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165532865 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121127385 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291518955 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320998894 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112415179 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120769468 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105607233 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265012289 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12234096 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224451549 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116736245 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212771514 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11156655 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762988262 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189415034 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090976398 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119232399 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11937236 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095256904 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12165285 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171330825 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392475532 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124275937 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093249804 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111550894 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204043931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124704071 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110921334 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162296803 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116188292 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100409627 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125494187 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123083218 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172044625 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228833909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124014551 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120269258 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093458377 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125367016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11598232 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214099562 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219717984 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163079445 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208903901 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124613557 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185797752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167443851 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098946973 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194105136 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097708453 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126714075 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12296188 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217134804 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145975105 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122848368 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095311066 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118421482 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149592212 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127149124 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09793437 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191019191 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482513001 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167335651 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109158027 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127921311 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099608108 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181854856 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096643096 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262347403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122593489 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169901048 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119972037 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087521695 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12084693 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164845473 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123105374 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120791835 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10062974 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12015088 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231420146 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217720326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12357752 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221827986 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185081375 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119725828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172029011 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122337212 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166554104 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120600989 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121224851 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094874229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792034432 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124486914 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099384856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117300981 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195784673 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111906643 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102123793 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124753151 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108457627 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772403344 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127328002 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121566922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102388736 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119263044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12110978 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117302789 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094895519 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162861449 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231299327 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123300208 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119633999 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103441181 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183133116 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094998532 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126454646 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125079169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12566318 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099964915 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114933669 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124629171 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16917371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16115924 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220970981 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596163275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090864413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125649788 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231349415 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089787563 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289717799 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120444677 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224151544 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167007783 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121136228 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317380892 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166581558 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197382998 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127067674 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174180894 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087486361 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119621171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163937449 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112753404 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117976708 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162766967 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125931404 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102516169 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953818549 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113242394 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227433043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108954067 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172052266 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116449456 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101137213 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290875433 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112335574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108569314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185614643 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093158744 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125734521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722297596 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104195108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1229888 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118065076 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222579621 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165883666 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118944079 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098360146 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121464468 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162939752 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208025008 seconds)
  done (took 44.09587718 seconds)
done (took 59.132306305 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276012818 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214611038 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264791343 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168565838 seconds)
  done (took 1.875794557 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170105078 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148095546 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120416046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107073745 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150369659 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085792305 seconds)
  done (took 1.661419476 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.351996744 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269989071 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239194116 seconds)
  done (took 1.745714355 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288925125 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251960542 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355067931 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418042731 seconds)
  done (took 2.315730346 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.20893913 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132436342 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11178007 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104621619 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196362723 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249039227 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141504389 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201756312 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121912369 seconds)
  done (took 2.398198076 seconds)
done (took 10.879679832 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.167946915 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.169638162 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128546566 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.248578617 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100425878 seconds)
    (6/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.258006519 seconds)
    (7/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.231698928 seconds)
    (8/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124686142 seconds)
    (9/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192120974 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094273309 seconds)
    (11/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.145268652 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.116420281 seconds)
    (13/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.195823 seconds)
    (14/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102166228 seconds)
    (15/286) benchmarking ("sort", Int8, true)...
    done (took 0.221584988 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123248265 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093573377 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.124318916 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.077193889 seconds)
    (20/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.198605016 seconds)
    (21/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122978425 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.231460927 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.220541242 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.13666529 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.182461189 seconds)
    (26/286) benchmarking ("sort", BigInt, false)...
    done (took 0.243713325 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.139698553 seconds)
    (28/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.11723259 seconds)
    (29/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.096506667 seconds)
    (30/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.218893769 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108648088 seconds)
    (32/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.210440612 seconds)
    (33/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177071278 seconds)
    (34/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172917985 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.224891619 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138156738 seconds)
    (37/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082991475 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118140988 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095487068 seconds)
    (40/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.207061044 seconds)
    (41/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124838951 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.13595666 seconds)
    (43/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160824771 seconds)
    (44/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.184323678 seconds)
    (45/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15804636 seconds)
    (46/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06764013 seconds)
    (47/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11822132 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096286228 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.173318059 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098618168 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119464109 seconds)
    (52/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118038499 seconds)
    (53/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095278818 seconds)
    (54/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.181481491 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093469314 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132306878 seconds)
    (57/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.191872209 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.10090606 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.187458872 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100591511 seconds)
    (61/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.115180042 seconds)
    (62/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109514226 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094031545 seconds)
    (64/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138854781 seconds)
    (65/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083642148 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111429378 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101269613 seconds)
    (68/286) benchmarking ("sort", Float64, true)...
    done (took 0.232173728 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136744615 seconds)
    (70/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.172941539 seconds)
    (71/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094225296 seconds)
    (72/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113864494 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232345772 seconds)
    (74/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23316245 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138238768 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087474628 seconds)
    (77/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111768756 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113959579 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141052318 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136979815 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113327238 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.233160884 seconds)
    (83/286) benchmarking ("sort", Float64, false)...
    done (took 0.17244428 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151335985 seconds)
    (85/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099802328 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.111044342 seconds)
    (87/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088360056 seconds)
    (88/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.120705503 seconds)
    (89/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119859018 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086285222 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134928217 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09491222 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124405427 seconds)
    (94/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067941674 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19818902 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198921148 seconds)
    (97/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117803984 seconds)
    (98/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.165262275 seconds)
    (99/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153736864 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129080893 seconds)
    (101/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093393264 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108800396 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093538736 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186257727 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09401025 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.10297522 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086838789 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10934624 seconds)
    (109/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144608629 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066223477 seconds)
    (111/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091184672 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109608602 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138526242 seconds)
    (114/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091163434 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183011051 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119804221 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.177890764 seconds)
    (118/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092966632 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.181644795 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096139634 seconds)
    (121/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110593245 seconds)
    (122/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078194013 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117308099 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097282465 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116473249 seconds)
    (126/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200227453 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.116910945 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116037606 seconds)
    (129/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187022492 seconds)
    (130/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.12408081 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117268484 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078493538 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115924306 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174060854 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.223223091 seconds)
    (136/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.150968824 seconds)
    (137/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.148147436 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068704497 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120583824 seconds)
    (140/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079407907 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067050269 seconds)
    (142/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175208921 seconds)
    (143/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172069422 seconds)
    (144/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12949783 seconds)
    (145/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067273239 seconds)
    (146/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185281767 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086835276 seconds)
    (148/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.151324506 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0865119 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11742554 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067712088 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175317508 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08594797 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119550994 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067643272 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.089601764 seconds)
    (157/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.121709567 seconds)
    (158/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115979558 seconds)
    (159/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148722507 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.12035651 seconds)
    (161/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.128357724 seconds)
    (162/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091210548 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086514249 seconds)
    (164/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091271917 seconds)
    (165/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067329961 seconds)
    (166/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067853123 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182797411 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067123925 seconds)
    (169/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126125997 seconds)
    (170/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067193129 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110964333 seconds)
    (172/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084708525 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135312454 seconds)
    (174/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.07654702 seconds)
    (175/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108911611 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067086921 seconds)
    (177/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108648452 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093679271 seconds)
    (179/286) benchmarking ("sort", Float32, true)...
    done (took 0.234120594 seconds)
    (180/286) benchmarking ("sort", Int8, false)...
    done (took 0.190377014 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139832758 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121039488 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066737746 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094545531 seconds)
    (185/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116832495 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087281379 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090490122 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094279492 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.223970402 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109486933 seconds)
    (191/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068617608 seconds)
    (192/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176058023 seconds)
    (193/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119588757 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06772737 seconds)
    (195/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067652363 seconds)
    (196/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109200288 seconds)
    (197/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090770431 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.114838972 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092551837 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119421192 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095869636 seconds)
    (202/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11737121 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086923916 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109860089 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067306826 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115568394 seconds)
    (207/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093567803 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09002893 seconds)
    (209/286) benchmarking ("sort", Float32, false)...
    done (took 0.152240768 seconds)
    (210/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091097654 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086391457 seconds)
    (212/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089728246 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102024686 seconds)
    (214/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116090101 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.293269267 seconds)
    (216/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067581644 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090565679 seconds)
    (218/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10117789 seconds)
    (219/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112828897 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067529214 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115926567 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181621095 seconds)
    (223/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067542352 seconds)
    (224/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094841029 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110921571 seconds)
    (226/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110350926 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087494621 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110610623 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.139750404 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092453326 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.119761361 seconds)
    (232/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.092300795 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067662244 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116888141 seconds)
    (235/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066436429 seconds)
    (236/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089157418 seconds)
    (237/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118538958 seconds)
    (238/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077280723 seconds)
    (239/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.100095931 seconds)
    (240/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068530685 seconds)
    (241/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067459086 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110051936 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086686803 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091377069 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087074826 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124132441 seconds)
    (247/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089611708 seconds)
    (248/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090204915 seconds)
    (249/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089727126 seconds)
    (250/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117502781 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183569405 seconds)
    (252/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085587137 seconds)
    (253/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109741473 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086811471 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108552861 seconds)
    (256/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067383001 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087814852 seconds)
    (258/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120471358 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121849127 seconds)
    (260/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066450557 seconds)
    (261/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136384787 seconds)
    (262/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076350268 seconds)
    (263/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120936517 seconds)
    (264/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067181643 seconds)
    (265/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.120050492 seconds)
    (266/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111675676 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110687218 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093745674 seconds)
    (269/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066692902 seconds)
    (270/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136012291 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116328969 seconds)
    (272/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09060184 seconds)
    (273/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.11001843 seconds)
    (274/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088479675 seconds)
    (275/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098615631 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109915237 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116360457 seconds)
    (278/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067603746 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116696595 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.16108644 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113113924 seconds)
    (282/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156411236 seconds)
    (283/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068998259 seconds)
    (284/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077296491 seconds)
    (285/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093845879 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067599794 seconds)
  done (took 36.109139929 seconds)
done (took 36.997704342 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100500442 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148754354 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096219687 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136591591 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123254567 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091219748 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118747381 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098740563 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124217735 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124947194 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098259525 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093624591 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097182144 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120281302 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097080665 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138781805 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123711568 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093961824 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11839735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085982728 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117948406 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086285367 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111523083 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070017474 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12199028 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093692107 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116114661 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120361271 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086704938 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109646803 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093004462 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117459659 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086893782 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123531065 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093202442 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118106807 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097315295 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120548258 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112293506 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086861263 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117614002 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086661739 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116345228 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094808222 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116268869 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093044918 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118879856 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099487962 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139880467 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115128162 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094985704 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123315768 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095978747 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117724741 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091069572 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119566559 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11535144 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115989489 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119415894 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092096531 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118219481 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094346114 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116310979 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09566918 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119686645 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120573104 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098463809 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116095303 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096969052 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115823931 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08650442 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118676884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090366794 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109533767 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119878457 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097428663 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109276708 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092166041 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117862676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092262531 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109794871 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089956963 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112426828 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092692219 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112982866 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070028758 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115125178 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093018185 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10985378 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095626608 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116603187 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094157034 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112691097 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098561267 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110844176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091845852 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110882679 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087880319 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112881173 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091604962 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110959369 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089402183 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119776081 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112827265 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093408019 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12341616 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087985656 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117903754 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085817038 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110431089 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10261028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121124911 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08706031 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117027965 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085750416 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11909793 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110842287 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087573813 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111722842 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08679909 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117669426 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087716949 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11389277 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09409486 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125392067 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086583798 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115363861 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090230925 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110562421 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092460462 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111603032 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087556983 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113035715 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07765919 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114282025 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087197007 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118506208 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089337622 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120261017 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089137279 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120066821 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115921028 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092604651 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115909195 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085595689 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074289272 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116622831 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089963243 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113287668 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087692033 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112862084 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087074358 seconds)
done (took 16.933490553 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087355749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184527713 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150623429 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142275591 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107713606 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112081488 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123434494 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118926092 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113614345 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14312079 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110428342 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132114569 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147897238 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086725097 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112533375 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091079838 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113163126 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101914419 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145230884 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132521871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164349489 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087004571 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147693225 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135090259 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12112856 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105235757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111803401 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091618961 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115437856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112241659 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132103072 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115953469 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088083791 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133544206 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104943131 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120486493 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088004033 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118467345 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087977718 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112662027 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142215949 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13369968 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092595453 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118650371 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091721702 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114845562 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089924167 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120485316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098209915 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116443311 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127223195 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156322187 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091071247 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122436703 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087454019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124040477 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122104976 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090057716 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11267936 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090509525 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112393523 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091533485 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127215679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143439811 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092501188 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121876205 seconds)
  done (took 8.619460198 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105278094 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139582753 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106878665 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131007168 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111602627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088487148 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112995033 seconds)
  done (took 1.74292431 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088562265 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134711975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111976037 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136015556 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132894414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1123656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124219597 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088879095 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13250632 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089641342 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134233053 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150951258 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090342617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121937867 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138084025 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088968401 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137689514 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089499454 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117133635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11211005 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116707416 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135242271 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091250755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114170209 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104082688 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115116592 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163014782 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093941385 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114902937 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092117354 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111925637 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151599225 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103490965 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125536459 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089313879 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129605235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129252626 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087576755 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125812062 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09475872 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128553199 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09066328 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115020212 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088234434 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119332529 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099468792 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119852692 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131835494 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092212748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134194163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089642479 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128503091 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.09019715 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117077055 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090296607 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119447802 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098447953 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114973353 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133468622 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090510562 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130804742 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105616961 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128219373 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130107658 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092287786 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128630385 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102937347 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116793181 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091512218 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118175363 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105181335 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112286063 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115687592 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10010927 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116076734 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112956532 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137608926 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091645542 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125710497 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114100738 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091040322 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114592805 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112221842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118074844 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089198163 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117568046 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092760483 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112676303 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088390504 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117081915 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087791953 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116056113 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09259991 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11481401 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091629517 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.13092772 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11511732 seconds)
  done (took 11.844372959 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090854065 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114311134 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092498889 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115297306 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091532395 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11520739 seconds)
  done (took 1.578265357 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117162402 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117826207 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104702049 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121247522 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155888708 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104155847 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130586792 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124423225 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108395377 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127726292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129561938 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104785857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135826515 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121480576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103250163 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120172103 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103769807 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126013785 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127544391 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096987546 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136979234 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12157284 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096972615 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131489155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118268514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096346017 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125543834 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104765029 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127495558 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124025485 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096850909 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118053007 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095960249 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122788797 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129995227 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095921406 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121081361 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118662718 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099567881 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118564886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104847483 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121488466 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12734209 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094487356 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124243887 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121434343 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094542719 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125315833 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103462406 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121255299 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121121065 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095033659 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121150229 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094204888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121849143 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124558803 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094667854 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130278137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121257118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095545906 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11802653 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093334974 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124164815 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117714596 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104687923 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119833703 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096149662 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12199538 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122184828 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096480309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119761348 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092964762 seconds)
  done (took 9.230320507 seconds)
done (took 33.961698993 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686113765 seconds)
  done (took 1.645480751 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.822025186 seconds)
  done (took 1.782583281 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.130950572 seconds)
  done (took 18.121821524 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490402675 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576777382 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.982278958 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178612108 seconds)
  done (took 3.189365003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.968630791 seconds)
  done (took 1.951234942 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283232314 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234880681 seconds)
  done (took 1.486290851 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.770658926 seconds)
  done (took 1.748664191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.367973064 seconds)
  done (took 2.333974334 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324703159 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184290517 seconds)
  done (took 1.489773356 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548258734 seconds)
  done (took 1.526751037 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.927669605 seconds)
  done (took 10.911631529 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265876395 seconds)
  done (took 1.253116833 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300427819 seconds)
  done (took 1.278653787 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.509791199 seconds)
  done (took 4.495919084 seconds)
done (took 54.187555388 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099536681 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126776293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102634496 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124896844 seconds)
  done (took 1.431627259 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100999304 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121236624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10130374 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121223701 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126694416 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096508296 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123584297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100458084 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120834579 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096705963 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120843087 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120331416 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099515893 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123853412 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094167908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124084517 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124291565 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096472785 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125332613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09666951 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119004015 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09871795 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124805054 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094039822 seconds)
  done (took 3.659335143 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100638352 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119069416 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096243743 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118910685 seconds)
  done (took 1.425586267 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100273724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130920018 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105586392 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125961398 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131418956 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106319009 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116925957 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092805102 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119908841 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100166008 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115770085 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139733629 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106384896 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124718027 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101419457 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114126411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09114587 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130854221 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125962777 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100485585 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118369252 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099425044 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115710208 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109013149 seconds)
  done (took 3.708838101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169888277 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126941672 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138820084 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095234789 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159633237 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140554365 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088633263 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141408881 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088526012 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131324676 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.1190486 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133386275 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129786491 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088381912 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114382071 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08789694 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128828631 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129500929 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091780696 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127910206 seconds)
  done (took 3.426148139 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097831202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117658029 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088071368 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116138721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100356242 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121070344 seconds)
  done (took 1.631608506 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091103165 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115030546 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09054329 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114293467 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09433569 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115689611 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08827891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115569558 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089780385 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1152007 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089172861 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113624256 seconds)
  done (took 2.224252924 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503139056 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119650738 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120274641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088662653 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122097735 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089264182 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129595316 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092892404 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.1407259 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088450445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115711827 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093765116 seconds)
  done (took 2.695260003 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238107678 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125598355 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282972992 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365464328 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156215791 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165701958 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281194517 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161473902 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196835142 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149164141 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230414147 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197451708 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151914009 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191782512 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137177029 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145850568 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189955141 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249873866 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152377337 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238331932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180689149 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168041951 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180607051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151589897 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138358263 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169039944 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095776631 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129953502 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233592184 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17957354 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191111329 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161829443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147441468 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236615153 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248152724 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195941377 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2789958 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134983094 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166620605 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16867021 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238819187 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138385823 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234529307 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155964346 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104784274 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223112965 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167395353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177538834 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145157731 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139889196 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19722689 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243186246 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193711215 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138733041 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299840977 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147558751 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159079284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216589484 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225532479 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228803734 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189138514 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121177623 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18769023 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191927124 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212444216 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151907621 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182302894 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147778049 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181799012 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188769756 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16554989 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205005054 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180209297 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139748316 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169787573 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173620846 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17367067 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260432465 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185592461 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123387833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170671416 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148727672 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131146247 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169566904 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125414597 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241631775 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116119486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16373042 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236474751 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130964008 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160928547 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22180911 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185188989 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1492957 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083945856 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153171842 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154801133 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177234455 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139565651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158963433 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157499316 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130849126 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169787965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097677883 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210774453 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091814849 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173611056 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210723657 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100235073 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162376963 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153561492 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151349139 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178019941 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198554437 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14170542 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133540898 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209930006 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181132597 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141136622 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178186368 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229977285 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145092301 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122061533 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227366114 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244779358 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112919646 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229889719 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154167503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109373359 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133501778 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180394387 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156038629 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161684054 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134231 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183889373 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234879408 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099089682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139362858 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195629242 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134329583 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132971314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15547906 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147689958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112193977 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142894789 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14495229 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176982096 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178988123 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154558998 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165885838 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149929499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24954026 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140103447 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151079734 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148800215 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093958609 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193207072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227328067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10376448 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233073659 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171507124 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22362188 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169326604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107331584 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177770026 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130248385 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120166223 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194244597 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16829141 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162519379 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223238353 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195697671 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179004772 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.21026704 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167857363 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175632005 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165301857 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158115061 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111353836 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161019006 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15797034 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123857078 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140824911 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10697685 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148548336 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142940619 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132941472 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198219309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170210677 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216743786 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161010428 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149335866 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181523658 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100753834 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202954872 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180330915 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147040833 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200189447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193222906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213716139 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117647265 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228457383 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120205727 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098913854 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142912267 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169704628 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134164702 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107738335 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18972658 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180454648 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181449174 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172266215 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232642532 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175365921 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191297229 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122337273 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141701461 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209994695 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17816798 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155579313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137706306 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151934551 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178308418 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156001248 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255196542 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168496539 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175133399 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235564245 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150259531 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105525747 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150941356 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177492661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153716094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176270778 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147403645 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139332925 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160315057 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129539875 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161549761 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185477189 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16418117 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214052169 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122786495 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214429958 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101076992 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16250945 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160635485 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166006547 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109054278 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176032268 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203110094 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1456968 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167005872 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216975239 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104043953 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307604848 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235285182 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193099067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138788914 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156295663 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161422465 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163608097 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170367453 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178359542 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158762437 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187160967 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159323931 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136652205 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138852497 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150895077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124954101 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133158841 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148638405 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177752149 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139054584 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188056618 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155383512 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160203956 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172093408 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150277289 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144772321 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149123666 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217210995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18289995 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242684586 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151565421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179680528 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206716606 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12567948 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131603939 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106311499 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177837121 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136418897 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218395722 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188012424 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198825714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207596122 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178456962 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139327843 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093282622 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158815514 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169111415 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227901891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148469883 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.149085063 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204085928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136429882 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104961571 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166196634 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288082318 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144350744 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223626979 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080655595 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283363572 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127314847 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105109015 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164314356 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23554354 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137089147 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15188808 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168217036 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191712789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135522278 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149411813 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218382946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211086129 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228598489 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184261563 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132072737 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129516558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203994897 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194090915 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157172492 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.137997165 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206439227 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194738786 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224511553 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141134817 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168289646 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167770367 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157901439 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185777808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13448846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2085202 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135485711 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18996696 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153493099 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13876338 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177098562 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214518497 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11339626 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214688824 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183015136 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135563952 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105042937 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193715176 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178934647 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15457451 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099246154 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210522882 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097611941 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221590907 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232465612 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134390393 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155606265 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147312515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134744278 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127194934 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156682813 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138880846 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16466312 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204046451 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136420503 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194963461 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241425533 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18113604 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182529718 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156231743 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.7035642 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.140664214 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20525441 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158113068 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216532261 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161164424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183068797 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169099539 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175404113 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226210588 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170293847 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.239890364 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200482467 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.186838052 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140607845 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160478698 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161515572 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.152885877 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161623076 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178845814 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168954549 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151777488 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.186264582 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164900653 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.1348462 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112975047 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225984277 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119177407 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214905063 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180179405 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138737963 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174133614 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189074449 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133257656 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181848993 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244469543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122376699 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158676888 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.141954753 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157442598 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264722519 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097564938 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221343859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186247022 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160418443 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169486634 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146800209 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19227065 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163835287 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223451906 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122377973 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163390684 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158464517 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137723025 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132249741 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165232989 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178736712 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.159612346 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168588919 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148945161 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203063599 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.133239528 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153588761 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297464478 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185600289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257507483 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115808105 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14159184 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163664638 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150006063 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179090313 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185185926 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14569397 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144236146 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145623858 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138493323 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.148588223 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136969177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230460818 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173797258 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219356261 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.146687615 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290074935 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120807198 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165575697 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.125581208 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111897848 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159942863 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156798734 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166304951 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206373087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273579181 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157916616 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142796308 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158975007 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106569771 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145740888 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173955401 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176135575 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19145687 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154339885 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088717135 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165470612 seconds)
  done (took 83.235346689 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173281207 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13231103 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147407238 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201968012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17568777 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269949328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210301065 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252304332 seconds)
  done (took 2.647164502 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09444128 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145603056 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157534985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133123731 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091283769 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119308358 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341156248 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133498294 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11627533 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121225865 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173990121 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094163434 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.546739164 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090957499 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120438417 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108109909 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0923234 seconds)
  done (took 3.753424101 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.193304181 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492991213 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.04804086 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19453172 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158965385 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11735653 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707497441 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094847322 seconds)
  done (took 12.089368777 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114933783 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136248931 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123295618 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15242786 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140588795 seconds)
  done (took 1.762296928 seconds)
done (took 124.671147043 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098209529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127468629 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097006524 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130319388 seconds)
  done (took 1.528589968 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094405034 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070774328 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102608375 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074639757 seconds)
  done (took 1.428034016 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189731612 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168143409 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383863997 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071937938 seconds)
  done (took 1.575469949 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.1137644 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132190244 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104468487 seconds)
  done (took 1.447056228 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106659234 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129458709 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102827885 seconds)
  done (took 1.433919905 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105939411 seconds)
  done (took 1.199623428 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107525663 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137219093 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107930773 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136520049 seconds)
  done (took 1.582530361 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098284227 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127233904 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109277975 seconds)
  done (took 1.431374025 seconds)
done (took 13.072805713 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103087306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.417670082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412685971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110174062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722653569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380298678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032964259 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145853079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164769653 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093289608 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139021123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67127294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023478147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372586247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981269525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370466787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675150399 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120936989 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09112257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121933348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016298899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092332258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121541222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092164042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701542697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397877046 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122789291 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369732371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092013926 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126644072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383246057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123130222 seconds)
  done (took 16.871685942 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095994802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173929429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098261031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122935463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12329962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094090909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124166105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094438696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179677234 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122600056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110734461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12176915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12581251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141083356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095161222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125045467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093940448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121886129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093537501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139561393 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120188968 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093992973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121568959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094265425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136549523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094269693 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121970874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120364102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098732407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127523194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09383258 seconds)
  done (took 4.80720385 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139589081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183194988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12760293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126768842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169025773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124164922 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198254298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117957054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183547359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122581811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139274656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092794895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156697534 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122863858 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114870508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120993129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096450534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122977256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0935845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122681598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140102518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092987256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122309158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09342868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122732139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108277569 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124243562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120587591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093675652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127296319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100185935 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12435262 seconds)
  done (took 5.142976335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097031719 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125213306 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108549018 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137708799 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095066715 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125305825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096853313 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124195353 seconds)
  done (took 2.006187915 seconds)
done (took 29.924584834 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110589926 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126153763 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106344011 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134480562 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102908311 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13206784 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091441232 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133591892 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133069962 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102401405 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136582648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092228045 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122475686 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092135761 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135070392 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09770435 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132035181 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103154877 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134100426 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132190291 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094807205 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132909432 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103646371 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133105189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104154032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133973643 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136595605 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100295307 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123215351 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094284588 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124883049 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103803395 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124065047 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105291772 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127329245 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098492114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123750715 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0937678 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133130151 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132481001 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099070167 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133513164 seconds)
  done (took 5.995665816 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107540449 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138428331 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104831593 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081342868 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117271133 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080745892 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137695168 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07868404 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110001519 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107682195 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073896445 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106418774 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07836965 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101303966 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077797316 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075248855 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10813478 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075707777 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076369146 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105810699 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079733859 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072835022 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108188741 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078540293 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074615853 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110597695 seconds)
  done (took 3.577269913 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100172198 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134457284 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114037975 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18446851 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161464688 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100893596 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131913815 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139946474 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109885079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120508357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096915143 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149430135 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111314512 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129420043 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092220727 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136389146 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1356448 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094593344 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128062142 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112383822 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13809302 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103252687 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141336439 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131917807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092685784 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122685864 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096281003 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134701442 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097851744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131234775 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096772643 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125614967 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124313164 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104566084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126529566 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094231035 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142285019 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103433089 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130771766 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122107506 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100765013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121526451 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113665088 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161531825 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092059366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128180174 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123615635 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104059839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121308525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110644958 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130963884 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092435199 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12548486 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091572559 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122231949 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10646801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123987086 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09537061 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131558847 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127326444 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106691426 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124961368 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109364372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122426187 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099716872 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122612356 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093428947 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121483135 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14320228 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095286262 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161355638 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094344345 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124074293 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101479432 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130088297 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127775391 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094024931 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138483055 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101884539 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124766486 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102618556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126897855 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095150525 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139264516 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123889871 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094868871 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122174107 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099741218 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125159666 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094412643 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135865691 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091769937 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126323837 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110014379 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121629836 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122748718 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100075638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125807255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092643547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1352497 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099906257 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122543119 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131930296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09432927 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124778168 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103823445 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126374455 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092564248 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128004456 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09928588 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123373293 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094351704 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125906276 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094913313 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132438611 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129589047 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098366493 seconds)
  done (took 14.831840215 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228014557 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216050754 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206881718 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292977443 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136398266 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11485104 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212771892 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156298955 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124347375 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161451323 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170675891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181806255 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139275268 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212044232 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170966249 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093551942 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142676154 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133137779 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.244290864 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257278842 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144913093 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10169519 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164183359 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161167537 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137593792 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102243515 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140494077 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134340227 seconds)
  done (took 5.802840717 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108229581 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156011288 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098634718 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145232043 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148562549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092786637 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128036146 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094911091 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135526099 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135723827 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092762992 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129123447 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100329147 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131995095 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122621883 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103029354 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131756455 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095267859 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126614283 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096962199 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133635324 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102670777 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127091339 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121304426 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103361852 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.1222511 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086763851 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143017376 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123585051 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115777173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120717405 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103056547 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136307864 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094504909 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123178001 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096181677 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126552997 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095585828 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125731628 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091760736 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122762506 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077851888 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12217342 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13564273 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099893548 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080082998 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129092059 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127678254 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095120273 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120150472 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096697497 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126440481 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095869525 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131155176 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096008922 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125112765 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096837992 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115640434 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100739277 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125087306 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084374833 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12143957 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098945289 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118228551 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102177633 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128032947 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092184362 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125370117 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097353257 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130175182 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095745263 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130011016 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090968695 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126977051 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096017433 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129024535 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125963228 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093592882 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122926895 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094360134 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07542919 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124245652 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074125362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125924021 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091341879 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121968061 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094981415 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130490484 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137872845 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094945976 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132651947 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094321578 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122561371 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09749086 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113938479 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096749727 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140715786 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142417508 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09415188 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122459753 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108786863 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126709147 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093036963 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106979416 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102882884 seconds)
  done (took 12.980409292 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130415458 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155291262 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125307092 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112165836 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157745038 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158020248 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10074057 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131654179 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095490398 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14263035 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093969373 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132667774 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094292715 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138620552 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157264945 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103509513 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127072705 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108738889 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128579819 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17011577 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112055864 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14244029 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109877645 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123890931 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128967048 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110546841 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160774242 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108517068 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137536173 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142894723 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108799526 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161433983 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143200956 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098548245 seconds)
  done (took 5.490088818 seconds)
done (took 49.774458991 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.228731855 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.426847706 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193691406 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.10565373 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.254332965 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.241997906 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.215651359 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193059251 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.222897001 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.200800163 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.456383139 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.807554114 seconds)
done (took 58.669915627 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.202379929 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.36173631 seconds)
    (2/2) benchmarking "String"...
    done (took 1.490619584 seconds)
  done (took 3.979905168 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.783499652 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.161986865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467186706 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.205940708 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.207821581 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.502439879 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.929236907 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.576841536 seconds)
  done (took 28.177689103 seconds)
done (took 42.272075661 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.210332635 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.25278389 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.239499468 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180190859 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31113524 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228343571 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.634412268 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.224649417 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218261576 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183638279 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.221677209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206205531 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.223463275 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.526655775 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214997982 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207807762 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.206400568 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.721578213 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.619958574 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.219934916 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.237059001 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.233999369 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.216278961 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.224823916 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.210623183 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.198525243 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.209216946 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204967542 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.73530176 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210829543 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206083806 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.737883253 seconds)
  done (took 190.80381942 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.203606223 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.237664996 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.322018021 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255474805 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.683716664 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.402162946 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.350499853 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.757453367 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222084466 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215902467 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.450233644 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205526701 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.533199463 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.175151089 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22941683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.271701768 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.547239179 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.516128513 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.24026644 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.363765628 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.218254836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.659983648 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.589414581 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.399529163 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.218849936 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.208151369 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.241688737 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.227207568 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.413333202 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.481326628 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.247366855 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.216976888 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.800490897 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058008657 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205697075 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.234553845 seconds)
  done (took 150.726705593 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206305228 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204247311 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205320449 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236739141 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206292661 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.770488894 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770295554 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710729882 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.547866578 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.56053969 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.44837307 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198238652 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301486336 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.209305507 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198966188 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219228499 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.24578228 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207746865 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207424546 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772247099 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.219605753 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.29547353 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.399401578 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21603991 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238913766 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.59652126 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19895895 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240899385 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537707114 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250227828 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200288384 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.589552726 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.491688445 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31949277 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199933674 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238274321 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20712337 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487747657 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202211849 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20599865 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20983479 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881552038 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209351018 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.766598313 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207256992 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140753889 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.195611414 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.204815805 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207529016 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20786963 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.5003705 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863369902 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22235515 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206388741 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208283208 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206623386 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206754934 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237506623 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.43191293 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.299775847 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.224712997 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.210787657 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237181762 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207322335 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.297652451 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207084443 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.626003293 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277063387 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.30577316 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754647644 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206681911 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305269012 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318897829 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19870914 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.205640366 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206839868 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198838472 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205992038 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316117113 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204641038 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.594147523 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.371308261 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217591371 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.497589474 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.304090512 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203993897 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.575573014 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205465473 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205448606 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979763657 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302455467 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201119116 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20612394 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205443299 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.591970741 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.737294443 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437548311 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.206186176 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.396825132 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203846319 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.603987909 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.727851073 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.844135849 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205370786 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315761916 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.371688902 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21578634 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.204350513 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.453251412 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205535651 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.20549296 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203953461 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263198405 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596276974 seconds)
  done (took 365.287168198 seconds)
done (took 707.948694962 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.801046668 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.794556642 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.89617913 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.783194554 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.752772301 seconds)
  done (took 10.15083082 seconds)
done (took 11.277613935 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.389303337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38393855 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261640926 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.384946271 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229104251 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.401599786 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362469862 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227378973 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303403173 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282293505 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301571293 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257013719 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239455988 seconds)
  done (took 18.148354726 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507021725 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523458575 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268718994 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519554443 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245667259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51991458 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404127465 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416253677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418974433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238868641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218357253 seconds)
  done (took 16.408141164 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522374467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525525453 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273514301 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525167285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248072528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526768498 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40990009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.430076534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420760654 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239513389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219749334 seconds)
  done (took 16.467101026 seconds)
done (took 52.151148317 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.214147649 seconds)
  done (took 2.340238647 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249401679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410758841 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233225951 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220743694 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215885528 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.218582364 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219865026 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216656033 seconds)
  done (took 11.112861534 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.214495258 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.212078865 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214515811 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.215921739 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210058676 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.209681272 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211226886 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210863406 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212639877 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208161602 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212282461 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21155373 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.214989494 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212139622 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213938721 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215554293 seconds)
  done (took 20.528895924 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216108925 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.212699101 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210951069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210408576 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214295313 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.207936901 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213488885 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212265083 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211394451 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21151143 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.210006635 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210550817 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208141371 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210737716 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210253536 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208765247 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208211865 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.212068474 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215980394 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21334234 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21250137 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212105651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.211258276 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209550547 seconds)
  done (took 30.20517443 seconds)
done (took 65.316324527 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.813786319 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.756452866 seconds)
  done (took 6.699109452 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218479135 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.217953011 seconds)
  done (took 3.56624432 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217221877 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.215013346 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214996499 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216046912 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216142611 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211751417 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.216745175 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214695874 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217893852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214837463 seconds)
  done (took 13.285888981 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217648501 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217282701 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214602791 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216243805 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.212670407 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214051702 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217527294 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210659832 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21535708 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215973976 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.213718138 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214334735 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214432359 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210599431 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217737822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212952621 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216010204 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216498663 seconds)
  done (took 22.998596403 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.219494611 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219011097 seconds)
  done (took 3.569361631 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.215908676 seconds)
    (2/7) benchmarking "second"...
    done (took 1.20996188 seconds)
    (3/7) benchmarking "month"...
    done (took 1.212997191 seconds)
    (4/7) benchmarking "year"...
    done (took 1.21137957 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.211342043 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209056229 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213212296 seconds)
  done (took 9.615667619 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219850544 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401139213 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481609568 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.829734996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.217427285 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222871305 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.035579379 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222205623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224385711 seconds)
  done (took 13.986007117 seconds)
done (took 74.852226307 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.225851282 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228369358 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.400591764 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.228984785 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244561245 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.555355242 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.245803841 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.332117606 seconds)
done (took 37.596080019 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215691188 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203198395 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.893237273 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.197845707 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.244590801 seconds)
  done (took 18.671513063 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.219020388 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550034419 seconds)
  done (took 4.90229817 seconds)
done (took 30.923594482 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220351758 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219684858 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221139595 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217518357 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.218213195 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.220912863 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217966102 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217264104 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221435531 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219720139 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.219060437 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.220756623 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221130997 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218857173 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21622228 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222098686 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221118884 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217390485 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217722775 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21730108 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220993338 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219043446 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217962479 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217897693 seconds)
  done (took 30.39486507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222838019 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222989251 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219548624 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223672715 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21938356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222740224 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222435677 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21949871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222428417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22204808 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22028852 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216977644 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223196403 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.218932155 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221970249 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221163699 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223498036 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220520047 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223100862 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217845564 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2224427 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221554625 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218135639 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222468741 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220612349 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219818546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22368627 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220898586 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223461306 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222025426 seconds)
  done (took 37.775308905 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228805372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.23153659 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223928515 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223893967 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224690355 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225044658 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222256238 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226502193 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224618541 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224705578 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225584855 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224010717 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22102755 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22447653 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223890265 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221132894 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221185058 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223603208 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223615788 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224716533 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.222888222 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222951437 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224063846 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223652085 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225311216 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.225240297 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225293707 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22626548 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22480166 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225291556 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.221800323 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225949164 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226317472 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225052379 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225637382 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225998099 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229232761 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234760597 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22573294 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225633157 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226869503 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226652305 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224211995 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226756643 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226529411 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.226274349 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226283729 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226582869 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225556861 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225705936 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226473394 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227230365 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227364503 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225769791 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.224365158 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223142329 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.223048417 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225175635 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225253701 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226808819 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228299871 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228522846 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.226341055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229122755 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228605278 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226877976 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228523876 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227428595 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.226058102 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227980613 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228513418 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226616733 seconds)
  done (took 89.387471639 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225949272 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223733236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.222566139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22220896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222501302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.22845576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224832172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229273096 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224627345 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228932424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22827051 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22384447 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223150574 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229866465 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229276229 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224420382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229858279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22537059 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229843264 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228420447 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22752827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.223672772 seconds)
  done (took 28.116426461 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229001999 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229366328 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222899208 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224627254 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225633498 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.231155552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2289343 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233571077 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230538528 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219925223 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220897006 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223544671 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219912985 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222149856 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221776042 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226275287 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227342883 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22534379 seconds)
  done (took 23.203567811 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.221729357 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225356101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226421322 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224162893 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228184157 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23078363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223275589 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228308368 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22498126 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.223753919 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225593462 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224329069 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225666728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224543739 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226296253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220083617 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.226392501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221240129 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225783825 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22428405 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221900568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228280326 seconds)
  done (took 28.093986464 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226850652 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225351911 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225225073 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.224902294 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224903261 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225440018 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.226894746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.224294846 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.226957344 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.226401459 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225207695 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228173035 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.224528588 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224987461 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221670189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224446344 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228051054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225042062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226796551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225298295 seconds)
  done (took 25.655561549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23049093 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229500998 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230729435 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233129322 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234509383 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232944612 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232492082 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232677651 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230994471 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234073582 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.230949263 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229643139 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231042204 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231701748 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231900948 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22989196 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227333317 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230049373 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229153589 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229902093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231104348 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231084922 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226215964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227638307 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.23233404 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232316524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226766584 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231653457 seconds)
  done (took 35.607457313 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228428657 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2303957 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.227014765 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.224132641 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224823592 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229492946 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.228314384 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.228822444 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230780572 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227978125 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230118422 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229918954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228099927 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229894088 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230147786 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230633929 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226546616 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.22718958 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225942082 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228349153 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230652961 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231495598 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230732464 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228819013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229979149 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232081914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228082106 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229599662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229283781 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22999834 seconds)
  done (took 38.015210409 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252421046 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250314813 seconds)
  done (took 3.649894368 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229085394 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233909411 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235647124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230985988 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229188754 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233197427 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234342045 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230434665 seconds)
  done (took 11.006228829 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235632933 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234085215 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23019895 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236131442 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237590768 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23510071 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24028685 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252660979 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.232023672 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.230569421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241386021 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241225749 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238265551 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23097628 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234417241 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235526929 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232938015 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230981053 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.23447248 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236786563 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233585497 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240121693 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241059921 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.230951746 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235275053 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.245160423 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.259204354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234235278 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234955109 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238694069 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232631199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230011814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.236054204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234315987 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.235000053 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23533953 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243847908 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253170223 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241534149 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25395079 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235863232 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.230153479 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233596315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.235164337 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236773417 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235936208 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23635361 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229846311 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.233009497 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.235879548 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240197923 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232605692 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230849626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236258808 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236776574 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238891741 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254403885 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237125951 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.239907456 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.241694885 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267887643 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.259173786 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235932141 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.238817759 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24428236 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256135825 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243252371 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.252776206 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.231999826 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23693089 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.240659659 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265608905 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.259502903 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.232836546 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237046021 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.234671938 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234112977 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234024737 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243528819 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25792333 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.234752831 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234572529 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245247394 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260843831 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.234454811 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233918913 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237605468 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.23572581 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24000773 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251200779 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258589411 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24059378 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235129062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.236346215 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241345772 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.236493104 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.235022134 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237924693 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.233473558 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235976921 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235850044 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242877965 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.244927078 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237610561 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238292172 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245253867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.260823663 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240993736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.245715665 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.2415739 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238688234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246017771 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.247218675 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238993416 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243593539 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24640965 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.238214166 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241923813 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.235903613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241742154 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250105474 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.263122386 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238985608 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237885692 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246989336 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.248058857 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244773214 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244698754 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246660464 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239245585 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237418337 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.24151786 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.239897322 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.240103009 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242644119 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243357911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238749219 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238500329 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239240598 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243953804 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245063632 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.239096114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241893117 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.243618629 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242180548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241202225 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245368455 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.26260897 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240993623 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.244105092 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236394631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244702485 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241432703 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.240557563 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241662175 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244844755 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.244816845 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242478775 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244610772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243281001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242323502 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244267825 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248981519 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.244720773 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247684741 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246054096 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241108821 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.241225103 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.242611373 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244176941 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244942914 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243651815 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249398955 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250640431 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.247376855 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244688567 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248358937 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243456749 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246438644 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244503704 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250453411 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25332426 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.243541456 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253053415 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.262554167 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244976975 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246483215 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244557266 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246311892 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247382786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251376709 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252528223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.2568811 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271591545 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246399278 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252911776 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248799872 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247546545 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254534472 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251890553 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253120005 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250377328 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252037348 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248473648 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251970458 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252388018 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250532924 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247541108 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249390925 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248122335 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252949983 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249402507 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254089641 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252115029 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250430046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250564771 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.254500211 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250620055 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.249234484 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.254804791 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249573747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249885017 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.260074771 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250624765 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251593628 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256100844 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255673109 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253404063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254480515 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252824108 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.254660763 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259435917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269062006 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252339035 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257038602 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.263942709 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256742961 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255188825 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255168717 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252514982 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260154527 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.258624781 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.253362361 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25426336 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.251108441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252873662 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255262124 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.260386821 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.266655495 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253301743 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257425679 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259651165 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.252204004 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253360022 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253919135 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25474246 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254316436 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255472444 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.257045342 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252170835 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256908243 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256035356 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252522936 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257367166 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257616236 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257850271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254871346 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258528388 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.25777553 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.262994125 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254823927 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.257394719 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256413457 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269749477 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279940921 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263247679 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274518937 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259060034 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264998058 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27181066 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261758565 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259289732 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255205355 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.258948447 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.256682279 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.257790019 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254360018 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.25928514 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258868629 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259874891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.261508079 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258525988 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.255713043 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255512048 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256788691 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258170651 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253710464 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258346138 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258480685 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261140325 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257566646 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255335504 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265053897 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271008092 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259948253 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254858402 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257645364 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.258260347 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259200514 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257678153 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.2623838 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.263956924 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264461481 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268270148 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262437338 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27055723 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260601184 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.264811991 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264806087 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258358358 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.260045804 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260579573 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258934272 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268369612 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.275688097 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261914077 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26525156 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261966535 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263439778 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261811678 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258903389 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263239286 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258513278 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270013887 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276602005 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265175649 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2612821 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25988366 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258393378 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262304956 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261930499 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261182059 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262057631 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.263655306 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26202275 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261787495 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262318973 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261640024 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258902098 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257831769 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261863422 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268033275 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.282020138 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263308099 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261436108 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266910908 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278177636 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267998799 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.278369898 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263182495 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25980636 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260725818 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264709193 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.263180201 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263380074 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262009552 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.262826983 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268497959 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260289423 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263412057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.260120719 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260477213 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.262674189 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274224134 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284521746 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.262514881 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268986815 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261121736 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263377571 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263446833 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261552364 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263016207 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264421996 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265463972 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263802388 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262816048 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261786106 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265597709 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263147399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264425096 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263210708 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262671818 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.263834428 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.264335344 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267043639 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269410123 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266575425 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267160216 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268263067 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267111803 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27578107 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28130731 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.267823382 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266104293 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267168046 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265782034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266838791 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26573443 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267518256 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266846307 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.264102254 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274809779 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274390187 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269951285 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266811577 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.2669896 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267240863 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.267511419 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267950359 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266302237 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267025246 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2677406 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267880527 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.26793238 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26648166 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.268902285 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268861992 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269535161 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270639437 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.273197462 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269175794 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.266502448 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268163946 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2681399 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264988816 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268706725 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.27667184 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289004954 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279206505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.277054545 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.273045608 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269323342 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271004555 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277406256 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.268000966 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.271169324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269650586 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270775014 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270072104 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273049019 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269995365 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276166568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.284146369 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.268417119 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278122942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287213296 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26935986 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271124601 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.274755493 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.269966968 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270192909 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271656229 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.269455947 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277551632 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291156731 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271743338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272481094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.27061334 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271478911 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274485917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271436767 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273663833 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.268218974 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272400991 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271841041 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272393661 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27007187 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271279358 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271152496 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.274366675 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279717117 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265525314 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272077191 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273152496 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272936332 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268062036 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271511985 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267173116 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268293845 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270685304 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272728544 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.273074174 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275523651 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272262457 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273351928 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274207344 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272647747 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274984937 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287425777 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282259993 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.270489132 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273017133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274072029 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274968896 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273339247 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.273139922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273295577 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27436228 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27432775 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273553241 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274918038 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277124847 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290457815 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.290559932 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272651669 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274487713 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276241903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273806103 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270997215 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272904898 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274884612 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278990156 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28216874 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274511952 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280385911 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294155051 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.275571335 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279879731 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275020309 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.283615416 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276510869 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274251951 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276889249 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.279731291 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293509357 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275491723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284357251 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299244588 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293850999 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275951087 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.275768589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275437361 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276260247 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278543632 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275668192 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.276357359 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27572197 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.275854923 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277107717 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282332832 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.277549405 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.278284112 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.276623017 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276076757 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.277244907 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.273099654 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27610798 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275500752 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278734768 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277044425 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277896048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277262939 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288712808 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297159948 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27738249 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275748064 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274897647 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.279838915 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283236291 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287994737 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284165234 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.276401406 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276806326 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278159744 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278636404 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276454361 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277876806 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27817335 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278170102 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.275275721 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290989806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297623794 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282836379 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279013615 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278572538 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280102802 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279693598 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280854159 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277804793 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280160169 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.28299008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28390663 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280597884 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280095794 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.284012252 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.288400463 seconds)
  done (took 751.65619508 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276355003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277098719 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276299259 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278891871 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277475084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276229174 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27704672 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276692997 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276522498 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277181165 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277428064 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276890623 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277347134 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275505752 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278602743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277818724 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277954303 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279013672 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278160857 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276856688 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277932058 seconds)
  done (took 28.008069211 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280625169 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.278477327 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278157306 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280074405 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278469133 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281129226 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276138968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279774122 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27707551 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278449868 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281103561 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282219617 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279501751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279693513 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278685869 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281560899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281402573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278086323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281258666 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280670479 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282301034 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27971193 seconds)
  done (took 29.341157559 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.281029071 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28452812 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.281761928 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.280208638 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28337741 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.280101098 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282565016 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.281978013 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282994195 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.283325809 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282028299 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.284752883 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290783204 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.289426275 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.285767377 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.282320828 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426647979 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.283497777 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283034306 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.282927154 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.28200968 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287709285 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298273158 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.281909316 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.282234374 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283853591 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.284378482 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.283952365 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284303681 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.286507474 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287856002 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283349945 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.285389383 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285931303 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.282886214 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283902752 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286185413 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284456803 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.2820654 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.283818877 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.296342519 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.30515321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285517543 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290447485 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.302149099 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.284800763 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288581768 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294680622 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.282633404 seconds)
  done (took 64.333890046 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.285856989 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282963689 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.283823834 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284062843 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283946072 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282305596 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28371353 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282795975 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279104014 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28032546 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284971194 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280536258 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2833516 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283407779 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283818561 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281272804 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283007336 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281013519 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282067605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282835895 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283746965 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286893889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.286018011 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.284605774 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285764302 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284904152 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28480471 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287242894 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283703362 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282238676 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.286962527 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286598392 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284864482 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.284471981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284211783 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.287175561 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28928794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.284863695 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288052646 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.285827856 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.289381191 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290412693 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28847937 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.28878007 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286803986 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.287089965 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287505022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286811 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285945441 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288420343 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.288268533 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286954706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288560613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.286900783 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290539217 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.289623512 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287425689 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.286691029 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289221252 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287225799 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287610034 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291108407 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287149583 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.289172186 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.290732513 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289616495 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.287327774 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290032589 seconds)
  done (took 88.634532398 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289434235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.290319938 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290112204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290705674 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290728048 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290499529 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289899508 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290916661 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290183971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29067695 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290092248 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290164308 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.29017067 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291325665 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290173615 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290452858 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291859217 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290043577 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.289372463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290363072 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29209422 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291046451 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291207276 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291283982 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293398064 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291510525 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292941042 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293212827 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291444669 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292176328 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293769117 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292673885 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293531251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.29298757 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293386023 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29143826 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293373528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293079198 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293497549 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293207855 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293246929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292969821 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293593929 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.292490298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29258103 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293789446 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293126568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.294152696 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.2936852 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.292367459 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292125797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293826889 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293825589 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29454376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293003219 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.294976584 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293160835 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294404921 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293533866 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293329055 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.294462801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29398158 seconds)
  done (took 81.313393633 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294324328 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295526428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292034064 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291899166 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293876041 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293076476 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292276436 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292309506 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294943122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292674812 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294939723 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290756618 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291198522 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294412342 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292706599 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288835663 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292771724 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292799794 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295089541 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292031767 seconds)
  done (took 27.057235744 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292446448 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295063836 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.293249354 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292722975 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294983155 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293658504 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.295913285 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296782298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29371199 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296223505 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296066078 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292905725 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290762381 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289999705 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296699394 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291861459 seconds)
  done (took 21.903472131 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.292493207 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294667981 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.29385449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295357587 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293168013 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293390564 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293722374 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29028069 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.292744912 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.296467154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.297697086 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294615325 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296896978 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296610094 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29435235 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298041485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294776733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295504755 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.298617725 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296802969 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296436594 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294188523 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298861651 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298769967 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295162933 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295468376 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293339971 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293309576 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295037254 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297850199 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295985319 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296922345 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295748625 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294821152 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297846159 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296495954 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298738692 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.299191298 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298635702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299245353 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298424542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29435745 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299772152 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.298975158 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296673169 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301045149 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297284904 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296727914 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295602574 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296138111 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298497078 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298304533 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298943583 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.30081738 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299362434 seconds)
  done (took 72.505883492 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29958688 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30013576 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296673849 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29932346 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300761592 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298226113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.30083624 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300005149 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29489186 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.2999295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299656955 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302400843 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299005106 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300462361 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299484335 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300172051 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297925632 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29776793 seconds)
  done (took 24.591826874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299156901 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299872506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301847123 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297964075 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300565157 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301278039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298207943 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300106043 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30027962 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299035779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298132124 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300376135 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301780329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.300483488 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297491106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298840275 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.302555048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.301053737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298663483 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300194794 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300615462 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301387724 seconds)
  done (took 29.805054042 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.302736994 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.301058952 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.301772635 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31830578 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.318308876 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.327714706 seconds)
  done (took 9.076371362 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309306782 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301537919 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298185026 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304032577 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301407217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300194422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300283174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300575171 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303139836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301787661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300210314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30324084 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302923435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300770235 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302851291 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30355295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301096827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302419019 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29909398 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302761242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300289899 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301406583 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298060179 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302086771 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301835392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300295241 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302026794 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296741605 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299521551 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302474771 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304294339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299546432 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29904896 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304155157 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302713688 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301631286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303566134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302041112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303054092 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300351 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30457471 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302690275 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305000921 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300913573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304028306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30183372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300667637 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301625961 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301922608 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30399241 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302042998 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302447 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305047628 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30504514 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303547688 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305027684 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303902446 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300903963 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305017183 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299578972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303156922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305619637 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302890488 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303222927 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306373985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300909411 seconds)
  done (took 87.179495014 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302657854 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300222395 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303506713 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302476487 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300708559 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300916171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301645624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302681409 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301996679 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301518056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304720833 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305455743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304952547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306072346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305726611 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305201551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305707661 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305535281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30669427 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308295922 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306201559 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307062004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305729848 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307126151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306090118 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310692941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305191732 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30686421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306058351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307110369 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306808435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304669155 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304168577 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307124156 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306380998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30703369 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306745591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306028001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30632966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309155529 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30575917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309321406 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308236264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307876974 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305235022 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30839366 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306518718 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30637878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309074503 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308885257 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307815444 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308101427 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309454995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309149234 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309113834 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307452084 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307410462 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308585023 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308667633 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311437163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30768379 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306865578 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308242071 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306288347 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306304317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307649592 seconds)
  done (took 87.428102054 seconds)
done (took 1754.87582698 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.474304628 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424352505 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309818164 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.318682991 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304155947 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330033829 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.301097785 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.304285691 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.307816202 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.31002764 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.307660995 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496035388 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.364778503 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30250995 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309259043 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.404441402 seconds)
  done (took 42.784664613 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.340460276 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.317392886 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.426642213 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334748714 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337169509 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497119569 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367510876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31389116 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483914336 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359040273 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.847464545 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333340903 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313452431 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.411548529 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326148554 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495348641 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561965029 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.855838709 seconds)
  done (took 30.137808217 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.75874499 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.33342617 seconds)
  done (took 9.307338403 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332314131 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312434045 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317780303 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.315501802 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.304931907 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302032591 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.312823506 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.307392224 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.929844984 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.432956092 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.317045067 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322866657 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.333703385 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312507482 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312716909 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353231231 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.516339296 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.30849823 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.311246359 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317560361 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.316358562 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.412255129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357923219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316298057 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439226552 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.930450527 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.320461355 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.326778284 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.503848307 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309926339 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.314943504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316348959 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.318956585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.228904695 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.747613136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.324863322 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351162929 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.323125382 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311242769 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.460861454 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311373271 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320879217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.311756782 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.741081745 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.455365491 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435425997 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.545677952 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.327065502 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.320767953 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.377959191 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319587631 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.319026778 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361949186 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.100569777 seconds)
  done (took 110.685871265 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.326223436 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.693589353 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475239732 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.334159965 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.924185492 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.986120084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324213858 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.594301291 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.355563661 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305997984 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607490723 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803080809 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321052566 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.321850416 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.939216534 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346488463 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310118533 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.043392446 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321406278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.308572016 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808639099 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314556728 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318775936 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.556240065 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340174598 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.760482137 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.722785134 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.753050921 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323492034 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.303323039 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.760293165 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325419158 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.313614002 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302569463 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.571657986 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.65617557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653826552 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.325983312 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.323795912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306689866 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.340910024 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75320739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656948313 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320973769 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304121684 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75226943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322138791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311855625 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.313499087 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507077542 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.954339239 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313184882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.667166663 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.305968212 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.60160876 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.333865127 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.310029006 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785707285 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320798597 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.389933844 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.332366797 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311444526 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307636759 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314446681 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.304541318 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.649004374 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.649987293 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314101557 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.650221784 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776831283 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32190983 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821289505 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.19084539 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.338730266 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.381095933 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310354823 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.853506568 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793372454 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.340715449 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30647974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638723493 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325007774 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.586813266 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326339183 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306016214 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830945711 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323407946 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.342142611 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.306965637 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.307087477 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.926672874 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314945478 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.578517208 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.355688588 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306937259 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.310039649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.356635845 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307831817 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.32433024 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.319438704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832237513 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.3300164 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.433321447 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325719091 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308930699 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315418573 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.316199717 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306398333 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532149506 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.767833018 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.327651185 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316817424 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308184627 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311271482 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.581600397 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.317279998 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.61129458 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.326632908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307648449 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.319500101 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017252432 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350326567 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311167293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.328196451 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.204395407 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.526810449 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335075849 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.327283133 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31552736 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332241242 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.514139981 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330172453 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.369861015 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.314055356 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005334254 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.364570687 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.335115578 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.614068612 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32719797 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.188278214 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332756147 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314693041 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610147905 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.579402283 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.546347748 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315765483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.326725573 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.996773262 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.348373703 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44879563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342002062 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.401804821 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51312234 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.487822166 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.311666015 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.911793916 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.31272099 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527308846 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325626959 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606891969 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793881127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327860972 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309145669 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011303884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.040313932 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.13943083 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.321349797 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.587848531 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.283488642 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797214648 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.316649808 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322766609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.750896329 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322332679 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320907766 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.31878391 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317079415 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.465518415 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490342047 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.96976549 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.319504375 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763784544 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342178218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31440988 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313837651 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.314795356 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.66757756 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.364700977 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.322450233 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.369228413 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.321654659 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325958415 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786918758 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.227817724 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.323718732 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470862429 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946464025 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.330357821 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321545026 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.891173478 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.517616874 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82091782 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.375537618 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626744279 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.336145214 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358816466 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891909437 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367902231 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78483558 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334006981 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.316544606 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901798869 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.331387709 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.397773979 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.318484953 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.322041226 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836299292 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330258993 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.324269291 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.531593707 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335355122 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580373971 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.325896392 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.336287567 seconds)
  done (took 1105.857399934 seconds)
done (took 1299.989583899 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.323453668 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328314259 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312068997 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.328019431 seconds)
  done (took 26.524142455 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33414116 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332383787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.333559109 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33351221 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334348929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333492457 seconds)
  done (took 9.236347175 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.370958926 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.328067804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.32881975 seconds)
  done (took 19.261943038 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535871992 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.586641165 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.650332589 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.504828715 seconds)
  done (took 10.513068323 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323341251 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.322735016 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325829117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.32792072 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.323781713 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332744399 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330232984 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325494036 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.325973597 seconds)
  done (took 13.166364959 seconds)
done (took 79.935917982 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330139664 seconds)
    (2/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350635107 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.160264991 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.23395266 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.402149238 seconds)
    (6/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.063926461 seconds)
    (7/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.294231317 seconds)
    (8/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.457138796 seconds)
    (9/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.410391905 seconds)
    (10/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343782274 seconds)
    (11/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.774973982 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.568581816 seconds)
    (13/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.513245679 seconds)
    (14/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.342381815 seconds)
    (15/286) benchmarking ("sort", Int8, true)...
    done (took 6.32460525 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372250795 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.341948714 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.327827417 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.68737988 seconds)
    (20/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.521343561 seconds)
    (21/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466453754 seconds)
    (22/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.323105481 seconds)
    (23/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.097903945 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.748151524 seconds)
    (25/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.101429879 seconds)
    (26/286) benchmarking ("sort", BigInt, false)...
    done (took 6.334629187 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.31336393 seconds)
    (28/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.336799381 seconds)
    (29/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438213685 seconds)
    (30/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.296276213 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.230570977 seconds)
    (32/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.297029125 seconds)
    (33/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.298863088 seconds)
    (34/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.547415514 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.323668299 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.323028678 seconds)
    (37/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.304775773 seconds)
    (38/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.346479183 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.426854909 seconds)
    (40/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.18125292 seconds)
    (41/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.556823051 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.954179988 seconds)
    (43/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.299418121 seconds)
    (44/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.606887405 seconds)
    (45/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.558829919 seconds)
    (46/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.30793899 seconds)
    (47/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.334012711 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.403353403 seconds)
    (49/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.481206733 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.368673966 seconds)
    (51/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455148373 seconds)
    (52/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402647438 seconds)
    (53/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.345691173 seconds)
    (54/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.669549234 seconds)
    (55/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.431905414 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.580749808 seconds)
    (57/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.34091563 seconds)
    (58/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.322798845 seconds)
    (59/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.428427117 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.120002483 seconds)
    (61/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.814006183 seconds)
    (62/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.319715754 seconds)
    (63/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.729464243 seconds)
    (64/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.16105713 seconds)
    (65/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.878781824 seconds)
    (66/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.378693671 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.40390766 seconds)
    (68/286) benchmarking ("sort", Float64, true)...
    done (took 6.33192023 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.237742044 seconds)
    (70/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.320600066 seconds)
    (71/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.374621558 seconds)
    (72/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.384365941 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.323149591 seconds)
    (74/286) benchmarking ("sort", BigInt, true)...
    done (took 6.342687993 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.322485857 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343213564 seconds)
    (77/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.323277433 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.698995128 seconds)
    (79/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.501058593 seconds)
    (80/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.690325865 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.404273197 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.303286152 seconds)
    (83/286) benchmarking ("sort", Float64, false)...
    done (took 5.589667029 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.751926428 seconds)
    (85/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.341691895 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 5.497310306 seconds)
    (87/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.371520935 seconds)
    (88/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.329584094 seconds)
    (89/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351367787 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.674990775 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.354857373 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.448305194 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.700722658 seconds)
    (94/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.909153736 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.309979063 seconds)
    (96/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.303119157 seconds)
    (97/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333401833 seconds)
    (98/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.833614581 seconds)
    (99/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.835037818 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.342877092 seconds)
    (101/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.578926473 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.233793817 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.355095394 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.301885585 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.553337894 seconds)
    (106/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.309588448 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.736253227 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.304292383 seconds)
    (109/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.143835713 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.389341412 seconds)
    (111/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404419914 seconds)
    (112/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.323830694 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.995118747 seconds)
    (114/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.340961529 seconds)
    (115/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.333248703 seconds)
    (116/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.339721304 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.120211724 seconds)
    (118/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.318041536 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.89899045 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.362821077 seconds)
    (121/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.444869606 seconds)
    (122/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.800372337 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596915124 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.678113938 seconds)
    (125/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.367018932 seconds)
    (126/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.317712023 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.326017455 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08209395 seconds)
    (129/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.30777865 seconds)
    (130/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.319143734 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.591937117 seconds)
    (132/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.305091872 seconds)
    (133/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.089504336 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346413302 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.886851858 seconds)
    (136/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.558700496 seconds)
    (137/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.944675927 seconds)
    (138/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.71671681 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436417182 seconds)
    (140/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.305487733 seconds)
    (141/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.341461299 seconds)
    (142/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.30966982 seconds)
    (143/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.261209547 seconds)
    (144/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.737068174 seconds)
    (145/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.175248635 seconds)
    (146/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.829249971 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.973729459 seconds)
    (148/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.698599621 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.105420068 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.351566993 seconds)
    (151/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.306804553 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.305872077 seconds)
    (153/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.406798784 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348788755 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.307205633 seconds)
    (156/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.520666454 seconds)
    (157/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.959499478 seconds)
    (158/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.421688225 seconds)
    (159/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.082204226 seconds)
    (160/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.429930898 seconds)
    (161/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.609848616 seconds)
    (162/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.587285694 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.213789008 seconds)
    (164/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.902505945 seconds)
    (165/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.142223126 seconds)
    (166/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.787380892 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356797764 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.308624636 seconds)
    (169/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.055227257 seconds)
    (170/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.324057086 seconds)
    (171/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.334315982 seconds)
    (172/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.800857046 seconds)
    (173/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.875353905 seconds)
    (174/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.685758814 seconds)
    (175/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.111405878 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.314374173 seconds)
    (177/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.73945854 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.355620428 seconds)
    (179/286) benchmarking ("sort", Float32, true)...
    done (took 6.328055566 seconds)
    (180/286) benchmarking ("sort", Int8, false)...
    done (took 4.379433926 seconds)
    (181/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.466703394 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.369913651 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.792935545 seconds)
    (184/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.360730344 seconds)
    (185/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.354930358 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.730910444 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.865482888 seconds)
    (188/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.151324261 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 5.432768338 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.40479108 seconds)
    (191/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.309449445 seconds)
    (192/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.337372362 seconds)
    (193/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.421103197 seconds)
    (194/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.320367331 seconds)
    (195/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.54410707 seconds)
    (196/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.445435872 seconds)
    (197/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.331436523 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.449259736 seconds)
    (199/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.846966979 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.95808762 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547288778 seconds)
    (202/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356370867 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.93147103 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743875976 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.327353002 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370021419 seconds)
    (207/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355491096 seconds)
    (208/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.839420838 seconds)
    (209/286) benchmarking ("sort", Float32, false)...
    done (took 5.319271281 seconds)
    (210/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.721778245 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370607686 seconds)
    (212/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.544281822 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.721917545 seconds)
    (214/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457662866 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.309293285 seconds)
    (216/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.327934072 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.313076323 seconds)
    (218/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065885328 seconds)
    (219/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41935385 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.310125203 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.362101649 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.432003467 seconds)
    (223/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.909325642 seconds)
    (224/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.378423823 seconds)
    (225/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.785702834 seconds)
    (226/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.331583035 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.341397871 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.548779424 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.326788287 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.313870092 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.968759599 seconds)
    (232/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.521054978 seconds)
    (233/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.319448465 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.358010636 seconds)
    (235/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.307319411 seconds)
    (236/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456777573 seconds)
    (237/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720807619 seconds)
    (238/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.635624866 seconds)
    (239/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.651217376 seconds)
    (240/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.313220619 seconds)
    (241/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.145329533 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.089928507 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.92547881 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.312374444 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.024268939 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.646066212 seconds)
    (247/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507971719 seconds)
    (248/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.324679587 seconds)
    (249/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.455266697 seconds)
    (250/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.413943494 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.144222564 seconds)
    (252/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.43383737 seconds)
    (253/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.546882245 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.114210655 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.446290768 seconds)
    (256/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.162950163 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.362776438 seconds)
    (258/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.162937835 seconds)
    (259/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419004132 seconds)
    (260/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.145541405 seconds)
    (261/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.381518963 seconds)
    (262/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.624098733 seconds)
    (263/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.335730944 seconds)
    (264/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.955311706 seconds)
    (265/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.718025971 seconds)
    (266/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.35774903 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339323723 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.3943714 seconds)
    (269/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.31210296 seconds)
    (270/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.201266244 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.458793387 seconds)
    (272/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.398875286 seconds)
    (273/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.344845921 seconds)
    (274/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.45068301 seconds)
    (275/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.688262202 seconds)
    (276/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.350838859 seconds)
    (277/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.358412297 seconds)
    (278/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.313934674 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.361679156 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.344857655 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.398282929 seconds)
    (282/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.433989008 seconds)
    (283/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.325872229 seconds)
    (284/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.165022892 seconds)
    (285/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.333271419 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.382942562 seconds)
  done (took 937.240177036 seconds)
done (took 938.472225005 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369609601 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364900198 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.348602392 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.367287289 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.461599147 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.379448286 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.355639445 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.350120329 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394783451 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.397542206 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.344157391 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.376167685 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.345581068 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.345228004 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344546929 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359215308 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.399954428 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346901706 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364077789 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.358893708 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.360516784 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344623211 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.397348216 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.377519623 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.350160766 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35193742 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349419546 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365003061 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.45888886 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.350729671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350473451 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.35668759 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.438963722 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.352722683 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.341051899 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.364842206 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.357333927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.357959515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.350435836 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.37794174 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.806827572 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.363834586 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349583422 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.34855179 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347281865 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350460713 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349128867 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.354687491 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362205211 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366070452 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.795189338 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.380437596 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353120197 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.348936853 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361734971 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347931314 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.352931366 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366680385 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.367623606 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367203258 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.42504141 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362568394 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353173151 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36618489 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356089201 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.828484624 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.362164297 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.355588263 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.807849225 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.37284895 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.830468752 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.373263268 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.351268853 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363627783 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.381517817 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.44065555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354047576 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.349840175 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356219648 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.349517291 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.363865512 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366771343 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356277505 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349836716 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369864277 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.381900495 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.359544814 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.352316521 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.362962342 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.370681925 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357743578 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36111386 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35806034 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.352498849 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.360043058 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.355248712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.354127217 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.355211131 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.356899768 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.363800538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.805623819 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385913205 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.350288499 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.348199635 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.349935423 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367834066 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.809527631 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.368916216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.374928966 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.401368532 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.353005758 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.424578979 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.36357268 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37100314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.362831245 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.355084603 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.349257406 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.389199649 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.797875637 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.383969511 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.356100294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.351429733 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370718269 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356344303 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.349084956 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.404616729 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.35539276 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368423491 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.474395739 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.370468167 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.386728622 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354865156 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.358940059 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.379690183 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372559247 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387600753 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.357418966 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371154326 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.371150823 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.350317137 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36692504 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366038769 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.354642154 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.362600383 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.349444613 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380617686 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369103875 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370761095 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.375750046 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.47583681 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353979974 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.393619154 seconds)
done (took 228.654816499 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424681467 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.356360078 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443738825 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352370697 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456330709 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.453275719 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350170676 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.350101802 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.349895184 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725647214 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3518632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.35090585 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.350707127 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352584019 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.438609164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353038515 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.352291806 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.692292103 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352470055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427344853 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.349196152 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.351889367 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.353388808 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732559594 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.350412464 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.348990665 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.427641638 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353241908 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697972085 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.3519254 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.354367223 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699361409 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44611139 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375264569 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363894068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362406026 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458693555 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37384966 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43839832 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437831125 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447821512 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.392591836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.351969091 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358545878 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.354682826 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.355119437 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355816419 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379839374 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.351238225 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354207847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69410404 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.367332838 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.352633644 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352465607 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353631205 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.3846456 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.354567086 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356683041 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453543887 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.357542747 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.424040365 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.734250408 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73075936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.356435168 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.353660089 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354339854 seconds)
  done (took 149.853465377 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.423412174 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42800394 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.468874839 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374689471 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.407197995 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.473544699 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.372857869 seconds)
  done (took 11.212017761 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.362041026 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358125264 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.407249204 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407218467 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358318837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.535159021 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358854699 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36964354 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355521044 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410602693 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360331116 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358984778 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367592418 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.351826261 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.407041401 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369654355 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475535001 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360374098 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361984327 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.507643849 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356015336 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364961136 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.411139061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.369335863 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.3606257 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364631218 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.169922842 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358917948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357344034 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35877941 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357257677 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436080157 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359136225 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.355528845 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356564212 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474648044 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358051271 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356549088 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359934347 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.356386996 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359990169 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360161018 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360152329 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357580125 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.359680992 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.383473163 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.361322916 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.360461555 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.358994828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361348129 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411781489 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362072868 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357456808 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357338657 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414338628 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36747849 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361075914 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362724058 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.362139273 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358137226 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.511046719 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406606413 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361492859 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408074604 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36359424 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361830975 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.360131257 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360498016 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415749316 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.361836699 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.40958467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360140914 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549104929 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385935347 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364413298 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.363700129 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.364210517 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36150073 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.357545779 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367466104 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35914975 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361186505 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366665085 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360664285 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359536045 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527814726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470933359 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.360223878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.374356882 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.369025746 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.360296735 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416279956 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363070387 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.359343697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414467942 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.483672979 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.415398809 seconds)
  done (took 156.206728269 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.367107837 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370036981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.364195857 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38144154 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364041557 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.362248203 seconds)
  done (took 9.478541455 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364917505 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.364106142 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362187886 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.36302424 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363035408 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36917901 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363525495 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370027772 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367716202 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.368808499 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.364879483 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365436118 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365219598 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.363786048 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.364511397 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.364807602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364030856 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36519653 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36343519 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364203008 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.467856949 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.365357025 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36664523 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.365618356 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369708449 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.363848842 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370573803 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.365662246 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.369000574 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371251872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385318799 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.370118331 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.367181964 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374411363 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.369476806 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37222635 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370221456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367309705 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369780951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369246116 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373261507 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371758819 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.371897121 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36703956 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.368996909 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372834471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372931018 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375079517 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370140647 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.370623235 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.372702095 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367568724 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.369336448 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.366783469 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.371558435 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390023962 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372194722 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.367949437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.369881272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367807452 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.370453627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368855831 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370138279 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370378795 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365680845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.370473498 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370167231 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373780562 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372305017 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367535952 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.370082215 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364022641 seconds)
  done (took 100.929487262 seconds)
done (took 428.943570754 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.846198555 seconds)
  done (took 8.120359542 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.524364256 seconds)
  done (took 7.798082643 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.2263519 seconds)
  done (took 22.505415925 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.459362729 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.378076494 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.398443493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367648259 seconds)
  done (took 26.878665791 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.924487133 seconds)
  done (took 8.197783993 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.372002912 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363101939 seconds)
  done (took 14.01247675 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.427506871 seconds)
  done (took 7.700366228 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.392915435 seconds)
  done (took 7.673506004 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.368401813 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.386167706 seconds)
  done (took 14.042824034 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.343362767 seconds)
  done (took 7.614870934 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.42397289 seconds)
  done (took 11.7014171 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37754574 seconds)
  done (took 7.655815764 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.383704327 seconds)
  done (took 7.658624007 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.54023538 seconds)
  done (took 9.815670725 seconds)
done (took 162.650839221 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.364415551 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.371272714 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.369574258 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.369151767 seconds)
  done (took 26.747728908 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406910607 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420150788 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.406217656 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414538139 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406475474 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.403890632 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.397537875 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398153949 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.41532544 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.406598805 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.405954571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.406339607 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.405743836 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396172338 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.407880003 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408018546 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.413104038 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404796985 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.396566338 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41013364 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373758313 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.41492988 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.40888016 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.371880922 seconds)
  done (took 34.977494343 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.895118989 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444256679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.525333764 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.424928669 seconds)
  done (took 7.566548985 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425667656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425857549 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.436726026 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.473589561 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502519941 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.434514744 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401533353 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.392589566 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.382725188 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425333395 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498229098 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.443703479 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51098307 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372477812 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.560263668 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372185438 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37603763 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.423472914 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.475662916 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49448278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.37292172 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.427955429 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.430177504 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.4443807 seconds)
  done (took 35.780555252 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.376466199 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.392116 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.372534957 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.370791607 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.381676305 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.374520043 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372615102 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.373579161 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.372591419 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.378626559 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.373148776 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.386783813 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.37455224 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.373492939 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.380028317 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.375970243 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37749276 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.37378607 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.373892213 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381292502 seconds)
  done (took 28.812531255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.368196132 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.320944681 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718540154 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.623597176 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.369915503 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376213763 seconds)
  done (took 29.057163376 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445005418 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.607144239 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377424569 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.740182279 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.831085057 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392120607 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.375075015 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629156101 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.966697342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.950971908 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441032225 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.454382315 seconds)
  done (took 20.490370218 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.376496323 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.376564049 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.392003974 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393250791 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433205062 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.404177265 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.382641493 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.368384293 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441172784 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.460875052 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.403690023 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435275308 seconds)
  done (took 38.149754026 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459417613 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414003569 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.374356841 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454651203 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098185844 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583053878 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446053001 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093877442 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.395794853 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656486164 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382654688 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471575022 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63694736 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380815462 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38437604 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.383586615 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623438305 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892217988 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383145018 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520694547 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408971349 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382434915 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.632544597 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621776356 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604650389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358376185 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640790998 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162103137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67831511 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396916351 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394131801 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385223846 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658643965 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056429547 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487573057 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.599774404 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40921701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016434007 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.382937564 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.523536226 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386702096 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402905357 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394523905 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383525389 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318753132 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396399153 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102063056 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.400796468 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.096724963 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382688195 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651234286 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480998987 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.383675961 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.954811267 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408764107 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414341154 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387652088 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477905607 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97466605 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.794830193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395357444 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.316557 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381549464 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.545270002 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036309738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.401635034 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388121184 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383805014 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317042648 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.50269595 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403850726 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527415439 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402914156 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030839709 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114406612 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405859528 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311156642 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937456028 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383523574 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.320874692 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60761611 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161370604 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321780617 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.324305242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317007175 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118389446 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395001561 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.970048125 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409197802 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118077414 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.617183074 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412545879 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409191076 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610048093 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.25996463 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38588049 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.393715067 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516519613 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403562805 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112401131 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332725895 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383843122 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64355487 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593953232 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384699746 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391460766 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887993608 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401977726 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.403161442 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.394679463 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607641663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.998840363 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420779075 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790571252 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407528649 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165251754 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154970741 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390952094 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393105824 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389511506 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675501037 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.168883234 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.27424378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456277662 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396538055 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389908098 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.573566524 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.239584555 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.288653302 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.589214798 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407709739 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.400243746 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.387459216 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336289585 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.381622825 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390636173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.167314269 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61403416 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3850044 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668386304 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324292956 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559713846 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410060974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607447153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.642011192 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.413815757 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649750037 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389984585 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391837099 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403035744 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40560888 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490146907 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411802744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.397462366 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644953862 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.38787298 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.38886607 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.566656835 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171402152 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391074929 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391779238 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389032585 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012761098 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388025685 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386547719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280165721 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.398525385 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456947905 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394594925 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611121558 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.720171134 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41070236 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39111853 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.402828797 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608169464 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398390436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.530784718 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471424707 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.870662318 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003585003 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421420722 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.328183423 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.099476039 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.082908608 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391139636 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584228646 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389736742 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612888218 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416181459 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401228389 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990391954 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414078096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.499410889 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.392439019 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405513586 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.3953041 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394701148 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.695794723 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.842389143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3958382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.421386639 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531731821 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.402666416 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324401873 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909345853 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400042698 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389384701 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.17248389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425075657 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.561651537 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210112961 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664587794 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38989172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662748725 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.666513055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429479899 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.39884085 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389393058 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406185984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.413391632 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402840252 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404381003 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.542401022 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833730103 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956745849 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159527456 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968714031 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.719761178 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.410980203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278785481 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112999839 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341300528 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046309626 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637425694 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13113502 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353235452 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874247616 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.671175925 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216495036 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666974062 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623379963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.69301922 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.410711502 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669383525 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609663265 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427413221 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409112873 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324376533 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.908218352 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96166128 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416844959 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475641106 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116126492 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412325806 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175581964 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.422273479 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.167234692 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826798532 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95758593 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781577652 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39604547 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397653731 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21324217 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410647042 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923107378 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040851917 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409133767 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.88117813 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34547269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.620010995 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420694707 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.392720974 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.071080466 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.405870021 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.652677308 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665660096 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3367596 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407823088 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960542185 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.271602723 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.399055758 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398094276 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172775167 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408567307 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702234877 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.412946783 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.722756799 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424338587 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329648278 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332287911 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.088175858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399458238 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374231151 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906919501 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.405787168 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408503742 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403258304 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261432035 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650686322 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407439267 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.002050001 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643670955 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40862505 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416997043 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.40367057 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405297991 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381176699 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281432156 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631931469 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449007235 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643310893 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.434043779 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.301585434 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.894070349 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.612218848 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295476027 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401023647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661187983 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.122157108 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.403377856 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114824416 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437387682 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399666679 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41333978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39256454 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415335735 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492738777 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622230118 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.425496039 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.405684468 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814909935 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423628149 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396958025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414649909 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494893542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.865343376 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.734798062 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.175232996 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007753877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189907267 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.031676442 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695956012 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406805872 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400454882 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3367364 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545066827 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.927237086 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674864384 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.535210537 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.399930176 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426951864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404451748 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40652058 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637089856 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673711807 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270778846 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410375613 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06357517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.300079994 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416262763 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.613140906 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922978994 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997951226 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.790651857 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40734759 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138139392 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692740807 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490376575 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402950716 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990677171 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.415587967 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.175977951 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411786436 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411740453 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55257581 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671678347 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085219325 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.428835352 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.562920394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176364602 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.607840964 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659726049 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.899628026 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.627122249 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033825729 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154128328 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671684299 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469097613 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632693149 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535850621 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547007018 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.411160837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296613079 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402354742 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249352938 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.113008901 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408334116 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017566664 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690522671 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.402886443 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.412105638 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431037887 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.409141389 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626489462 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144307747 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632033291 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416789235 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414529239 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.979533291 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019284124 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699955478 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345411034 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40416404 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658288186 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657569748 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42941651 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.859141761 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.119316531 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975486168 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373998247 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423484442 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410300791 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14579949 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026470104 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.770051204 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934458754 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061405938 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410112812 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684473719 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41339924 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415195499 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686981817 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.40443355 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408780011 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653617665 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.028872814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22987234 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.420898277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.6855531 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.338672424 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.632221336 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448543819 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346633723 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407132702 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.83394156 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424846543 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540825529 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414586676 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420641612 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409776788 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.162448484 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694505005 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410121781 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.412228989 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.398299864 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412888991 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504244385 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984591278 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424030011 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085715928 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760781976 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.666721502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419542177 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.390436892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.413035685 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406506563 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128840343 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37508634 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41246747 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973954576 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.423647336 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.424074941 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.417355322 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.627822009 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623246431 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421984622 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629915144 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433696487 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430273564 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.31314537 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.190723124 seconds)
  done (took 1692.04336254 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418729766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441321873 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.428372122 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.411737324 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444061533 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.503438427 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.415520871 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492162701 seconds)
  done (took 52.872523085 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.424186532 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.575548013 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.440956898 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.43047203 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.426688023 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.425753126 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.887716692 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.436641643 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.41984775 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.423675712 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.417175383 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.421408288 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.093671044 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.421077108 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.429855936 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.414954572 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419524015 seconds)
  done (took 66.82845881 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.635880012 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.525677921 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.48054146 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.427588808 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.425228575 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.415989281 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.535488456 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.4385322 seconds)
  done (took 54.204457581 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436720756 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435869178 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433727664 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435669496 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.436864917 seconds)
  done (took 8.496007394 seconds)
done (took 2097.306026015 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.421122677 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.423584976 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.421230733 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.424144461 seconds)
  done (took 7.006110237 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.399149423 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.133827666 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.399418182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.414724934 seconds)
  done (took 18.664319091 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.423809784 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.411890762 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.142113293 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.061159183 seconds)
  done (took 5.523706453 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.167654867 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181051208 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.165469957 seconds)
  done (took 7.832328835 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.415981801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.418940889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.41980777 seconds)
  done (took 20.572735693 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.717539136 seconds)
  done (took 3.037350064 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.565837453 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.615233272 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.734662016 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.742292984 seconds)
  done (took 7.978681691 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.807251795 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.800127039 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.60137031 seconds)
  done (took 6.5273981 seconds)
done (took 91.298227072 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.339630403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.417801908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.63065703 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.310939482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.647312897 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.631364534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.62251316 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.277325941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.986053768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.814901329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.30281928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643823328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.56807702 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.427180918 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.569481045 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425240449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.650120835 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.381079051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.984276075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.186569894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.617412775 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.949321439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.134377289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.138450321 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.652896648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.581694495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.527779588 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419512651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.164586653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.722286552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.583104242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365865877 seconds)
  done (took 193.993880135 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4195941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.4291791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415894066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.44419015 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.428407899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422329641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.430021326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.428746052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414942001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424151452 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420615389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414242927 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416057613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.41508303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.433386145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.415078789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.429979664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439251118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415325969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431402079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.416553497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426052795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.42928306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416412025 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415077699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.430377402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428660834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425187348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414850248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.415404993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.416414591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41569857 seconds)
  done (took 206.860274642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.431493357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.424048881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416833408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.415629237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.433545806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416741486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414851076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416704382 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418193115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.416420485 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425189735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415677891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.418345658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416450608 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.434636483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436244956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424121242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.42571669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417825027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.441370669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419309245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417329456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.440407291 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417470193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417843653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417651086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424322264 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417233009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428207106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418304749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.435438498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418150049 seconds)
  done (took 206.855929912 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.628313676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43086512 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.432352914 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388975684 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.433848141 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431996135 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427746479 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622641991 seconds)
  done (took 15.122925864 seconds)
done (took 624.154509345 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.725805002 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.443535286 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.634831576 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.448666486 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.246646608 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.461681281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452353708 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.633036736 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.34815525 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.63018668 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.674897004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.460121729 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.828764866 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443460268 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.712630703 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.547535288 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.33691129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.446586271 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.770881413 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.991428086 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.714392878 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.962702019 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.647501234 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.346127069 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.835034751 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.936625082 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.177887303 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.298998769 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.461281228 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.779837578 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.083716288 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.472539037 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.519992577 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.5150217 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.572267882 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.554498547 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.411336412 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.504879824 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662126398 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.68254681 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.020522892 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.167380562 seconds)
  done (took 95.892198746 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.41713657 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.418080988 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.416349071 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.414675257 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.418389682 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.414871258 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.417711485 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.416602532 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.41769407 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.417578708 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.414933675 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.418984879 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.416069201 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.419283407 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.417957422 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.418468997 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.419036605 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.420616828 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.417496509 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.418968593 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417250157 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.416808953 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.417969467 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.41714868 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.418191328 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.419098253 seconds)
  done (took 38.186233252 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.436237321 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.687349929 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.848603183 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436177798 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432184241 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.442278319 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.515426391 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.437940912 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437662917 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436814268 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.592831292 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440455926 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470758802 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.892562588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44258244 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.437745114 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435069996 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433095431 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.702510775 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448304511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.543928378 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439639443 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.522162238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.448766246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.463381724 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439372314 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444345724 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.036574746 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.457304312 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.597539004 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.258113362 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.517181328 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.973772905 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.89547813 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.259579973 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442246907 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440551654 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.608778982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442668531 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.439709941 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.522937557 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442315418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.873899069 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.128586423 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.459264405 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441022272 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.056757411 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.621056585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.695857429 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441257773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895428151 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.445041413 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.440692483 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.442219965 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.691785131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440884152 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.441048189 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.063866871 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.46639512 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.522557801 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.442147858 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.44090857 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.707537111 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.441546918 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.693779733 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444325471 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450583412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.460005026 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.876508479 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446140499 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.15314718 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460406173 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443417048 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.601245179 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.697216202 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.085741693 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.463227289 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.709193535 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988269564 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.539182699 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.44640583 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.025371248 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.535413048 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.445803844 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.440109357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438596538 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437839922 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483367979 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.519057072 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083584489 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.159583704 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.090191974 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.544409568 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.456463273 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441965162 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.063892972 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.464708236 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.443629014 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.872028849 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151798676 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461845688 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.452315171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.153365486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464558356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.528031703 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451909552 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.885640127 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447265306 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.487060828 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.445554235 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451173022 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46603245 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.52799355 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.448739888 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.446133645 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.121545403 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.628684513 seconds)
  done (took 189.90118753 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.440410254 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.450365831 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.439859044 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.450898107 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.439064108 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446295554 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.438591948 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.44150663 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44527775 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.440619144 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.439995123 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.439126825 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.441401158 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.452471694 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444903296 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.447578067 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.048437721 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.440188144 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.442482476 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.448835036 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.245280345 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.440469452 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.441669937 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.448444703 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.442612842 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.440081636 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.446395999 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.436282156 seconds)
  done (took 155.158160307 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44871867 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.04507204 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.466612174 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.583859012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470484792 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.443498063 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.582392434 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509927311 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458521627 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440035688 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443074245 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.769225171 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.450575133 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.974290847 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.638038993 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.602942808 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.969663629 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.45669464 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443512118 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.445397202 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.583576248 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.44871934 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.769373388 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026402719 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.459042451 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.052555028 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431554121 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.444811609 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446375049 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.034500446 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.455191977 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.77392326 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.530872209 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.511756894 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.041297174 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.986068158 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.989913851 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.594170281 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441458965 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446017059 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.446464838 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.43116792 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.029034281 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.458742338 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.448259131 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.016711769 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.461234005 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.448263958 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450619072 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.44671081 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509211829 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.518914679 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.774431174 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029080426 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.540779343 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.462395202 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.584506927 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807145784 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.444384262 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.979286139 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425573199 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.030723181 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.460481921 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.431622773 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.450069146 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.455722485 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.607855885 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.588994257 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.999098038 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.468765623 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005934505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.623228182 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.450421904 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.449610725 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.452802849 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037338012 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.015877906 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.624464407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.593172177 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.654526116 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.434534071 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451582084 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435049314 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.533051517 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.452066511 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.036456419 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.016179045 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.469577834 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452979139 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453660647 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.45152021 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.634614105 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.051647105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.54377892 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.996886543 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.798653303 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.782672221 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454753043 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.514501357 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.460337807 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.783306982 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.4551153 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.514021129 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.871199143 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.775174385 seconds)
  done (took 172.389081668 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.699449355 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.716256438 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.54839388 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.59307367 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.074122485 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.046959758 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.814103202 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.597366319 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.562586452 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.709301517 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.667801087 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.551127789 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.674592174 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.526530662 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.186410758 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532176771 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.555926635 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.594818258 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.609117856 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.501546903 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.145588208 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.741652951 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646746928 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.378724621 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.549693304 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.254028574 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.010828136 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.983867074 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.62784233 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.808249352 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.001439299 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.602145184 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.477876935 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.180438565 seconds)
  done (took 69.518560675 seconds)
done (took 722.372384277 seconds)
SAVING RESULT...
DONE!
