cset: moving following pidspec: 1712
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246076533 seconds)
loading group "string"... done (took 0.467110178 seconds)
loading group "linalg"... done (took 7.602978117 seconds)
loading group "parallel"... done (took 0.172105317 seconds)
loading group "find"... done (took 1.160825418 seconds)
loading group "tuple"... done (took 2.116501309 seconds)
loading group "dates"... done (took 1.336213548 seconds)
loading group "micro"... done (took 0.247712843 seconds)
loading group "io"... done (took 0.653720681 seconds)
loading group "scalar"... done (took 41.950272774 seconds)
loading group "sparse"... done (took 12.555484422 seconds)
loading group "broadcast"... done (took 1.116663592 seconds)
loading group "union"... done (took 13.607509957 seconds)
loading group "simd"... done (took 4.748441625 seconds)
loading group "random"... done (took 9.59177152 seconds)
loading group "problem"... done (took 1.9774938 seconds)
loading group "array"... done (took 22.403078174 seconds)
loading group "misc"... done (took 1.432465266 seconds)
loading group "sort"... done (took 3.565051883 seconds)
loading group "collection"... done (took 19.312715007 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511752186 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136966603 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132051069 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146190938 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20191096 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142715773 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156450034 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112859186 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.996083878 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18673888 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153084496 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.508220822 seconds)
done (took 5.136248896 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263199964 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092711107 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102465091 seconds)
  done (took 0.87598393 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076865157 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144147445 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092774699 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078697433 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094140233 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077061663 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094197794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076590999 seconds)
  done (took 1.338933551 seconds)
done (took 3.242729866 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728169616 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28556878 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201494878 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45844921 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195393467 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211454821 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.716609738 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.384571809 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251799869 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100151842 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142907402 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38697341 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135090658 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.720499462 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088912343 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121874189 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185502231 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.491358349 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081767849 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109572083 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116898419 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143379692 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129141751 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08982555 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183921166 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081014373 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1926255 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108583336 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080435693 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287758495 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200301865 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.743767193 seconds)
  done (took 11.071465496 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111768459 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132200891 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097748241 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136929181 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13263596 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098824955 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083346557 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095476388 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119651317 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17480764 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113553079 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134413485 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094028486 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081731771 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113614362 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24223188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122123197 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103441296 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099006639 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.101716061 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120207083 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111966425 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107499873 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091993777 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16454486 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220163861 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11045605 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12444469 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095272866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114615873 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143710974 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142077368 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094646533 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080097431 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172079466 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122995603 seconds)
  done (took 5.100185364 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185937382 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119597058 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167747204 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153423726 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161818724 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140756095 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159940195 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113223258 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244192874 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110824785 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163631578 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142031785 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116928398 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079670942 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097948729 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094888297 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.636722255 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163721271 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135671091 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114079098 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102900108 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083646718 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.724259737 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105182545 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080116275 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098050711 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065270595 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158292044 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099168327 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141536539 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121780916 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082702102 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139025208 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209997514 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07901834 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1249209 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134512111 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080613111 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095204986 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178819885 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078005459 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104738256 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079353533 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121121993 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134414809 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134039988 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096700037 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080981089 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204869349 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09597913 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113042109 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.963320248 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184792778 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091744588 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096981623 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.326514918 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098514474 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097962127 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076815563 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275959479 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181825739 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097875912 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079811057 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096307866 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081675899 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.75733208 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081796651 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.110347259 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084449069 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107155397 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083291282 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096751591 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102987735 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086858104 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114995345 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079147629 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099524102 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079121971 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096308983 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08186001 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109060464 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100884969 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080220154 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164710478 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080518409 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114284715 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127482016 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08354278 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095126575 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129758787 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083329228 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097286539 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133071116 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080877324 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109030763 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098441239 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142368365 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080712772 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093443759 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.162319587 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095660474 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124322603 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099278384 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113678129 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111589031 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098642375 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084239641 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095585232 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077282363 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164982457 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079683785 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097473676 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082051223 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110502298 seconds)
  done (took 23.687609174 seconds)
done (took 40.540043826 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.330891999 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101855925 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101540885 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101409172 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100046512 seconds)
  done (took 1.490460173 seconds)
done (took 2.221709191 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288266855 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171409037 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094714779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166766674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093425172 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173925703 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158994894 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112293933 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219224109 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076919928 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162519844 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09456607 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077073987 seconds)
  done (took 2.642796466 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09517593 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114879591 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082596083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110960928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075924736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110807995 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09299242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11618427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10968495 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085605938 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093141731 seconds)
  done (took 1.816769934 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094365883 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11292917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082069477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11012861 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076352652 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109969099 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092303657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115452615 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109565284 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086015397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093757085 seconds)
  done (took 1.80806986 seconds)
done (took 6.986695757 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090477202 seconds)
  done (took 0.812389166 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919546536 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.95338897 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11282089 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149752616 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.29929952 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191690583 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475035298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126593046 seconds)
  done (took 11.160825118 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144669442 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083658383 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100382732 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08618059 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103844647 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085544644 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100512596 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101848631 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083017294 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100111743 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087105927 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097917844 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098037919 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086119774 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099181579 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082854563 seconds)
  done (took 2.32950142 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11969668 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118548388 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10591833 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108905507 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087020743 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10515677 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10628328 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089154632 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101257633 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102883358 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090182996 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105696269 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102998079 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080648953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106113191 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107843222 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085606917 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10621629 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105655365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090565277 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106317722 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095451232 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087062226 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106360894 seconds)
  done (took 3.255304184 seconds)
done (took 18.285698397 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158789107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108585731 seconds)
  done (took 0.998944173 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094144898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112249751 seconds)
  done (took 0.943017279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097330281 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095489546 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122256973 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109889848 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079788894 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095661832 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119632553 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080275053 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096146386 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081560607 seconds)
  done (took 1.718170954 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081676615 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109229947 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102002954 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095140486 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104564843 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094825865 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086680499 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098308163 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109313242 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075997499 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102703154 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114481559 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086479961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115100155 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104877997 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083346189 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102190014 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098383618 seconds)
  done (took 2.50537745 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079589717 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097567652 seconds)
  done (took 0.916910367 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082008173 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093869376 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081257511 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09786672 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094397195 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077658421 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094641193 seconds)
  done (took 1.360971955 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.471285847 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1364751 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.254384227 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08513108 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119499496 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303989768 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097983316 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083867428 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103689576 seconds)
  done (took 2.451993848 seconds)
done (took 11.632506571 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092446169 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118152958 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113320723 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466421527 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107025721 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097914482 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160912233 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251360214 seconds)
done (took 2.151784287 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152822272 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328686602 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114265554 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067938413 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095884119 seconds)
  done (took 1.353503946 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080088055 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100538645 seconds)
  done (took 0.925522958 seconds)
done (took 3.18208077 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081251292 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129310136 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080281178 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097017237 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080018082 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096533242 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078590934 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098996103 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080535315 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096029976 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096697116 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081110604 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094729902 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078007558 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096338072 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080509071 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094396504 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077835971 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097113183 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078332107 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094364803 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079669768 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094338661 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077540933 seconds)
  done (took 2.919365552 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098565188 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099331961 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102981338 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08526752 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101125841 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085294481 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102595977 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098249276 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086065211 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099387241 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100502668 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084304353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099448323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084320334 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100013352 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10089265 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086473877 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0981667 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08350631 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100501818 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103205848 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081830627 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100889711 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103178628 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083858634 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101038128 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083438664 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098221443 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103484183 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085047733 seconds)
  done (took 3.591472124 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084397174 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094976904 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078045514 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102328147 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077998692 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097667792 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078063197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096040147 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079392512 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094870016 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079275014 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095616939 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078456993 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096211521 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079814591 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098441499 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108169774 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077966336 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09569244 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078767419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099226746 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078352115 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095366666 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077786025 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094870182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077473986 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095213351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077981562 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095688774 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07775317 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098673079 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081955526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096124742 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085750969 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098555981 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078144327 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099294123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094644604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07948114 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095345873 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07856517 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0958202 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077978889 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101877481 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078274229 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097606284 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078251378 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097475064 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079494061 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098569224 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078153946 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095496585 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079732228 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096471128 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09956698 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077988093 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096506783 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077620003 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096706508 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078698156 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095715944 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078385193 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098338755 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079671984 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110858308 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08582274 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095222376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079850433 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095832796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081247981 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096532686 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110746267 seconds)
  done (took 7.1737995 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083169403 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107106534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080552055 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09796137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076593028 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096787114 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098914107 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078821606 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09790943 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085484535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095884485 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080342597 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097612195 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107894041 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078578902 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097196983 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084900846 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094305771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079692709 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099839447 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079250081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100278475 seconds)
  done (took 2.754488967 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208052233 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106360452 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14158026 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108172173 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083660036 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107168017 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102335969 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087418674 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10338842 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0847652 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100725416 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102606338 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083783844 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100877723 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101620191 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084273363 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103049217 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085213983 seconds)
  done (took 2.654013004 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09368772 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098704622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102287929 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098689992 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099430444 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084529867 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103827892 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107332905 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083658237 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099150375 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091328065 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100380167 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102345647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081038401 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101938236 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081834757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10105817 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082190283 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107282336 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104932177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104508456 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090782266 seconds)
  done (took 2.882191625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096226251 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100846996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118529836 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084580131 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095434118 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080751158 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105471786 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081826056 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108074881 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100553614 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081974362 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098091071 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088247258 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098441711 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103824541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082139818 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101196555 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082470319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100678074 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077306838 seconds)
  done (took 2.649747877 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101855796 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100799168 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09931747 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091879527 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100982817 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083143417 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109134141 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100010909 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082164181 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124839421 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100600271 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083764092 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109236249 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105914722 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099845605 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09219711 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108957383 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109583975 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083929989 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100055922 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125165075 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083031392 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108717333 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.213203419 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08311965 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101179868 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100736177 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088204555 seconds)
  done (took 3.656428586 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081118095 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099061755 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079026836 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096978052 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079171083 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097362052 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079012635 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096709375 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081192321 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096806281 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080961203 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100038616 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081495414 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098721113 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081570272 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099391427 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082975661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096027561 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078448836 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097058179 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082810896 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099543754 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08196129 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095842084 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079540881 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098606919 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078619334 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096676461 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081357045 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095783533 seconds)
  done (took 3.440656776 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090450538 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106496624 seconds)
  done (took 0.964788403 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079125094 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11596832 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079539354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10277463 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086926258 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100601016 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107469941 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086257122 seconds)
  done (took 1.525761155 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096519863 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110855793 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083277043 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112353867 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110444533 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094707483 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15992353 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100505389 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087680459 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097765502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113006239 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081075938 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105181403 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081697622 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105203658 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088896111 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097126703 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087232726 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101288145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098089701 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08303424 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110598029 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084852669 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097028322 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083072504 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110608679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10906666 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083793978 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103656451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108454196 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087355499 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094517542 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083122748 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101705282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080629802 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108139849 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112402575 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084267211 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108858995 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083729732 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109990807 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09618987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087367621 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105548444 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092400211 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101069234 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083726165 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095066067 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097077125 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084658658 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096503633 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0815261 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094195691 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09016902 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104222974 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113608216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080964907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101865058 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085306498 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103355706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088082959 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102198951 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085353324 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.1001123 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107781019 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086071044 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108238184 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077348936 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094088392 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080396702 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108473021 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12274328 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0899219 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10140901 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083764608 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097190983 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104196196 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08355916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107996335 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090403784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100444597 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10720236 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089837946 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100582376 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084988198 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108807192 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098499252 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084861153 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098521952 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096419237 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099509897 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080592942 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097427652 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108538574 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086062868 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100157207 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080909595 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106765451 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079930214 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101563844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082820763 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100538172 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110136401 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088215415 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106734084 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10823131 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090340666 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100675772 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085899232 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096476996 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083951972 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103356729 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107053107 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077242666 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103493934 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084241575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101824556 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090197317 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098183331 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082541072 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108145629 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10745514 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081010001 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097045412 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08499373 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100592487 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086600493 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107607102 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099929146 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077849708 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096850906 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087347081 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100846322 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087353345 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106395773 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103779895 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076731446 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099180525 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08696831 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10779019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101559071 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082491925 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105078044 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083852598 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099194767 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088708613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104027687 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081517579 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104882278 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101767633 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078345747 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105229739 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085808541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09920343 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08733922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104649883 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103878607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083380315 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099780824 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088339372 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102202526 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081958101 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101052202 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099627784 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091697676 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103279074 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077825262 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098009514 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091184902 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098962745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08230212 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099389092 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103504848 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084121176 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100095003 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.08226984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102415566 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113115838 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087147427 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10329466 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088673696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111343497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082110601 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103338917 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100929864 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084123062 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102352617 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090267744 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10653255 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106879609 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085350609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097832649 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089944581 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108897685 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082594346 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099283666 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082392565 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104485738 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10797121 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08692992 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101394106 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081484747 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102244907 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106603357 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085874267 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101265839 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081732623 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10667625 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082203144 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107667418 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102618831 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092951234 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104498347 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078131163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10517554 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099497321 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089310139 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09626928 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080984356 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100201543 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084841888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100450764 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085750726 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094885432 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089983875 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109000522 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101548268 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082291787 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101798117 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092253172 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.1030249 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08650792 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10507766 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106637609 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096722529 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100262838 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086897587 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111099256 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101753903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077296524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107774505 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081606791 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100867855 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08191107 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099808585 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086385276 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109660098 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105909573 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076977236 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104973094 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081530239 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101119025 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07871728 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107538065 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10580085 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084995041 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110503482 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084865045 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10297583 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105822651 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083449873 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102485191 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084858877 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10465645 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083519144 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104278578 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082108805 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103074517 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101291475 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081144486 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103619161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083970776 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101710916 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089283422 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103856682 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082546945 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103884861 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102986868 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084291312 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102370398 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082994475 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104764194 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08356601 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102109371 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085063123 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096941003 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109046936 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083356234 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109670171 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084401145 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098245034 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088854165 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105812997 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106476726 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084504936 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102290229 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084726595 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101187157 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086490628 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109762753 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099176667 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092571869 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107198318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083495882 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104316003 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083464073 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104510524 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100922341 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084709879 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102718659 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084032677 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101779236 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088172385 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104766544 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083956776 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104405806 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103113803 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083420564 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103972157 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077676222 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101783205 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083255887 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102685954 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091078647 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103501274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105153654 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082834668 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103422853 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0828079 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098654548 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091188022 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112273945 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102994991 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091392104 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101283768 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084647959 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111172032 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096665773 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082300579 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100564982 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081385621 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110035223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084833203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110273704 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102515632 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083676081 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099775358 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08476928 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100510919 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078678317 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100355006 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086656674 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104817812 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082308221 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102518325 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086593369 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104342849 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109910326 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083125743 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104329238 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084371259 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100284397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081729724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10203206 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104980685 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084935722 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099931841 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081218842 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102068994 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085612407 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112591547 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08387184 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104221752 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091397045 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102467953 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105374103 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087844451 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09683187 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086450952 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102357323 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083590623 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101957621 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106355555 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087190323 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10467938 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09101411 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102048377 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084909659 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102654686 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100710891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083164067 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102961816 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0847831 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101881374 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085116126 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111406762 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081203959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105504788 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102000641 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084181393 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106715264 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084761967 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104910097 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110765547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086540693 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104318382 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090225339 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106382825 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087163772 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104512791 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103851728 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090289743 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101623475 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091925468 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103490154 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085347291 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104452935 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081436497 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103074989 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102914258 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083080315 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107553615 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085043222 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101988135 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082844919 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100425173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085348587 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106438783 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11103584 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086007452 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105600698 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078910269 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100150201 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084876807 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10064529 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085362065 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106565545 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108945112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086525017 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103682092 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083116045 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110520679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109448579 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08852996 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100828255 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08807076 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104186742 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086307557 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103910583 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084445803 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105004179 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108505601 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085484396 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102326928 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092354047 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10664674 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08535682 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105719718 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103395442 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083906357 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098300523 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085032527 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104848498 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090578075 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105225736 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102697635 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093576105 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101498906 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084157665 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107734155 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08333682 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109213902 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098601605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084600711 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10387524 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085639727 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098418918 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.0836197 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101840687 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08683975 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103091556 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079672947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112913942 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111596401 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086862739 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101780019 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083854425 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099392036 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079548966 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10210968 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08647231 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105590672 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111908296 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083508674 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10159357 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080120612 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103299238 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087090802 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107166037 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081444718 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099672174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102198016 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085871899 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109545281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082834551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102702311 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08779366 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105428752 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081795478 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10777671 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099485521 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08812348 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11402347 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084996179 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104118546 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108532802 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092431253 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104560781 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079360503 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103995508 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085854534 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104366538 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104421887 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085665626 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117750092 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087942028 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103098325 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082560133 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106803894 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102555039 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091953076 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104763304 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08510504 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107767195 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085997858 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113869213 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106467746 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090108134 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105818447 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087475121 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102676858 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103171696 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082172163 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102513523 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086443071 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105217594 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089734005 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112461978 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102235433 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094300311 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11166304 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089101344 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100236776 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08353311 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103047058 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079027017 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105130574 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101300071 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083695653 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101679789 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082785019 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103949944 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090408684 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105532427 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085103488 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104058682 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097848811 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08592765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105911251 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08513343 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101347078 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085011059 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104511962 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089823961 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110363175 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104809871 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.086046333 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105765788 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085971645 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099693504 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091403988 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102472208 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086596834 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103573667 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084586513 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106279592 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107372018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090283839 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105155493 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086487573 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116102227 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106002039 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082246017 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101457519 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090557815 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101515958 seconds)
  done (took 58.010644075 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148002311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081800947 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099193673 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080629508 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113708466 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100448309 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08047684 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100465817 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081195269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102454175 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079670029 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100087298 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109260876 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12485792 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093765546 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10436095 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098855758 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081394964 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09923289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081357841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109257274 seconds)
  done (took 2.889718145 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105939009 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118217887 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115548614 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119308466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09020845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11613932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115622433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116084386 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100575747 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111254004 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118763319 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116517416 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091755819 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111864935 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111755754 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093261811 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120813836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10999891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117041385 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095952157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113808148 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115394432 seconds)
  done (took 3.24532421 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085413192 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103083606 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085881521 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098055026 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084259565 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098354433 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087930045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101139714 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087754817 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102585563 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082637431 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103410529 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105180471 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079710137 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103942407 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082277519 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151200232 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107813259 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084212219 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106417567 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098980319 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086654464 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09933116 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080198844 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102319127 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088500411 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105192726 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082367635 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103404601 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083442424 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103755644 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08210279 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105173985 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104064482 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083548957 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102510059 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084260091 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103072159 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07996286 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101508589 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084723801 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099487866 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084963356 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105257042 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082088689 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102564298 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084905392 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103770886 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099355634 seconds)
  done (took 5.49032343 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105042287 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162208095 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08709701 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143786478 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121136095 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113821282 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088266058 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143587852 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103199788 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083200411 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122620479 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120140256 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104717613 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09041614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107741942 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103806985 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086871608 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104038261 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088718128 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103328241 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108750765 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09190759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121244142 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118222098 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108626817 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083227819 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104058724 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109742039 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098047318 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110939296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109674373 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09107677 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121362922 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105914775 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084107503 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107004265 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122607364 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085159617 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108152915 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103043669 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086789585 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109844181 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111147137 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104011112 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105325818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109658229 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085535027 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101105397 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119034703 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087926724 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113376538 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120260069 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088656852 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105435182 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109924745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120774842 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085723598 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102940691 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088442343 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117946408 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101988681 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088523176 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120866238 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106758042 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113064519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100367895 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110051463 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10869274 seconds)
  done (took 8.162102974 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094111907 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112851736 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122099415 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121698956 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091899901 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111228059 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111874929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091069134 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112796585 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118064381 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111680448 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133486638 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086701186 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115459522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112234003 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091897397 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111307442 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112629445 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092124347 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112282923 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112385227 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121369795 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09251935 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121546097 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142068526 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106093641 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091346385 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112170148 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12221109 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111158663 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12416626 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092522163 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111720162 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121859816 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124900804 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092378252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10451138 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111192926 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092629769 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112168229 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105933113 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120101386 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091439317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106807513 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112084884 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092044471 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122346604 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124145216 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115655923 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097150347 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112285818 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120985742 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111579506 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092247997 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12133826 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147881839 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120773217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121246578 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11268927 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120155554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101433763 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129721846 seconds)
  done (took 7.718501566 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107792366 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11653317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118716082 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100829723 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083296125 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110680857 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082799636 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103846456 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114443351 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095632917 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117428643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110019534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11267306 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09806541 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110469061 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11320991 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089641604 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110971494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115318241 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110471738 seconds)
  done (took 2.956924402 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093826147 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12447103 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085623302 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112558642 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1085478 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091203582 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108610747 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108192689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086820909 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108062641 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09631948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116888465 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106320555 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091476841 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116667873 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112482253 seconds)
  done (took 2.501811424 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096972574 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118354467 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121301747 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085263563 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104330046 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081519662 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106160851 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102030633 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082395988 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121389965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085541117 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109397086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105905237 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083730733 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10232792 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089043598 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102395071 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083473305 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106617417 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12195645 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096965451 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105438382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106781147 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087664981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106714453 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090141976 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106659309 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103328175 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084624715 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106280119 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087108544 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114591018 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101885961 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084090393 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104620094 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082904737 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105732041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085218441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109097609 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105631598 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084085502 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105152487 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085597763 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107568899 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08179148 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106422639 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101609106 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091958702 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103936086 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085664253 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10636845 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107785988 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086980436 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117395377 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088638053 seconds)
  done (took 6.284939126 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100006171 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110117389 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081109031 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10391945 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088700049 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107978565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11033134 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089335548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107262342 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083856361 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108877565 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090519468 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108628732 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109573189 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088315349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109013876 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081395868 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107348777 seconds)
  done (took 2.630572809 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090926818 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106403657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094070867 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106873448 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085199522 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110111556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080970639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106146142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104418016 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085019283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105991054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088842298 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104267083 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087776111 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106256566 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08511757 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109352455 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103799204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086264701 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101394105 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088553094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104530428 seconds)
  done (took 2.98470583 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118693679 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126070776 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093141982 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231656122 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104843076 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133251682 seconds)
  done (took 1.651616984 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109876922 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121417389 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106531613 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107581059 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116404717 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107713055 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087970362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108426656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118527876 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102189065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109119203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119063439 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118075285 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097865027 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115713139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115927252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107616114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08838414 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106282094 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130020817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08840996 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119832744 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108780123 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087193501 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108500926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119480161 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118353244 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122636736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087982372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11803175 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115505914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087988269 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119204303 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124086571 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109730956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097799327 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109515006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129392239 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114666397 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097416611 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110561759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115664821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098705138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115109319 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118971657 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107693961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093142206 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109628017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108755751 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135965181 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094088632 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118664344 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11570318 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117883199 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118645627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136366434 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101631352 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119822253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116440089 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123624066 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117371554 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095100016 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11906599 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122917005 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116453361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118588172 seconds)
  done (took 8.193445231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101653982 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127288419 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109250862 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123981067 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098059822 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10995698 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109043644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089047811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108599217 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107271468 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151955906 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088556879 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117729406 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117764637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109249815 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088626594 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109003588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119235122 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087635684 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136357316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108433852 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118091444 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1181394 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097893711 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123838624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115824134 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109185649 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088540403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109148057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108349168 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094158485 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110184096 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118034082 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086485184 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11987119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108932068 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087917208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115745331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109822884 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115552821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098175973 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129188346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108997093 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108651457 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123457387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088635759 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109500055 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086723378 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110417748 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107931449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123284259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102889601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123583087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118918926 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109856566 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089299745 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110455312 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108903015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088465919 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116387425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118363027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109223152 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136957129 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088399976 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110171621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118445547 seconds)
  done (took 8.071140253 seconds)
done (took 155.749560772 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098612211 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137465118 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096433324 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18262238 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107406836 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126052263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138739606 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098472924 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108048926 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087126056 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107369263 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087420736 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.20938964 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085669714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107810136 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108548332 seconds)
  done (took 2.736533219 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200787719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255783924 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102893652 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107527589 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088933512 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111278966 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105604003 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091238458 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111239914 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085778049 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109691091 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086740667 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106549567 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087614191 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111855343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088330375 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107681811 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087998407 seconds)
  done (took 2.906346799 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113574624 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156910683 seconds)
  done (took 1.134251172 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119126361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18059885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297943499 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156035686 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119558916 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127428996 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15735723 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131620008 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198222453 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12356172 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123322558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09772848 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141655529 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117121597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095697723 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119238214 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142235293 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093263555 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115844823 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115824215 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117867669 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107631743 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116707157 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094603635 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181586619 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120932615 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085273465 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108199368 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116229239 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095794576 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113937521 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125727658 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098809555 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176517956 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102536714 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177748655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098222147 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113252529 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115381438 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092482109 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119228323 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11872575 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105082387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11917412 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087008727 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120633008 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106548773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086148433 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115499797 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096908689 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116114385 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113883712 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155434882 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118969824 seconds)
  done (took 7.573759596 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798667614 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164933381 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090424473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.889134373 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139392081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104016903 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787664698 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135102146 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234217008 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766064396 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135401059 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122473146 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226736261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235901545 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926041662 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309015019 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674286663 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10286086 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15058385 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153943254 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120264911 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13781199 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131150008 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453303193 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096569166 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113917586 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118016474 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099997637 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159558311 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127233726 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115567192 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178562886 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267633685 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184702667 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116351353 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089452485 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112685174 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1696906 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268635848 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214516862 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182014118 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087510485 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112009325 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123143886 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110501693 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110320748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164438848 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196333437 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173640109 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092595369 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122807687 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121034562 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122143661 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165628613 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121179642 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28678332 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322322246 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112931238 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121899203 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106233346 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26410177 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123816729 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224510294 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116705349 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213256661 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112952939 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768534324 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192029542 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08998275 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119283922 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12049805 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094706272 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123000576 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172534441 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394802474 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125218085 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093157472 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113194415 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205089455 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125440614 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111840487 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162431759 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116947573 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099357736 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12778994 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124507741 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171020274 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231224953 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125589158 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120598535 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09507958 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126704477 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118423751 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213102393 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218602165 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161723604 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211537276 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12533097 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186460509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168269 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098057096 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195645312 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098517002 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128207811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123957969 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216505581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14715899 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123123826 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094152431 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120015299 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148858652 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127641005 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098777428 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19212023 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484389473 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167908563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109967503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127293607 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098904165 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183462252 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097667086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262720662 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122148001 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168861471 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121113437 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088063748 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120635019 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165980474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124086508 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121259283 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10177359 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119927034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234066833 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218228549 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125243185 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222055618 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184477306 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121121426 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173464235 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123086788 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167984606 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120887835 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122414641 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095983181 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785432473 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125658554 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098829732 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118109958 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196902576 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112483586 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102684213 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126386189 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109100049 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769149529 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127547474 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121719127 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102013122 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120257499 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122139709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11919935 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096765903 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163057466 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231938908 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122519836 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120957728 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103431456 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184054673 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094587795 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126847197 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126636201 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125874966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100592352 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117704786 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125024128 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170080156 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164338858 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221998506 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599486459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091286447 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126351473 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230282299 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090619138 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290554774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121912757 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225373378 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166733765 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122631429 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318721293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166612424 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197691316 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128292674 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174240117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088315373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121088369 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164517155 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11436365 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11943362 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163182368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127204701 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102292759 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933153297 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11312112 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226420098 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109024256 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171796423 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117740639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098945917 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293881906 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112704091 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108614649 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187859722 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093663655 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126087274 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.740052519 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103812193 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123961955 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119122914 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221419682 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164806121 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12021373 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099111354 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123303632 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164393059 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208087594 seconds)
  done (took 44.255356095 seconds)
done (took 59.462187638 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276805608 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214853653 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259764713 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169031688 seconds)
  done (took 1.881115774 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170849165 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153939246 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121126485 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108611375 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149189916 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085739563 seconds)
  done (took 1.675650691 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.354975968 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271120084 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23982833 seconds)
  done (took 1.756734438 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290065431 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25274941 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.35729627 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420833435 seconds)
  done (took 2.330677523 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208910515 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132643061 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111823714 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104917311 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197519393 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250770695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14141416 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203316971 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122125737 seconds)
  done (took 2.409135514 seconds)
done (took 10.944586859 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.128419653 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.247809066 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.243317524 seconds)
    (4/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110177156 seconds)
    (5/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.239287734 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.231129442 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126599686 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124562476 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100916289 seconds)
    (10/286) benchmarking ("sort", Int8, false)...
    done (took 0.198418253 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117190519 seconds)
    (12/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.227769068 seconds)
    (13/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.239213322 seconds)
    (14/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103632882 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.218025123 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.186917483 seconds)
    (17/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.095441699 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.216050507 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.230462775 seconds)
    (20/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094712661 seconds)
    (21/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120413237 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090003589 seconds)
    (23/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.239287723 seconds)
    (24/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122906004 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169842252 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090734647 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.226366299 seconds)
    (28/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.111826926 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095885046 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.175165602 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093202597 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169053983 seconds)
    (33/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122922662 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138146393 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124160666 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215798214 seconds)
    (37/286) benchmarking ("sort", Float64, true)...
    done (took 0.23290794 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.169035525 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086018069 seconds)
    (40/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.165818392 seconds)
    (41/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.17760738 seconds)
    (42/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191974813 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.101272611 seconds)
    (44/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.157682797 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118228092 seconds)
    (46/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191021855 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094992849 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210476577 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169100613 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089858789 seconds)
    (51/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.102791632 seconds)
    (52/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078703007 seconds)
    (53/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175819646 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086256879 seconds)
    (55/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.178559317 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108193481 seconds)
    (57/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11283739 seconds)
    (58/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117599816 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069254208 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090070991 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.099659895 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191553279 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094487849 seconds)
    (64/286) benchmarking ("sort", Int64, false)...
    done (took 0.111306208 seconds)
    (65/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067471434 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.135587283 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119513077 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235725929 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103102001 seconds)
    (70/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189079555 seconds)
    (71/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.216595755 seconds)
    (72/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088470047 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138096409 seconds)
    (74/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172661462 seconds)
    (75/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130341827 seconds)
    (76/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123513117 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09881967 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142665978 seconds)
    (79/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.16040093 seconds)
    (80/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.128549955 seconds)
    (81/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.107027521 seconds)
    (82/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093386068 seconds)
    (83/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175219913 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184875468 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135295541 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087309259 seconds)
    (87/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120511116 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067579233 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134562514 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086397078 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.13727987 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086194917 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117808471 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.178331628 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102318739 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110112552 seconds)
    (97/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.128454466 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110057609 seconds)
    (99/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117252915 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.151970983 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194973911 seconds)
    (102/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116993966 seconds)
    (103/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.126349983 seconds)
    (104/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118864743 seconds)
    (105/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.08227895 seconds)
    (106/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.127478474 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067628974 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185609456 seconds)
    (109/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094975645 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118111671 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.182871459 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119777087 seconds)
    (113/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.119443182 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137241004 seconds)
    (115/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096569672 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.168516494 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117834787 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150564385 seconds)
    (119/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137852633 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096751881 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116910112 seconds)
    (122/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.14542881 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095471274 seconds)
    (124/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.187351778 seconds)
    (125/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067936716 seconds)
    (126/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121173353 seconds)
    (127/286) benchmarking ("sort", Int8, true)...
    done (took 0.224218098 seconds)
    (128/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068968808 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155308698 seconds)
    (130/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076286426 seconds)
    (131/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113454764 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095659407 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.138164557 seconds)
    (134/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066562199 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091121055 seconds)
    (136/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152712254 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091167627 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087316984 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108980714 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095352047 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16502113 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067482725 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126151039 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088208889 seconds)
    (145/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091566973 seconds)
    (146/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067411738 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119256684 seconds)
    (148/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075856364 seconds)
    (149/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083597072 seconds)
    (150/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137195536 seconds)
    (151/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113548514 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106961838 seconds)
    (153/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119331835 seconds)
    (154/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087856558 seconds)
    (155/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.125484347 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067875361 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138248879 seconds)
    (158/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117575868 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10344776 seconds)
    (160/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068544546 seconds)
    (161/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091447402 seconds)
    (162/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067027703 seconds)
    (163/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123083878 seconds)
    (164/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088438717 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.111233113 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181604041 seconds)
    (167/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093452766 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116441677 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067465303 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128970961 seconds)
    (171/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067899912 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122061575 seconds)
    (173/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.169273837 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118067301 seconds)
    (175/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090649936 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158455282 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086016406 seconds)
    (178/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.173766912 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10986671 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097612672 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110715747 seconds)
    (182/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.119840543 seconds)
    (183/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136952348 seconds)
    (184/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069270177 seconds)
    (185/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091768707 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151245509 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.22450948 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110665826 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193236295 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09631666 seconds)
    (191/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091695698 seconds)
    (192/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.113382582 seconds)
    (193/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185121193 seconds)
    (194/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236099147 seconds)
    (195/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117910908 seconds)
    (196/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149948526 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120049661 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096518098 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11506407 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086371965 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115264534 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 0.176153663 seconds)
    (203/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067476814 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068802042 seconds)
    (205/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245537921 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100416679 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117417597 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087362998 seconds)
    (209/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090967957 seconds)
    (210/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099602955 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090930346 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086335768 seconds)
    (213/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.301596438 seconds)
    (214/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119086057 seconds)
    (215/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09347762 seconds)
    (216/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.09156189 seconds)
    (217/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068874042 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113515878 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067273404 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177423934 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091407763 seconds)
    (222/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111971229 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068866361 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093136512 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114059844 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110735538 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.113122818 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091699836 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086812582 seconds)
    (230/286) benchmarking ("sort", Float32, true)...
    done (took 0.234448155 seconds)
    (231/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117464092 seconds)
    (232/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087870363 seconds)
    (233/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.092505637 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087249285 seconds)
    (235/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112126757 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076742314 seconds)
    (237/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091976179 seconds)
    (238/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115854438 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117473017 seconds)
    (240/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090857806 seconds)
    (241/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111230523 seconds)
    (242/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067886729 seconds)
    (243/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118766248 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09592068 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11176931 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087302136 seconds)
    (247/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09140025 seconds)
    (248/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078087979 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068065406 seconds)
    (250/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111784791 seconds)
    (251/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087968213 seconds)
    (252/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090997125 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102731763 seconds)
    (254/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090585531 seconds)
    (255/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089758503 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136509007 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068390293 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11051775 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087743423 seconds)
    (260/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113198996 seconds)
    (261/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.140077191 seconds)
    (262/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124313098 seconds)
    (263/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123673939 seconds)
    (264/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067965589 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119763674 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088414056 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109696278 seconds)
    (268/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067698987 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086150586 seconds)
    (270/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118156583 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095506379 seconds)
    (272/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091368436 seconds)
    (273/286) benchmarking ("sort", Float64, false)...
    done (took 0.17454093 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094652848 seconds)
    (275/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118434063 seconds)
    (276/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067861528 seconds)
    (277/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094619494 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117543076 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068192345 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109855139 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.0680754 seconds)
    (282/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067295797 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111551655 seconds)
    (284/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068099647 seconds)
    (285/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094151034 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067743847 seconds)
  done (took 36.323563686 seconds)
done (took 37.217918387 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102061599 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149075899 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096855535 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13682226 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124504257 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092125746 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119694661 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098782196 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125373557 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126059971 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098606255 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095064682 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097298084 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12152812 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097357696 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140417536 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124832917 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095139848 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120971203 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086645133 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119853324 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087315137 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11287595 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071012192 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122755686 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094375635 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117282561 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121915066 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086474129 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111287587 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093166142 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118206446 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087317093 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125360104 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093717923 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12104153 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096948385 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121441465 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113094636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086834443 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119500423 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087177045 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118113672 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095366165 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117585223 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092804989 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119637892 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099812514 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141299527 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11658401 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095617876 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12365218 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096727975 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118739734 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09066014 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120288401 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092388158 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141222447 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120250712 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093284543 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119501538 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09505918 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117862961 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095704764 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119600643 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122326474 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098792062 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.1174412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098162925 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117621905 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088140011 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119503391 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090491554 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111600594 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096553225 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123234374 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110940722 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093816743 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119201693 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092771081 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111082268 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090231107 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113004354 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093379683 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113795983 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070399647 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115500434 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093359011 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110750776 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096226321 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117481404 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093847156 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113826132 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099182779 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11236603 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093272755 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112274508 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087347497 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113824623 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090950109 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111767476 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089485785 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121627075 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113111236 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093487779 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12385825 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087976791 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118438763 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086995373 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111436597 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101914977 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122304018 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08767534 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117187821 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087040553 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119797761 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086061745 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112065715 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111946005 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087740497 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118078121 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087449837 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114960044 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094406901 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126614191 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087990081 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115464075 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089838225 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111778335 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093396589 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111479856 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087256658 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114450485 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078631715 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114442628 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087703752 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119155761 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089862006 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120907587 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089108791 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121649204 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091837358 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118045019 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11815486 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086854112 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074833416 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118319288 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089798322 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11377401 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087621835 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114000118 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087523295 seconds)
done (took 17.065273276 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087815344 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184209102 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152002974 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143844003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107191978 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112941845 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122997741 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119250915 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114689674 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144509621 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110339183 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132414823 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148407013 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087196867 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113659043 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09186249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114265014 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103038773 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146149653 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134193801 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164534053 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087042893 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147992736 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135961544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121993349 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114485487 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113338859 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091180427 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116148127 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102989729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133031406 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115991365 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088252618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134834154 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104706579 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120600443 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087517755 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119843564 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087953945 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113390571 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142479883 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134057684 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092501498 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118241171 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092079373 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115353577 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090333802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121755811 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098613442 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116593558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12694126 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157728796 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091337062 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122438054 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087535287 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124286955 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12270691 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090607505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112521263 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090039925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113151639 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092030259 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127568247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141485443 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092739564 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122447183 seconds)
  done (took 8.656993451 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104941535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14049323 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105703709 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131918121 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112506996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089082609 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113535972 seconds)
  done (took 1.758391549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08862945 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13559352 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111945134 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137134705 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133542434 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112851822 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125021438 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088938237 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134399254 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090115074 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135709167 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150358211 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090112722 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121466274 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139362571 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089346228 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137993623 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089844077 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118604892 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112053264 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117812652 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136551853 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091704407 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114571015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103564802 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114833399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163148516 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093532759 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11617374 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092452934 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113149758 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15237882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10300507 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125975732 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089270279 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130476344 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129417934 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087363 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127337557 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0943581 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128548694 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090499269 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116360721 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087774603 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119150889 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099813461 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118017445 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.108584413 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118138963 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135030279 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089679398 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12868039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089800895 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118238979 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091062329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120804552 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098396902 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115741865 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134956873 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09107437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132282714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106733243 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129622679 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131789719 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092311807 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129015054 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103583786 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117602223 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091168117 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118411792 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10613577 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113404722 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.091294594 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126369481 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117378797 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112530339 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13860003 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091779394 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126175978 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114757614 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0900961 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114659133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113494486 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119073935 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089916729 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119456779 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092774727 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112997604 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088525079 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118536029 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088152116 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116959181 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092691603 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115465484 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091845601 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130842418 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11664822 seconds)
  done (took 11.907267148 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091418172 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116207985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092409907 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115808442 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090874844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115245299 seconds)
  done (took 1.59217695 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116700071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11882683 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105756704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121704395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156424383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104502024 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13100505 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124160451 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107830677 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127870203 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130723076 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105189767 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137103205 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122550813 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104429437 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120778238 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104225811 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126327056 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128084751 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096581026 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137770471 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122152124 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096978903 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132991752 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.12009908 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096166316 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126821308 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104985503 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12821478 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125526186 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096561239 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.1187117 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096488607 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124590947 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131277098 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095926604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122884618 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120067972 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101285172 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119091345 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104851153 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122674647 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128349424 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095322029 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125334705 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121842276 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094426954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126702986 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103670454 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1201954 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12326797 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09548383 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12071664 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094503491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124274484 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125016942 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094254922 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129983075 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122737523 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097568652 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119316654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093680105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125315253 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118968284 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103750795 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119759833 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122082891 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096316306 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122914194 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095400811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120992485 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094173469 seconds)
  done (took 9.287034763 seconds)
done (took 34.158962098 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.695205792 seconds)
  done (took 1.665089802 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.839930665 seconds)
  done (took 1.811593929 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.560095317 seconds)
  done (took 18.562849754 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497123417 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585151231 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986295469 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179327859 seconds)
  done (took 3.221093332 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964352034 seconds)
  done (took 1.956812737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283326264 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235580972 seconds)
  done (took 1.497427185 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.789227839 seconds)
  done (took 1.778432495 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366605993 seconds)
  done (took 2.347096774 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325445964 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185354048 seconds)
  done (took 1.498099091 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550682808 seconds)
  done (took 1.536988882 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.17779093 seconds)
  done (took 11.171052827 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26713247 seconds)
  done (took 1.265209926 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303063466 seconds)
  done (took 1.292619827 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.6158878 seconds)
  done (took 4.607937695 seconds)
done (took 55.196018663 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099517721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128457101 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101827332 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125648771 seconds)
  done (took 1.440370465 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101753474 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122513847 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100115828 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121091759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126852733 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096658347 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124557163 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101531415 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122120881 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096278162 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122044188 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121643977 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099180031 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123257866 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093560661 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124809032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12493319 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095703423 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125905603 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09737373 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119609678 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097448998 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12503694 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095362489 seconds)
  done (took 3.67369953 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10082593 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120110944 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096488817 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120237026 seconds)
  done (took 1.437419099 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100589524 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131982168 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105525955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126537695 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132612631 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105753135 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119617553 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092423788 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120214517 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100209462 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116946749 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140000476 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107890473 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126288945 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102809804 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114974722 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091265384 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132636353 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125509069 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100369209 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119614081 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09968896 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116133085 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109741536 seconds)
  done (took 3.734194784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171173901 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127575437 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139304423 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095737763 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161659902 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141172822 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088018839 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141684909 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088359983 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131611799 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119178344 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133658309 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131041057 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088665593 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114850276 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088062588 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129374412 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129910872 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091297239 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12986189 seconds)
  done (took 3.446813606 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098574613 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118738527 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089079872 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117109263 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.10023215 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122086014 seconds)
  done (took 1.647829807 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09103619 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115741877 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090246508 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115740113 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09442006 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115961662 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088550652 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116025794 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090096786 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116993062 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089386322 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114326567 seconds)
  done (took 2.240436325 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.505681691 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121868632 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121516846 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088783853 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123163054 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089715051 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131017993 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092856118 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142121619 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089535623 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116693089 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093919823 seconds)
  done (took 2.718139494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236247717 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125730502 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28556058 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370039351 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157958954 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16680622 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281254423 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162817196 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197919414 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152045143 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231346434 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198457447 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15415919 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191440569 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1394741 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146851692 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192079273 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252375102 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15368357 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213907433 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208761792 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168981507 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181570691 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153149054 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112747215 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194758148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095804981 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131796718 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235752318 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180997056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191962339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162953053 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149280759 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239060699 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25017431 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196469849 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280855627 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134558369 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168617406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143424042 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267235404 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140810685 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236467242 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156603766 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10503597 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22268952 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167348168 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178620778 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147340663 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14008552 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198956802 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244611793 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194308462 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139460818 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300922954 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148189424 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158905803 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190049688 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253969243 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228348315 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190342652 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121805461 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189610465 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191702078 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21345942 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153201572 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183149108 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14874843 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183606341 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190772695 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165930333 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206892332 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181627956 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140709176 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172094153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173786895 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174599134 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261318827 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185493314 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124126426 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171263974 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149794936 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132053476 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168841019 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12633792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215408854 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143940703 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164886075 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210082145 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160291745 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162843641 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223192861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184894111 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150134978 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083873059 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154539881 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155498252 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177397517 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140894987 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159351012 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157460404 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131565298 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172483997 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098063725 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212896696 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091873912 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17320173 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212391346 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101761177 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162411697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153573858 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151722449 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177633015 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200600842 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141144664 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134841961 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211627914 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181656095 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142311717 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179933987 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230657748 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11765812 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151032305 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229241391 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24474698 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11313638 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230536936 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153972151 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107922589 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134747389 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182374198 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156422658 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162730814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133846797 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184077868 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234997207 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099038774 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139902442 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195443674 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135047999 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133532011 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156367899 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148040133 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110923745 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143780579 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145749593 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176839079 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179277388 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156712614 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168726786 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151140127 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251793869 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140220108 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152352738 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122916417 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121429928 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193155637 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228656828 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104729073 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234135478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173109063 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226014356 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171056664 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107960103 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177517354 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131866596 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120694398 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19362388 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168354625 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162191072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197837205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22381651 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181103285 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211772326 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166989082 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17579011 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166787542 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157598146 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110854761 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161596745 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160047225 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124638471 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140257549 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108545961 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150961384 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143468575 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134921768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198566968 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171558986 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218584328 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159986766 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149968665 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181606 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102929991 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203340017 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179873669 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145750026 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199996301 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195678796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21587788 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117549045 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228571613 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122012053 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099151893 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143415108 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172646891 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134628699 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108354084 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163485713 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209323861 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18283459 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174010064 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233547318 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177714559 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192713489 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094840296 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169613193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184271147 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204533421 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15558351 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138834455 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153201043 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178540048 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155590933 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257798248 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16925562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177327193 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235518588 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123256283 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133157302 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15136837 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177380953 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155289554 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176059585 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14872495 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139625145 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161744939 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102015549 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189020233 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186174521 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165209733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187697144 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150478935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214354855 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100904567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162302556 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162172996 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166797394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109706573 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176092945 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202107451 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148440459 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168485304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217668316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104420071 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309101589 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236688993 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196401262 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139378598 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157059606 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162295778 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164945076 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171965382 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180023508 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159407033 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188244813 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160294253 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13751344 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140052585 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121605704 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154055315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134462235 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149448828 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178311272 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140329135 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188452974 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155211521 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160753367 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174058898 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151293451 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145169256 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121482103 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245366942 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184062814 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241268793 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151450334 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178449309 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205352919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127174247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133806627 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106419663 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178901493 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138597715 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191797122 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215203317 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200188693 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209221518 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179817859 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139565625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.09310533 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159570804 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171677527 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231174628 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149658069 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120894065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233302707 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109067846 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132964814 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16774142 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290297384 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145598085 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222390186 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081212843 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283009723 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126017698 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105834303 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164140832 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236278917 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136315443 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152931331 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168454646 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160930682 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163890312 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150719986 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218463892 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212002703 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22760461 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184927096 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10444582 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157184256 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204275396 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193775242 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156515247 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139082438 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207506113 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196249693 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224232141 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113770593 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196855785 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16912648 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158829482 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187258492 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135528956 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20812607 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135545514 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192582874 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153755895 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139792035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178730184 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215809505 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113799777 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215740955 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185693454 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136330072 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106664089 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165679794 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207233851 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153917536 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100092445 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211475774 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098402746 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192767594 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26419722 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135069743 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156820866 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147107696 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108607859 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154160204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157755599 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14045897 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164559115 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204845094 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136687771 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191394354 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231984757 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172883665 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174572223 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147205705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693605068 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131532869 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196771931 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148853781 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206615177 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152893633 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174808158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161036464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170052825 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22515716 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16200247 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230880061 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193254291 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178938815 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134383702 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1591855 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15606325 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146818809 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153963805 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170378816 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161762341 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146143374 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179576478 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165287046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134995228 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113009099 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22785251 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120176794 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214627325 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181682534 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110187486 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202749348 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188301587 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133314825 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182380778 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237489623 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11290509 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150386692 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135239188 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152725129 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261908152 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096724371 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219387126 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185845519 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160730926 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170225313 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148519249 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194035576 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158187368 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215325992 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114944079 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159536233 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15813534 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138961659 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131786397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157659508 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168875962 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121662057 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189548297 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139670678 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194668282 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126396113 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145536805 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286532938 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179462837 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246060142 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108009238 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138292529 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163969578 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151866278 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178559514 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179032311 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138113512 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136258146 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108552115 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158318869 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111514584 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157133686 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191615668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16473215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236037978 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137427756 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277427773 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113029093 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156532241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116488849 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104709515 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151826686 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147198794 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15527125 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192916678 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261088184 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148410863 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13301755 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120773022 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127718404 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136300334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163631244 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164467641 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1806116 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145014267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081767215 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156262052 seconds)
  done (took 82.883300519 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175009898 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154012551 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163410145 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217755093 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194949355 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.284978987 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232159904 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273507367 seconds)
  done (took 2.786198566 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094670054 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147149773 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157799707 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13387937 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091586897 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119779409 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343082514 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132493651 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116869759 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122102192 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175257547 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09543933 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550231345 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090990245 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12026265 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108482695 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093038624 seconds)
  done (took 3.780555909 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.361206153 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.513195085 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.260614379 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198367219 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162705729 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118525859 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.733939187 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095381125 seconds)
  done (took 12.540667281 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.1165753 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138334352 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123854089 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154799075 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142520405 seconds)
  done (took 1.781430813 seconds)
done (took 125.097651743 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097840966 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128875448 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097810343 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131047587 seconds)
  done (took 1.540752784 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095790801 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071539689 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101742029 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075159138 seconds)
  done (took 1.439694114 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190893828 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168607459 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384012652 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072357078 seconds)
  done (took 1.586112123 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115037294 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133366476 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104730392 seconds)
  done (took 1.457814212 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107163058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130299929 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10322966 seconds)
  done (took 1.442363689 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106661064 seconds)
  done (took 1.20924351 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108651407 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138261317 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109667522 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137867332 seconds)
  done (took 1.596949408 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098953555 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128678557 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109991952 seconds)
  done (took 1.4385944 seconds)
done (took 13.168256997 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103253153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424385568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413258918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110740595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724016041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381223614 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036744526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147197054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166962407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093656912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140185011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673662161 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025635582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378680437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982209599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375699437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682523774 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12180787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091127273 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123306074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018946619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092491793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122900061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092543924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709942685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398587243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122825332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374967733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092940655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12707358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382705205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123796739 seconds)
  done (took 16.944952612 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095699492 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174674488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098850432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124637313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123953767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095520313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124790728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094007268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180423781 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12344033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11047781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122446355 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126463241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095980718 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141787201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095625777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126998314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092541162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12289111 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093692135 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141136164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121589423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094687515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122511249 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094062159 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13702002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095510889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12191548 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120594636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099549345 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128579773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095461757 seconds)
  done (took 4.83957229 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141200688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18399746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12977187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127328746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168990601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124561501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201376844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118231116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183304523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123567035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14080688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093754622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157309946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123571806 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114656341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122476793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096821266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12212584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092723604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125298308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140651885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093250691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122919822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09401883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124088518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108432355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12600172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121490174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093909745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127290487 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1002376 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124609612 seconds)
  done (took 5.178036849 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098085486 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127078165 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109631203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139083295 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094880561 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126715019 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097666556 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126183664 seconds)
  done (took 2.025971352 seconds)
done (took 30.091318628 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111616115 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128475939 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108216373 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135559951 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103649798 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133333762 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091579979 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134338061 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134984713 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10279961 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138460481 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09226569 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124683744 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091509442 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136218981 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097706325 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134259647 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102569562 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134778546 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132186221 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095112251 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133883123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103821807 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13374548 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10459146 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134533623 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138055782 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100510725 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124748787 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09495989 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125001108 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103771234 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124812798 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105874555 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127609544 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097639454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125294354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093927046 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133833671 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13367608 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101433406 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134255091 seconds)
  done (took 6.038909673 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108349019 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140327649 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10542925 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081066715 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118604412 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080496165 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138701695 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079486998 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111142619 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108081688 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074437357 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106908642 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078630645 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102402219 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077914984 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075601213 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10952471 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07595003 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077009694 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107610261 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080038719 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073355492 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109445056 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079102793 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074906763 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111503855 seconds)
  done (took 3.597555629 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100058462 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135198876 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114126757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184878069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162283871 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100583494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132871175 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14105873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109800413 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121207343 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097092365 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151525033 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110459819 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131566636 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092816935 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138226871 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137150088 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094253083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129244618 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112889343 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139776205 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103507199 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142011184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13417363 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092062185 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123946113 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09749116 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136948666 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098193016 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132555001 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0965685 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12605184 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122911709 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106041693 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127195387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095530854 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143969885 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103248425 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132990847 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122672239 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10128668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123408173 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115172495 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162470216 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092530851 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129810967 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124921524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103700913 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122720192 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112289891 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132609241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092512734 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126590486 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09225558 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123746971 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107318112 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124899711 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095627281 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132253051 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128400252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106643426 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126151849 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109384941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123384844 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101577044 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122845529 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092865282 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122973515 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145018334 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095752088 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163141329 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094254217 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125260751 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102233648 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13131685 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129364633 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094413474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138548912 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102686923 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126575747 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10316075 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127804818 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095414821 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142687368 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124305071 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095220727 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123451291 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100198508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125063249 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094046678 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137168734 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092649372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12702329 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111193403 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123233364 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123273806 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100702192 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12767643 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092675138 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137888092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098454369 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124416186 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133732693 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094581232 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126404724 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10423409 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127640678 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092954983 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128497094 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099657895 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124794462 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094413715 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127375849 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094440382 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133489178 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129482668 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099520532 seconds)
  done (took 14.934139172 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229262522 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216562214 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206993962 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294934293 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137354084 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114544137 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213241664 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15773604 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125228646 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160952591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17279148 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182633716 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139234986 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.214762487 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171930445 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093838105 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145336781 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.137487953 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246746395 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260031552 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146056774 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101539402 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165628835 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161244386 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138487482 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134190783 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111319189 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135531595 seconds)
  done (took 5.848189765 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109063742 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156871993 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099498992 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145927598 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150720455 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09285466 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129397473 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09431389 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137030733 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136982615 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093559122 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130613926 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101171305 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133048331 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124201873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103067387 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133691209 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095234034 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128049955 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097495265 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135123874 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102973072 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129033282 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123401691 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103209046 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123491696 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086791133 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144166574 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123759087 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11656012 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122842101 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102605998 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138414923 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093874239 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12440788 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09572786 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126772104 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096300315 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126601557 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092516355 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123935938 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07877389 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124299045 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13830251 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100438715 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08133586 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132091247 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12932261 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095428645 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121798174 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096917328 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127442792 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097193731 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132274309 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096803499 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125473115 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096948427 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117229174 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100576891 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127308632 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085970599 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122725137 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09941346 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119053601 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101976218 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129835199 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092474917 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127597306 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097728482 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130834838 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095947444 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131785965 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092109493 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12748285 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095892178 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129836213 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127213474 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093560224 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123519001 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093843957 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075391016 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125418102 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074457521 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12791695 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092573031 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123525851 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094991476 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131461907 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139466098 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095532543 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133463512 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094647618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123357817 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097470577 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115113876 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097021294 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141601582 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143153566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094293613 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12313944 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108686372 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128546398 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093729509 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10797776 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102391085 seconds)
  done (took 13.085016812 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130603069 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155708058 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126127803 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112085484 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158469218 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159228268 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101877172 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132126943 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096334177 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144053393 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093775518 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132886704 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094529338 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139634587 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158432304 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103436355 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127143465 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108540097 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129379222 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171014668 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113227808 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144508488 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111089446 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124790776 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129520178 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11107753 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16345752 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10761653 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139455896 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143725665 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108712155 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162038485 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145472247 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09878417 seconds)
  done (took 5.525033062 seconds)
done (took 50.138013612 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.23424705 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.454267789 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202861715 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134811532 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.277979703 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.218573117 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.218842286 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202817066 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.444220181 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210498893 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.470756337 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.817271798 seconds)
done (took 59.020313305 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.313615469 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.361154607 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491827001 seconds)
  done (took 3.993052549 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.782218459 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.172241165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465892062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.211820437 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205576463 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495311296 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.964326663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.665653531 seconds)
  done (took 28.311384464 seconds)
done (took 42.534597612 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.188565889 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.254152008 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21078493 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.184196597 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.340551015 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231364574 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.23983998 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.276462337 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.22489396 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.192150453 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229056255 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.205551642 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.216578227 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.257085137 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.219877175 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206477453 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.303235815 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.809642748 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626750205 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216127848 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.232274039 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.277534856 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.21615592 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.208706535 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.254868996 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.210725366 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21501618 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206223353 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.964495061 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.207504325 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.237362456 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.426262717 seconds)
  done (took 190.423094363 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206562667 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.357952003 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.4253698 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.230152841 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.615603583 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.421813035 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.360802813 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.72261922 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229968169 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.236457665 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.523783154 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207115099 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.579447859 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.241563063 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.250032763 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.274320316 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.419104855 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.540206377 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.25872132 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.362727947 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220084713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.630070207 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.546801969 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.438332071 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.259691818 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.281226982 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.218736844 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.271753534 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.412300209 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.366803084 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.236030056 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.259347068 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.875373315 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065425592 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215114426 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212037959 seconds)
  done (took 151.108563457 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208711426 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208459711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209304192 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208512439 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24370139 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.210176666 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.806118896 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805884522 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.763422213 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.320083346 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.745816205 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570211988 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213891245 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306486442 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223982751 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210690249 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225984871 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255154116 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210293234 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210123175 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827099762 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.224708346 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.220467368 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.394544707 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226685472 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245424932 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.602844478 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211266115 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246317619 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549140796 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.262646157 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210932118 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650865158 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.824040279 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211194634 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326936121 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21411014 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.245678112 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211004443 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.498755336 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210645888 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211391229 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212689384 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.215363705 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95432482 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.214245537 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.809725569 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212805511 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.197944522 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212274399 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213772944 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.801320587 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.998370746 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233349804 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.212565741 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.214305625 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.212071567 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212592074 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.248117369 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.619766327 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311746644 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230119414 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216103232 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.247969439 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213922564 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.548227131 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216165686 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.680350663 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271142539 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319854807 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.829348247 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218786295 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315637776 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338980546 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214055182 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.212979013 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214082098 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.213281988 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.326806155 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214127245 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.657795907 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.39648125 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.232520533 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.7601488 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31634389 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214648615 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68636004 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.217010164 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214038493 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999259926 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314583102 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215360881 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214410494 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214315949 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.658509365 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814500887 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.52826659 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218492367 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.214752033 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.772182203 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.218715492 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.677315335 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.805213094 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.962418916 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219475584 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330333965 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.397770644 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234347894 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215317157 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.772801961 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.219140499 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275124297 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216722713 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615244956 seconds)
  done (took 369.494171674 seconds)
done (took 712.160884103 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.81115786 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.802662383 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.913771346 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.79209681 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.758128129 seconds)
  done (took 10.217946791 seconds)
done (took 11.360965684 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410387012 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410517949 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280304464 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412691669 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250619512 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430900518 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391352283 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.237059476 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321543648 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303202002 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32006539 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273142168 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.253076921 seconds)
  done (took 18.43566624 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542801335 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547088603 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280921711 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553581181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256493514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546562162 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422065247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434988188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443818808 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251659604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232221744 seconds)
  done (took 16.655689773 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546365077 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.546554607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284854631 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550538985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258800724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549420359 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425375421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438312594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438892362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253289977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230882045 seconds)
  done (took 16.666300557 seconds)
done (took 52.901083951 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.226450512 seconds)
  done (took 2.36942109 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262168598 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.429958024 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.244773555 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231215575 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.228341813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.230804086 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.23157156 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.228483381 seconds)
  done (took 11.231929811 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.227051939 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.225154268 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224405274 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.227840852 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.228547616 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227847802 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228236562 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228063688 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225631143 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22602478 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228400962 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225284089 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.225564541 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22755694 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225964227 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226009762 seconds)
  done (took 20.772842369 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227714928 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224912761 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22638399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.225814181 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.224926457 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226346215 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.225924582 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225305063 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.226084718 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22568031 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.227224429 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225422331 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.227258868 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225600178 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.226334624 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227401396 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.225304255 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226141684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.230265357 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226292143 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227852608 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227031735 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227072999 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.227707475 seconds)
  done (took 30.583753848 seconds)
done (took 66.103328677 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.887733472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.040080015 seconds)
  done (took 7.074415555 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.228859269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230853434 seconds)
  done (took 3.608395534 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.230205007 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229542183 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230033915 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22968029 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.229142701 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23120791 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230068007 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.229447217 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.2309068 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.229771466 seconds)
  done (took 13.446962587 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.229525196 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231330061 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227928725 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.229689845 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.23093671 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.22658102 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230779733 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229686418 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231234318 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229008251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.231147969 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228102332 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.231260033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229004027 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.231652896 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227335759 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228967964 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.229064686 seconds)
  done (took 23.28141233 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231272029 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.23011081 seconds)
  done (took 3.609311201 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.228807585 seconds)
    (2/7) benchmarking "second"...
    done (took 1.229076384 seconds)
    (3/7) benchmarking "month"...
    done (took 1.228947128 seconds)
    (4/7) benchmarking "year"...
    done (took 1.228813893 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228293236 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228161875 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228922082 seconds)
  done (took 9.749486887 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233120587 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407125261 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493916088 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.866854404 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233607859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236106959 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114529637 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.2367084 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.237950259 seconds)
  done (took 14.209058868 seconds)
done (took 76.128380201 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.273059951 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.242195968 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.525583264 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.227897113 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244747588 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.570403597 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.241239412 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352195365 seconds)
done (took 37.830405928 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.237396552 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.21062589 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.048409169 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.2082488 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.345178485 seconds)
  done (took 18.962909596 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.351366324 seconds)
    (2/2) benchmarking "read"...
    done (took 1.568102358 seconds)
  done (took 5.06968131 seconds)
done (took 31.422502082 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234406563 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.231016858 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234775581 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231264326 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233269035 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.230353864 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231450597 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233633146 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233619421 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.234330096 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.233296849 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233851589 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231680303 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230792714 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234285933 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234497124 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.232031189 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231029561 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232905801 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231625928 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232723547 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235379189 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.230587084 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.232108411 seconds)
  done (took 30.734798385 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234644724 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232896696 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234413958 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234897264 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232086957 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.234683841 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.234132184 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232097265 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.235113871 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.234270476 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231317175 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.232697707 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.236216238 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.232617325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235423633 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232792709 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236549708 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233328163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234897938 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233377112 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.234597767 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232808405 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.233217414 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235759223 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234009714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232191452 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236187891 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234714279 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236836243 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.234254983 seconds)
  done (took 38.175803681 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242017983 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244055111 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236753534 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23658639 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.236781018 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237101514 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23666493 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236664804 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.237552008 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237332849 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.236671318 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.237409287 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237318887 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.23806622 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237503439 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237593416 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237216016 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238106809 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.237964921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237502137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.238948527 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.238999632 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.238738471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23938362 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238588762 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237754086 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.238648667 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.238479079 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238027309 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238380678 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239154575 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.236981138 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.237869472 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.2388391 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239248665 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239129128 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.243621614 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.246892258 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.238619652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.238307592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.238442988 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239749096 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239107816 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239096198 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.239013121 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.239323529 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.238779113 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239259787 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.238878597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.240302747 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.23896518 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240087648 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239943642 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239864973 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.239443821 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.24000088 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.239999379 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.239711952 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240131278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.24048366 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.240959177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.240646603 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.239793208 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240046859 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.241269568 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24079467 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240277111 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240611908 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241131999 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241383407 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241100356 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241504596 seconds)
  done (took 90.377267393 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.241163735 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238544763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.238637741 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238557819 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23910039 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241103112 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23923487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241460999 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238100738 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.241176625 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241521224 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239787776 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238778551 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24232194 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240906335 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239511271 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.241542876 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239762768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.242149821 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243348413 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24243092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239679549 seconds)
  done (took 28.446773154 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243366558 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.244021743 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239060898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24241838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240468889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242751384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243452226 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244239184 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243156089 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240846883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239269155 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243365889 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239456691 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239227197 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241101408 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242231368 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243063553 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241886563 seconds)
  done (took 23.512514205 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240904221 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.240084737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.243329964 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241020279 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240798723 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244063052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241691518 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245033265 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24412168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241747594 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.243775215 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243778768 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244364401 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241812562 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245171841 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241376329 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244657727 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242222748 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245237047 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242295332 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242668992 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244946688 seconds)
  done (took 28.504978737 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245351923 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245088769 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.242269229 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243092235 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.242687423 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245269975 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245789954 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.242438347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246755581 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.244923417 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242248181 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245556946 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24452129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243380443 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243354444 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243429959 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24613141 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243580506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245881428 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242894243 seconds)
  done (took 26.045908965 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245780985 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246748796 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246769607 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247003719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247869322 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246818935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247287743 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247856042 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248459921 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248538322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248451337 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248498874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249634965 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248728018 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248375857 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248520688 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248000576 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248954005 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248754624 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248868648 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248651846 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249181598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24929215 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248397249 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24944457 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248638198 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24900461 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248444235 seconds)
  done (took 36.113314944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250121209 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248966725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24611825 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.246298155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.24534291 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.245416557 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.245903749 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246822983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248450207 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246572033 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.248810419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.249065226 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249823489 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.248612983 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249191 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.249488119 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249624417 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247764961 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247841479 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24658982 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.250366073 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249622392 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.249802082 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247651708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246714116 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.25005704 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248396898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248021297 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249951103 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247800312 seconds)
  done (took 38.610631176 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.268968194 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26848341 seconds)
  done (took 3.703319966 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249179763 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250795571 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250729716 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24873096 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249259507 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250373591 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251302527 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247816118 seconds)
  done (took 11.164596146 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.251163592 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.251733276 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.25238762 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251852033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252182469 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.252813842 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258685101 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272597739 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252965576 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253388853 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260508474 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260562517 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255185973 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252876392 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.25324026 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254583425 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.2533393 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.252781666 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253444437 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.253069864 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253284648 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255921571 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256093381 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.250630315 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.256145278 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264536748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.278336067 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253675197 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25355001 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257207313 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.254040136 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251857919 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254099605 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255471146 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254844023 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.254750789 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262788996 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.27455425 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25924457 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275668863 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255825739 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252127407 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255849143 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255344002 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25598 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254420004 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255275503 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252087281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254931651 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.259122281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261680265 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254930818 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25355097 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2586827 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256525537 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262308788 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.275818607 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.259264199 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266836081 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.266400152 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.290309016 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.283154527 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258993613 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256772643 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268095917 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.2823536 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263265063 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.275125 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.254282401 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.257295431 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.262276906 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290454124 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283958233 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256813477 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25781057 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.257533044 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257411594 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257967471 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263758288 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.280635752 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258347705 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25864725 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268300122 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291493493 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.2584043 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257930713 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259125939 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258135058 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.260261857 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26908805 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.277934903 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258940952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257779451 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258556832 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.260004218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259277401 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258377454 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259180616 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.256717782 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259145176 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259091586 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263435854 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.268995015 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258201618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259265412 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265359202 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.279241756 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259120317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264739277 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259936766 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258822703 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.260519178 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.265879863 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.25639455 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263323033 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268742909 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258716931 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260785406 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259488531 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260470821 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27096945 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288350696 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260873327 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.260234659 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266046158 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.273553144 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260516144 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262561884 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.259632865 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258287661 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25780308 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261587385 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26118583 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.261412726 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260783313 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261722409 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.258483041 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261906519 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260922468 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262931306 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261931386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262050006 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262594912 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262924965 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.262540636 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262342351 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.267552993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.282079094 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.2631416 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262440757 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.259102736 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263122123 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.262834054 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.262540982 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262372385 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262394893 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.26225347 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261918878 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261951562 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263741605 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262978865 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263299177 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267732422 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262232437 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.266245347 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.263520911 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260636911 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.262954242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264277806 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.261908646 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.263691043 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26195968 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267914552 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272408904 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.265053641 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.264744306 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.265371789 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264278775 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265510424 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264981811 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267512853 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274288932 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26425231 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270432655 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.28665863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265318524 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265392576 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264838768 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.264558372 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265821122 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.268019636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.274269893 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278481258 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292841521 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265787335 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269881269 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.26532679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.269258559 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.269373571 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.265013666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.265393333 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264907613 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265876449 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265286581 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267154958 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265021739 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266172063 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.266962902 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265447022 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265905206 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266297909 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265917481 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267160429 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.26404983 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26700883 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266476846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267091509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26387259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263907064 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.266413301 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267768471 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.267936541 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273031733 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264104152 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268536923 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268173443 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266983033 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266353991 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266850144 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268493068 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266647911 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273658805 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.288176216 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268655148 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273210006 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287774435 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266631058 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269413861 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267740757 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.265296493 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.271146309 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.276988087 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268203926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.268794117 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26832006 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26907985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268686161 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27431731 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.287514184 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267935676 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.269543924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270345243 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266909653 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269246396 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.269766921 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269465206 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27149986 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.269942431 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269946514 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270618335 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269585837 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269452671 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.270789321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2732137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278535022 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275192225 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270346989 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271871958 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.27102949 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274913623 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.270394928 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.27190388 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.270614625 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283438401 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.298116355 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276878789 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.292087693 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.271223518 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276006073 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29407453 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.27609687 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271487361 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270935694 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271766724 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.271517568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267883068 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271778225 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271975593 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273672173 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.274307742 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277002718 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271688474 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.271713064 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.271442929 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.272906961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272245492 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.271678157 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272114692 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27438926 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273990398 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270920684 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272292858 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278705447 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293447423 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.273469272 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273650445 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272183902 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271984453 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274456729 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272823083 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276021017 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282036535 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.277192656 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.28312316 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275631326 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283566274 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.273358516 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.277793643 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28285797 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272006715 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.273450977 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274257958 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.274997726 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280594662 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295682559 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.275615408 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.279479078 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274232893 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274533164 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274765723 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.274696498 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275138346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275444371 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.282660945 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297672028 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.280306777 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276086225 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.272734119 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.275659525 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27604931 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275057813 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279490001 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.276072922 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275450037 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27573 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274771089 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276436786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.276415241 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.277159242 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.273573449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275834671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28248242 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299710744 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281093681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.277207753 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282733719 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297487691 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283167158 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.297863898 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276555137 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276536036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.277958391 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278417618 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.276017229 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.27918903 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277253088 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.278443163 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281042615 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.277562105 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278689687 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277522447 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278491 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.277369776 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287847546 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303425849 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.278733947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281811013 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.275415533 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.280104164 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282780398 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27780275 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276706302 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281929464 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290036307 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286980027 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279112475 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278342481 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279054618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277937803 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.278644485 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.278830116 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.279330762 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.279283759 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278391193 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.279417799 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281008531 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278360095 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.278988841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280447152 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279681379 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.289491277 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.300764293 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.279722958 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279922499 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280425243 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280005805 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281344247 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280315918 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280097037 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280365263 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.281893796 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289826676 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287309114 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.282291127 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280670736 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280149154 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.279912943 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281347771 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280638108 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280784164 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280552791 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282052882 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282494687 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280545588 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279981308 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.282193031 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.281278135 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281556407 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284259057 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289385479 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282794951 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.27838092 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281660585 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282500575 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.27926443 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.280688416 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.288498813 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306340131 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293614463 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290456042 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286590449 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282426883 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285154395 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.291116819 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280312449 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.28194386 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282344065 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282110944 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.282997596 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287132003 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28330068 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.288432286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.303517721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.281969192 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291081777 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304573843 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282231702 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284654684 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.287156074 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28193418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281133478 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283268741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282817367 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289981783 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30435412 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283422919 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285165165 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282809089 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285503421 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288683405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283447097 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284750146 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281323728 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284561435 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284505395 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284551384 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281698734 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282456755 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284027849 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288486183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.292056509 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281644854 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284681711 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283936131 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284985136 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284215606 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285791284 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281411711 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280800977 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283664591 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285770646 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.284290825 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.287373582 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284302817 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285892488 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28604514 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285515918 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288560607 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296362845 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29490126 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282292389 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284060713 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.286348779 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287866881 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284870072 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286294129 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285654288 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285868521 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285690367 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285326407 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286337056 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289818818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.303245693 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.305928953 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286708305 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.287052053 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289662313 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.286699654 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284248217 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287598027 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288525913 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290670171 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295755459 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287265501 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293031302 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307503669 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.289679383 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.292094527 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.291385585 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.296277701 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289911018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287679238 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.28890546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292267215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305497344 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288351982 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29829423 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.320808326 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30926139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288338695 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288650511 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287946704 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.288916559 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.28939686 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288939195 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288429098 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289051624 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289197786 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289074439 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294788068 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289296997 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.290453216 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.288294052 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289424762 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290111699 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.287299086 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288756055 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.290053108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.289578803 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289966603 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289801984 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290694782 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302631123 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317974249 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291258746 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.290789575 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.288271668 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292605722 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29302565 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302669587 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299118721 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.29015993 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.291418661 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292317107 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290649542 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288573337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292111237 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.290414589 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290721436 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288342577 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303242763 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319830601 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.296125957 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290142663 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29185791 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.291993995 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292373835 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292764869 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291304967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292050615 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293648466 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295634398 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.292072668 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.291172696 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294715841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300808928 seconds)
  done (took 761.327593833 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289740032 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289247814 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289218237 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28900763 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289742654 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289779308 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289412919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290303935 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289582276 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28936022 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288986202 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29022132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290519007 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290321511 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289347572 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290157341 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290190031 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290246159 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290186072 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290227496 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290213259 seconds)
  done (took 28.290883887 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293311875 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.291388446 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290074961 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294144547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290729301 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293105 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291017125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293886831 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294237273 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291206472 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292694749 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293742407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.291858664 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292305861 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292405549 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293337692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2947859 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291555302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.294952303 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292080822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295659236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292937114 seconds)
  done (took 29.647871116 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.294833229 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294808368 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29441792 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.292932095 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295238364 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.291935924 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.294426372 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.295271786 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296332107 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.296087663 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.296133945 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.295815675 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303269912 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.301874991 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.297177471 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296218161 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.440228055 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295848792 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.296863183 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.295892092 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293208026 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.301939425 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.316175158 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.293501856 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.294911715 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297246766 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.29637492 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.296487884 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296781975 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.297285371 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301437521 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296776168 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.296401338 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.298633068 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.296204118 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.298088848 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301686284 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296359765 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.293842034 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.296601875 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.308115934 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.319883954 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.297495378 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.3045261 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.320793477 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.298178525 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301057591 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306031751 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.294796023 seconds)
  done (took 64.985790913 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.297331416 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.298054683 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295348567 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299025981 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298633643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298018685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297697577 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297323178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296105302 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294923484 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298418903 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.294603518 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296119865 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.298036708 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298995256 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29570869 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296635541 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295708151 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295891849 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295512184 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296534017 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299344942 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299852133 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29709701 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300005111 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.296735676 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.296879709 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.300692451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.297787915 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297216015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299062573 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299797818 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300159532 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298778638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298276924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.300081371 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300187496 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.297946641 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300271249 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.297997788 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.30115347 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301808021 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.301155753 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300711851 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298878269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.298165416 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298543699 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.297797641 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298710775 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300818643 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.30124683 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298742974 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300888503 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.29882315 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30172752 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300734065 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.29760581 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299007175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30157946 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299506879 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299215071 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301896748 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298708377 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.300984526 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.301523377 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298828128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299827609 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301642552 seconds)
  done (took 89.524352201 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301473851 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301297676 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300878166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301006117 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301768036 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.30161361 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302477651 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.301935724 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30136079 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301702546 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303000416 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301728077 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.302078149 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302360508 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302925488 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302201105 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302376647 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30334751 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303290709 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302733982 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.302829846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302847678 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302951382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302935334 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.303246631 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.30306869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302911263 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302339382 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304007474 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302993875 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303158101 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303183022 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304401703 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303386947 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304925348 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.304702748 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303657527 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303405202 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303600018 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303902884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.30422591 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304111006 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304691512 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305360505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305226677 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30432738 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304663458 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305218921 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305191648 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.305448837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303763402 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305023411 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304369361 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305016775 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304699032 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306158271 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305316334 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305445516 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304431799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305173868 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305737503 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305760477 seconds)
  done (took 82.034655543 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304579149 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306620726 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303574983 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.303668214 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306177913 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303544556 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305642191 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306613208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306088445 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306631165 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306618751 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303617262 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304192654 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307055586 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304050993 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304738675 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304362126 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303704112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30767992 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305315325 seconds)
  done (took 27.321715181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.304825093 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30795504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.305335317 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304942824 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307521555 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30509326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.308040498 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308377798 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304550558 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308748224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.308457682 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308188367 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30555697 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306216853 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.308987932 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.3056077 seconds)
  done (took 22.127226527 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305408672 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309393498 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.308027917 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307911659 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307545325 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.305839235 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.308681799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306139163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306596599 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309013021 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.309113335 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308938367 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30901814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309398553 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305768675 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.309246972 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307355798 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.306398061 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.309333775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308988756 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307908356 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30682968 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309951161 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310659056 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.308104571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.307017796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.307108592 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.307603074 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306781866 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310493687 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.307415663 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.30825441 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307899574 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.307845749 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310729271 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.307258589 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.310642879 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3108284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310633191 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310464216 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.311055268 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308424487 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.310983781 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.31136116 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.308254676 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310607156 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307875107 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308885796 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309100131 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307680432 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.311502799 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311885006 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311961422 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312308788 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313007857 seconds)
  done (took 73.208304333 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312773616 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311159862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309445208 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31137867 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312065372 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.309900895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.312571514 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311094433 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309091582 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312635325 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310417449 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313101333 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309573518 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310629737 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310821263 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312520805 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309981473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309892688 seconds)
  done (took 24.823696031 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310679298 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309646473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.31381904 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309836392 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311022808 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313473681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310644485 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313011506 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313209256 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311420792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310395556 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314179566 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313816224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314519799 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311574811 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311258493 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315517925 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315453005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312719714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311352181 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315939878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315227232 seconds)
  done (took 30.103152149 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.31399534 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.312646666 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.31323924 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.330600775 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.334014335 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.338184975 seconds)
  done (took 9.16747671 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323566656 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314243078 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31408554 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315514393 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314621569 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313151356 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312915034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313158406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315294834 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313063213 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312814425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316069382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316205929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313234094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315789231 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316272842 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312620114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314943597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315152156 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315184724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313664841 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316687543 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313822959 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313915608 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314087938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313118064 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31623702 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31483689 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31304269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31654236 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316230163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314232989 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316772394 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31440477 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317496128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317334408 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31445204 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317133908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31700425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314617415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317073953 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317547184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317440917 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314216308 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317540041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315099122 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314833334 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314596048 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315111662 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317664106 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317372855 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315311488 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318215307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318487515 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318592441 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319194551 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315738711 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316351572 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318796752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317015688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315367051 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318837003 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316562007 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316250245 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319144567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31722085 seconds)
  done (took 88.095138113 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317570441 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316768887 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317482956 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318391696 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316563286 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31779038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317118568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317528704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317964185 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317107692 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320478679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316588565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317324245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316402996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317698912 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317648495 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318530048 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317332443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318034944 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320628253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317739623 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317700575 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317589211 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317313167 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318529452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320257759 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318543612 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319727699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317164418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318461923 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318297349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31726411 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319051454 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318786093 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319246272 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31840135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318616255 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319461967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318375286 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321725247 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317663428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321371905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319553357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318933345 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319260258 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318907354 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319249079 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319402259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319439249 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320563601 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319746924 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320319196 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320695411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319916678 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31936054 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320289311 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319697331 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319549687 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321469503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323116532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320818344 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321011143 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323876193 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320477853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320588403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320674536 seconds)
  done (took 88.284857573 seconds)
done (took 1775.485754253 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.486619802 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.438980677 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321056218 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.345362258 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322142579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.323693696 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.338902439 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322152701 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.321267825 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.32211198 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321976895 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.530554738 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.37919706 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321887958 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322402999 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417893961 seconds)
  done (took 43.070349268 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.354027587 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327909608 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.457470198 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.351704045 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352545062 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.535281381 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387997058 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327625083 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.522183205 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.375468252 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.094607555 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354267026 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326822743 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.582795498 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346829003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.535603519 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.603998395 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.097914123 seconds)
  done (took 31.169262255 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.84286151 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.360794355 seconds)
  done (took 9.438394209 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348141644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327646142 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.328116621 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326246621 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.318874352 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.318446355 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325960882 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.322835233 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.648602122 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.475434686 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.329334577 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.339274013 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350663042 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.328370006 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325400691 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.368839596 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.534831914 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.326665921 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325568818 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334444745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.329399416 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.437491401 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.372977643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325355612 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47320235 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.665313847 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335730707 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33529504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.518393974 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327863782 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.327942781 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.328762104 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329746874 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.285177465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.787786426 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.339966095 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355333009 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337524702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326787866 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.491349056 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330191073 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335905029 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.322118129 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.784391307 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481614961 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.457866842 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.809424108 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.356135493 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.330899773 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.396557851 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329545725 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33103872 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376567885 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.160651142 seconds)
  done (took 113.380622855 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.376839687 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.711650636 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492975638 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.343879216 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.110403017 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.021590172 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.342950094 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.653724743 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.373840594 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324494885 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62173968 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.874020908 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341987047 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.345243246 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.96124022 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.369314572 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323413522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.131059586 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.343933838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.3267064 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863073094 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330173442 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.343867817 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.597958478 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.36538548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82177472 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.973286393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.819174671 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.348062027 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.324761969 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831621737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.348524663 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.342199637 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.326344123 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.607183964 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.7298608 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725157909 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.345704797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351627436 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.325997938 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.324963659 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818878816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.729206718 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.345473512 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345097364 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82347077 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.345638526 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.333713702 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32712428 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532009948 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.981273796 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326961678 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.927448736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.327195168 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.635171541 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.406340678 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37206013 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853362181 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346460957 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.463750792 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370339141 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326981599 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32745471 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336591041 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.330231274 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.718195827 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.619781478 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.327666923 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.71557121 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.848202289 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.346679347 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918333165 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.254355408 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.35360893 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.396884398 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.339086583 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.942278394 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863423481 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.378427793 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327320452 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704341533 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.347497485 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.63065138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345042835 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327264581 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874391113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.338109001 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.374728669 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.32778842 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.3294795 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.991511456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33226266 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.636218481 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.387314857 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.328513719 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.328309847 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.369274351 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.329401907 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.350580877 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.33301811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901167439 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.352297392 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.482520643 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.356421579 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330396905 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.354963057 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.330507482 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.331478568 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551675342 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.818083161 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.3593643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328646746 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.329869459 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.332495279 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.584209546 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.331320423 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.681106122 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.352223636 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330369635 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.336993687 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.087724208 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362697517 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331121868 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.333886824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254640557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.556008646 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.352085228 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.331917939 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330784558 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.351007189 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.722707235 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.35346987 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.364999093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332577397 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078516876 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.382118926 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.353076721 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.635444962 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.335663816 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331990868 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341249858 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333449744 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645353807 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.620034844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.505820386 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.335666087 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.357811997 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.05012175 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371206088 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472891535 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.353243753 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.418852072 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532150411 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.532654231 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.333153042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.972162648 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.335234721 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550466533 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.33382742 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.658435751 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864297204 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353877636 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339350542 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.076611767 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088514253 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.14382946 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.335895506 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.630355795 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.311583275 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.809164176 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.333108644 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.334415455 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.764142751 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.337345373 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.338671222 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.335040572 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.334155104 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.48738403 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510250672 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.994073598 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.33865519 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82864252 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360048531 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338222465 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.345467011 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.335728879 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.68396906 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397379937 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.338922396 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336083863 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.337211717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.338769925 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851077875 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.296622433 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.336801965 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489169543 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012952944 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.354971529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.352099861 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.97568638 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.406268032 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890667607 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.392147532 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.687891341 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.356625561 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.376563181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.949860652 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.428047881 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854212652 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357555789 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.337233846 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972926793 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.356921506 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430627034 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.336264043 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336792951 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912940064 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.356153679 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.340993142 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.85158226 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.361637209 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609478645 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.338121448 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361704427 seconds)
  done (took 1113.940920813 seconds)
done (took 1312.235344334 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337312033 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338073305 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.32318088 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.341938423 seconds)
  done (took 26.594030813 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34788646 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.348198081 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.345472175 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343443553 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.346766992 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.343623583 seconds)
  done (took 9.330592802 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.500626059 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344718586 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.345234583 seconds)
  done (took 19.444546774 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.576447528 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.767938337 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.722268333 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.853843559 seconds)
  done (took 11.176335436 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.346235565 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.345603173 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.345683551 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.347697894 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.348514383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.349454981 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.34724339 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.347993976 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.350069078 seconds)
  done (took 13.38190077 seconds)
done (took 81.182674493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.366899261 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.765549544 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.340649063 seconds)
    (4/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.390014998 seconds)
    (5/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.890235695 seconds)
    (6/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.349785147 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.623926259 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.38376397 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.381764072 seconds)
    (10/286) benchmarking ("sort", Int8, false)...
    done (took 4.369714481 seconds)
    (11/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368119893 seconds)
    (12/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.75697718 seconds)
    (13/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.853328427 seconds)
    (14/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.945873091 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.847022674 seconds)
    (16/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.363576189 seconds)
    (17/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.451066591 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.326665518 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.357707427 seconds)
    (20/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.423692948 seconds)
    (21/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.366799667 seconds)
    (22/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.320812476 seconds)
    (23/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.203458941 seconds)
    (24/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.370355207 seconds)
    (25/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.32092709 seconds)
    (26/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40600774 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.341188672 seconds)
    (28/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.754085967 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.494392213 seconds)
    (30/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.320320563 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.26424414 seconds)
    (32/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.232602879 seconds)
    (33/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.398371481 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.149388598 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.036356991 seconds)
    (36/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.322105527 seconds)
    (37/286) benchmarking ("sort", Float64, true)...
    done (took 6.342966786 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.268200435 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.785508769 seconds)
    (40/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.553122364 seconds)
    (41/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.516068444 seconds)
    (42/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.460888242 seconds)
    (43/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.587803704 seconds)
    (44/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.322914269 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.465127342 seconds)
    (46/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.094378223 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599869938 seconds)
    (48/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.322629374 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.340575487 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.482654489 seconds)
    (51/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.245595816 seconds)
    (52/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.276947231 seconds)
    (53/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.831674045 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.21245999 seconds)
    (55/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.123029026 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.487302331 seconds)
    (57/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.360534983 seconds)
    (58/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369542529 seconds)
    (59/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.322751244 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.525968065 seconds)
    (61/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.459945118 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.326125454 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.389414083 seconds)
    (64/286) benchmarking ("sort", Int64, false)...
    done (took 5.645860829 seconds)
    (65/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.896626556 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.370928207 seconds)
    (67/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.344011772 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 6.345479671 seconds)
    (69/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.479786572 seconds)
    (70/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.330436565 seconds)
    (71/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.834544281 seconds)
    (72/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447458171 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.350597874 seconds)
    (74/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.414647806 seconds)
    (75/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.231052009 seconds)
    (76/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355822568 seconds)
    (77/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.406095393 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.348278029 seconds)
    (79/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.463083494 seconds)
    (80/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.738424399 seconds)
    (81/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.367452452 seconds)
    (82/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.366407853 seconds)
    (83/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.3362876 seconds)
    (84/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436324227 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.720291797 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.740710787 seconds)
    (87/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.423291494 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.357810343 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.289176719 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.059749206 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.370017481 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.325647169 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.58497024 seconds)
    (94/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.636534584 seconds)
    (95/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.882639895 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.360577709 seconds)
    (97/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.840284153 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.963418431 seconds)
    (99/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.429004431 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.98605132 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.340084976 seconds)
    (102/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.372697619 seconds)
    (103/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.742796154 seconds)
    (104/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.465686452 seconds)
    (105/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.340966485 seconds)
    (106/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.434381526 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.325511313 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.327141541 seconds)
    (109/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.34776088 seconds)
    (110/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.940183366 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.873381161 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388397058 seconds)
    (113/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.25975286 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.361865069 seconds)
    (115/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37173139 seconds)
    (116/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.352492169 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.625013185 seconds)
    (118/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.326797988 seconds)
    (119/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.433973531 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.431766156 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.213894086 seconds)
    (122/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.070071316 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.611189026 seconds)
    (124/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.328018387 seconds)
    (125/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.541165483 seconds)
    (126/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.487766956 seconds)
    (127/286) benchmarking ("sort", Int8, true)...
    done (took 6.348907745 seconds)
    (128/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.43106832 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.025307774 seconds)
    (130/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.997144951 seconds)
    (131/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543710628 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.458374596 seconds)
    (133/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.348085507 seconds)
    (134/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.368026946 seconds)
    (135/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.861894447 seconds)
    (136/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.328713418 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.349215394 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.472335603 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.238073103 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375857301 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.368672057 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.283143397 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.92861344 seconds)
    (144/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.354738635 seconds)
    (145/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.671175706 seconds)
    (146/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.38396339 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.392884295 seconds)
    (148/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.736191959 seconds)
    (149/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.477470668 seconds)
    (150/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.400154652 seconds)
    (151/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.441330332 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.232388817 seconds)
    (153/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.365313143 seconds)
    (154/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.349898733 seconds)
    (155/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.369383574 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.330978192 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.050578951 seconds)
    (158/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.377286613 seconds)
    (159/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.075528425 seconds)
    (160/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.363315556 seconds)
    (161/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.311613391 seconds)
    (162/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.718157787 seconds)
    (163/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.352903335 seconds)
    (164/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.448413185 seconds)
    (165/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.163519944 seconds)
    (166/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.472352989 seconds)
    (167/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.225353303 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.220309383 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.42572296 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.101288129 seconds)
    (171/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.330226701 seconds)
    (172/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.371202679 seconds)
    (173/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.146452326 seconds)
    (174/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.377532665 seconds)
    (175/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.481329336 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.33102112 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.389430615 seconds)
    (178/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.649762586 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.392291028 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.393644583 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.291488033 seconds)
    (182/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.570488558 seconds)
    (183/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.028902614 seconds)
    (184/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.331548724 seconds)
    (185/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.349093663 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.332281845 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.481415608 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.430166016 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.60970438 seconds)
    (190/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.384500834 seconds)
    (191/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.331898397 seconds)
    (192/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.308895653 seconds)
    (193/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.185817041 seconds)
    (194/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.375327855 seconds)
    (195/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.643471869 seconds)
    (196/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.161891416 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.590846148 seconds)
    (198/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.992190235 seconds)
    (199/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.354904819 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.036619079 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.194836924 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 5.400955506 seconds)
    (203/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.341691231 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.35129648 seconds)
    (205/286) benchmarking ("sort", BigInt, false)...
    done (took 6.353515265 seconds)
    (206/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.043763609 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.382035425 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.246476227 seconds)
    (209/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.839712348 seconds)
    (210/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.464239588 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.61662598 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.414887785 seconds)
    (213/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.546777827 seconds)
    (214/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.400950272 seconds)
    (215/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.444183929 seconds)
    (216/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.074992281 seconds)
    (217/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.125791609 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.418568223 seconds)
    (219/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.928507566 seconds)
    (220/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.334536329 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.44067282 seconds)
    (222/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.354369479 seconds)
    (223/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.354037862 seconds)
    (224/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.364163332 seconds)
    (225/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.383866074 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.235577852 seconds)
    (227/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.172806235 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.340622825 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.60879407 seconds)
    (230/286) benchmarking ("sort", Float32, true)...
    done (took 6.390410955 seconds)
    (231/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.439876775 seconds)
    (232/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.37084029 seconds)
    (233/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.077197958 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.597324969 seconds)
    (235/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.377853309 seconds)
    (236/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.767889937 seconds)
    (237/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.488679766 seconds)
    (238/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.356559452 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.387458694 seconds)
    (240/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.373718119 seconds)
    (241/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.411896074 seconds)
    (242/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.914654605 seconds)
    (243/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.382159475 seconds)
    (244/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.744979257 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.367712918 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.004732156 seconds)
    (247/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.336655836 seconds)
    (248/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.895720255 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.60327842 seconds)
    (250/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.376833879 seconds)
    (251/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.357150313 seconds)
    (252/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.706178069 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.127042417 seconds)
    (254/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.36922408 seconds)
    (255/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.440485208 seconds)
    (256/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.255390404 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.357675367 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.790937993 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.806886149 seconds)
    (260/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.501107691 seconds)
    (261/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.355507962 seconds)
    (262/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.132823933 seconds)
    (263/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.471678072 seconds)
    (264/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.12188252 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.450472808 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.47922438 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.439341338 seconds)
    (268/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.778310924 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.494185599 seconds)
    (270/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.484624054 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.183825808 seconds)
    (272/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.098331836 seconds)
    (273/286) benchmarking ("sort", Float64, false)...
    done (took 5.753518013 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.399212825 seconds)
    (275/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.383763898 seconds)
    (276/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.346278267 seconds)
    (277/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.38370933 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.380705911 seconds)
    (279/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.338216426 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.356195222 seconds)
    (281/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.338703311 seconds)
    (282/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.284938787 seconds)
    (283/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.382341168 seconds)
    (284/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.34333677 seconds)
    (285/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.391746129 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.076773205 seconds)
  done (took 960.406321638 seconds)
done (took 961.663991657 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.391877329 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387736435 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.369681441 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.392074028 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.481442308 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.399443407 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.380285914 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.372463863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.41879128 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419873591 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.368881871 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.399513517 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.371520668 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370140179 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.37020367 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385608718 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.559876851 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369972705 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386996631 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.38060816 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.385834245 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368002475 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.420495117 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.3995351 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.374840974 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374620273 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.374269809 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.39064118 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.482438216 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.374319856 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374658477 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382050483 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.559933354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.370463313 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.366861591 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.391242491 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.382845742 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.380377048 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375723463 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403404051 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.139472019 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.396652551 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372666049 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.372582726 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.373674676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377084125 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372715445 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380439488 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388929949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387319408 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.146066935 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.413281849 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.377080428 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.374247791 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38409038 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.372487449 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.376088324 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389880837 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.392398503 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391009953 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.546365505 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.378364324 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.376070233 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.389849261 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.381045416 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.187981831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.394999187 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.378130165 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.141546243 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.405668468 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.193560508 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.408977321 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.375186517 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.388957241 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40621576 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.559144391 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.369683633 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.375764771 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.382848493 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.372102416 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.385538237 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38970567 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.381309743 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375691693 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390161605 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.403871312 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.38537088 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.376555398 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.385202578 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.394433836 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.383676566 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.387731986 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380040152 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371425983 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.385256223 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.379662594 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.378820208 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378743797 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.380938036 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386833876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.138995557 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421799053 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.373728629 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.373364358 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.374644698 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.390604606 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.137405959 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.404926867 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.399705295 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.425125065 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.378765342 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.5543355 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.380746773 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394792517 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.388973676 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380449422 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.374323203 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.553444946 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.025862078 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.412069899 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.379764878 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375957514 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395799129 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.379862611 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.374715101 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.566348012 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.379005301 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393250642 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498579817 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.388807151 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.409777321 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375725222 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382380295 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.40753183 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396441737 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.410166435 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.381370325 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396231215 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.394362933 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.376784006 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.389512372 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.390469382 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.38024909 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.385400842 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.373350634 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.411978299 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39258826 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393290138 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400715069 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499319154 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.376292065 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.552868662 seconds)
done (took 235.757095888 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.440212109 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.367457507 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.467526268 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.376316982 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.483216498 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.481855013 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.374074762 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.374323192 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.374473023 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.753237645 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.374313506 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.384588011 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.371126487 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.374182144 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460781104 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376215693 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.374285671 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.71858278 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.377812274 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451414533 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.379295074 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.375846356 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.377355775 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.757394429 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.377588931 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.37613643 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.452390298 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.379066551 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.722559308 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.377599889 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.377725207 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.723350684 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.471445831 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.395639593 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38796955 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384535127 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.484768264 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.4006073 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.460377555 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461201179 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.471173587 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.417452427 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.379845231 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.374784531 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380360475 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.379236286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.375809159 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.405692992 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.379140825 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.376936074 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.719377108 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.389330562 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.387095246 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.378179147 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.378562276 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399289365 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377110511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.381560828 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.472294851 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.382065567 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.445975649 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.760373247 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.757110441 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.380541557 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.382431328 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.378885367 seconds)
  done (took 151.47381749 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.447258992 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453503895 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.503277228 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400404302 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.431043831 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.506308341 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.401381718 seconds)
  done (took 11.429314512 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.388004804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383568156 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.431182285 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.431283722 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.382288567 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559877822 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382829654 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.393959323 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.380164149 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.435578434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.385030348 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.382036232 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.388366706 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.375419848 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429426179 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.393546101 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.500330736 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.383579911 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383112639 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.533611626 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380554143 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.389668932 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432655726 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.39328061 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.384216157 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389075856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.199265429 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383140148 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380428735 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.383026568 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380394634 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.45752842 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382936729 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382812905 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380600628 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499756023 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382366012 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380678262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.38408125 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.380869361 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383372832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384262288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.384046873 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381872396 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384343027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.40662502 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.384899313 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.38486739 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.38450055 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38463464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.434546831 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385377003 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.382673975 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.383353667 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.439898254 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39180994 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.385936653 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381593498 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386021963 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382995972 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.53589637 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.433214708 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.385522167 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.432099074 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38547131 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387026188 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.386130837 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.385922978 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439389064 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.38534651 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.433572821 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.384078569 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.571272351 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409194272 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387120595 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.387986533 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.388386689 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387115874 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.380434404 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.391498938 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385466359 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.387794821 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392213474 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383801104 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384351987 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.552755727 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.494671779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384493647 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.398025091 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.393539185 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.384801874 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438704957 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.387262034 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.385268797 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438600465 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.506562193 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.441901505 seconds)
  done (took 158.576185072 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.392624165 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.395738055 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389058431 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403432989 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.388433904 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.387700409 seconds)
  done (took 9.649901692 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.392233023 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.389974448 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.388172475 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.387958497 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.389470854 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389463247 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387634703 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390567376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.393255696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388204392 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.390501705 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390067505 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.39073643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.389416253 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.389754582 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388377341 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.389698693 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387279431 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390425841 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389552115 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.493829132 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389073317 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390014022 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.391050854 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.396287111 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.389313873 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.397152412 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.390789336 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.390879551 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394965848 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.411883999 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.391583208 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.391376236 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.397661252 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.395762467 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.392315828 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396352454 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.392129813 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.387483104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.391313581 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.392343899 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390567833 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391644434 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393269803 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.393336347 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.397257071 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397685625 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39844357 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.391715868 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392912811 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392662854 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.391517931 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.393353202 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.393628294 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393260534 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.416725232 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.399136601 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.392130221 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.39211303 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.394083224 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.394882413 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.394285718 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39406724 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398075023 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.389927153 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.393400562 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.39469256 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399135376 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393398866 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.392251275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394655952 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.390619597 seconds)
  done (took 102.687269346 seconds)
done (took 435.102052297 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.550865988 seconds)
  done (took 7.849370429 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.690931545 seconds)
  done (took 7.991187697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.872789325 seconds)
  done (took 25.177935466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.461610893 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.444133804 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.391959216 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.389118738 seconds)
  done (took 26.985953422 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.579440045 seconds)
  done (took 7.878695833 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.386927352 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.391438251 seconds)
  done (took 14.079309161 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.687332657 seconds)
  done (took 7.986501514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.431152286 seconds)
  done (took 7.735475062 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.414716913 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.414093939 seconds)
  done (took 14.143973514 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.368182575 seconds)
  done (took 7.668744441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.28501918 seconds)
  done (took 12.58638257 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.396456892 seconds)
  done (took 7.698406366 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.466222395 seconds)
  done (took 7.765354192 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.532061404 seconds)
  done (took 10.832176961 seconds)
done (took 167.681201371 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.386944977 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.392865634 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.388257562 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.387567109 seconds)
  done (took 26.855824844 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.429004305 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.429715421 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.42974562 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.439948129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432308911 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.429458994 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.421995592 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.420318888 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439812712 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.433129933 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432267596 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.431367626 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.433028903 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.431707481 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.431591168 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.432168912 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.440822751 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.431527836 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.422407058 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.433732295 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.396920721 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441023493 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432203014 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.398669978 seconds)
  done (took 35.596406183 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.9194497 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.467849989 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.550339676 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.448006265 seconds)
  done (took 7.687328798 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.448685036 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450415382 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.462619201 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.501085934 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.526074308 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.459852994 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421213213 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.419267354 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.404234038 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450506014 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.526559277 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.46696504 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.534843108 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.397607254 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.622053377 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.397256147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.396329822 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.450445876 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.502346387 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.517076746 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.397932279 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.449561963 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.453358741 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.468120874 seconds)
  done (took 36.426849362 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.398716157 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.416282732 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.397298034 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.396925828 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.406510925 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.396947137 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.398804296 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.399213551 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.398449991 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.403559512 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.397591938 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.410272301 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.398181156 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.398372198 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.404531734 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.399044916 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.404654921 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.398326067 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.398492224 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.405103122 seconds)
  done (took 29.331729599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.392602747 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.247015406 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.744145997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.648579515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.393683487 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.39310709 seconds)
  done (took 28.12426814 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.484203719 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.658659497 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.398291473 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.825333215 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.921465599 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.42011074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.400552936 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.678489286 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.06458909 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.079172547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.473826921 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.478151248 seconds)
  done (took 21.191054564 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.393654779 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.398874339 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.399762409 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.416373979 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.464631731 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.422873719 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.406864162 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.393665976 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.47187304 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.491001531 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.43012286 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.468096963 seconds)
  done (took 38.46483043 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481673854 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443982594 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.515139088 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479230599 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415175492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615188672 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.457602574 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187151212 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.423028541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669733131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400597742 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485689469 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655015062 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412746975 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402834406 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.498705088 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644141421 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956569662 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399051219 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.908532176 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421489434 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401159026 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.97183221 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666658251 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631055687 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379680507 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.657849727 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173083712 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741283193 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417568969 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408698712 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398009492 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672231887 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11804037 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515662352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643630754 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425044125 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.969274868 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.400997449 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.908623283 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404814322 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401886567 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409324152 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398181825 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333544941 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404281354 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176379823 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.426121008 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.11057497 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398571446 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717618508 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500714508 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403041553 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.985603395 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424756754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385638804 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.403141179 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498045846 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992302551 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.152362854 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40568713 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.341175714 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423705953 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.884798411 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107499833 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.426030868 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.404004501 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405015361 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520653958 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.896037567 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417267481 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539105843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.425939321 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062472446 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19318584 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435506122 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53936411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026303093 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413698486 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.343222762 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631269662 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178040353 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342403526 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.349605633 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.336376332 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196593252 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410089603 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.029759796 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430011934 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189497897 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675132636 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442948674 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427008447 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626623974 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.285537164 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402864597 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.424869668 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520739851 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424364634 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.1755257 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54334922 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.413302462 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660784567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.614606995 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407373943 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.544322552 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001996059 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44421091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424230908 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.403239551 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659562742 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.115300646 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448068897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419854349 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428815527 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.189749209 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232290866 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425584829 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.414655454 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405311811 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704536326 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.253093486 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299715535 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472921861 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413743536 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405203033 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.049344287 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255753118 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.287834205 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.637047075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43094532 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.421585494 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.404883553 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.675740823 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.421431702 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40956903 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.185668108 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628620986 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410821656 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687028549 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339331754 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544044172 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422411092 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.629213329 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.764781707 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.431369412 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667105611 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409117002 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425257982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423393643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426609151 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507189007 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428563768 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.418999545 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.669546454 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409462483 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.410665562 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.950264408 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.184233649 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413011121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.41775327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412382922 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101803037 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40059666 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408337792 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302216278 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421561678 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475944139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41232357 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656595698 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.973247338 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429911711 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.411983881 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.405455579 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631628871 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417640163 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.912005044 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4862568 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.966658396 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101338793 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441650143 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.343372227 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.120369786 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.101364111 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410568101 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608439874 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409211033 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65661592 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445427968 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409029566 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105066329 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430863396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.915092401 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.414663917 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422059575 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.414458354 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411278684 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.971919231 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221184257 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418134511 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.427573939 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554625501 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.423016862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344098987 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927858259 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415680479 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411199436 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.186238046 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446171397 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.927472222 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410966578 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700827231 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428142181 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726904714 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.028997552 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.446444094 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414906222 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425582189 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415146972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.42358626 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417951294 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.422007229 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.930729596 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.859278366 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981550531 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419295611 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053473865 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.878954315 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.43392227 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.319541102 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210373527 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369082188 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070969229 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690065964 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208795256 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.69968618 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977413741 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.797368478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.325489298 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724507336 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643669877 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.854338422 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.452281488 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726714096 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626219716 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446825927 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414358187 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.552497433 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.16863492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034237086 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435244866 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493498884 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187660773 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435809157 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.192937199 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.462508081 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.333749609 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907598624 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.074370364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.097748104 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421689585 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43755662 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284688268 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438954476 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943605096 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122264112 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444726019 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.998072225 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385112906 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.671955277 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.452098004 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411262184 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.292740441 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.428374937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.673128034 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733194594 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357217951 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425035187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042682636 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.289537687 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.420826795 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415365771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260230635 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42769222 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758869744 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.428731665 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.991488549 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442869932 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.349521425 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350723241 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.109075135 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420987934 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386106422 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978044729 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.419073202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434126603 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433948447 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273811448 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674893192 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.430421976 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.08750238 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663741939 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422263313 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440224827 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.420357309 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416625998 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.420955919 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.32005175 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652118404 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488436744 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.650703685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.573161795 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.323341414 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.001821399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659833323 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.3013233 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417732953 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72291787 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.152525847 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.435624053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415351393 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472639707 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418066483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457959775 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41752245 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461312478 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510937315 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678894559 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.458880893 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.429060596 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912510167 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449363519 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4211989 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.432498613 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513032749 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418939468 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 4.027692324 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19284022 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097660158 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269036358 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121182484 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757171539 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423123878 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428707557 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495174201 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576454232 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.951393059 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695951982 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5404126 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.423581682 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443692174 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435657484 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439329567 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640091556 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697610636 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.296340402 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421190506 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113649379 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.305140633 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432760062 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632904079 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989854659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055631356 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547419592 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432689844 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.262727008 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725666417 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.515107117 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422588058 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018250558 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.423813508 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.312289096 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.428691132 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43692245 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569599393 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734471658 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176664332 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.462967664 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.578985439 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.196960318 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969767825 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680664228 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.007381877 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687721033 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129157254 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253059846 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689106998 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492522657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685394641 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.567351174 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570543798 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.431428568 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.305600604 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425127871 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271501338 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.135807863 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43273777 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110862086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710093743 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.42816319 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.432995276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446937353 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.434253777 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648363437 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230701744 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649848324 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43460877 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430445393 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.418019897 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107145306 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.760275036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500721212 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.435422615 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707424618 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686013896 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450086844 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.877220515 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.135791344 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056461555 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401590009 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447259744 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424986523 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266297736 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110629676 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 4.031207892 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012915091 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088337406 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433468573 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709939595 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.431397316 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431532137 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710711521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.429408129 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.437001985 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699096232 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.131149746 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.349184915 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.453192859 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.001006764 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.36365557 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.659229153 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.512108871 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60691094 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442067917 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.931556042 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459720904 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547213188 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439352853 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.434580139 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434772916 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.189262707 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707936954 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432948244 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.421976516 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.41651665 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440605944 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531532958 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123831067 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458981337 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.104610174 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.779806104 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68593623 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430803877 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.415547571 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.432585999 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429852621 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.415599752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.704426532 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.440013631 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085196902 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.435225124 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.448605742 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432997356 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.646794144 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641895889 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.429001287 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715853633 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469068524 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451006774 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.331482035 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207169484 seconds)
  done (took 1720.864677866 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460215991 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.447194336 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.476165612 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.541583472 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.488757011 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.558057198 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.541622312 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457534153 seconds)
  done (took 53.311113048 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.438363569 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.591360232 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.464389387 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.43063013 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.440120428 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.43409694 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.964024329 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.463489418 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.4393677 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.440513382 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.435695296 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.444703076 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.185888043 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.440287512 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.450465928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.421401455 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.440091715 seconds)
  done (took 67.271465926 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.394499374 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.77900694 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.334155026 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.481319009 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.43528116 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.454349008 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.553310558 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.467184363 seconds)
  done (took 56.240986252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.448263156 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.448450585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.449109959 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.448257782 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.449312791 seconds)
  done (took 8.584599128 seconds)
done (took 2131.255485012 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.436040853 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.438704793 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.434901453 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437967757 seconds)
  done (took 7.088139805 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.412140403 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.167899279 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.414005533 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.434980866 seconds)
  done (took 18.769967167 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.447057784 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.432476959 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.270230573 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.180021622 seconds)
  done (took 5.79335367 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.184540967 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197328409 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.180195947 seconds)
  done (took 7.905576545 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.433410811 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.438879802 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.438850393 seconds)
  done (took 20.653317288 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.74309846 seconds)
  done (took 3.087097452 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.581488308 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.629547197 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.792856151 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.760128754 seconds)
  done (took 8.106403638 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.821835495 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.813232946 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.631861882 seconds)
  done (took 6.609066228 seconds)
done (took 92.236018488 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.893681915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.4546805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.65093746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.866895033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.664044324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.640177825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.723517925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.834815721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.371758884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.361784906 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.868839822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.664476104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.666325255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.454703506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.667851586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450268146 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.688378252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.927582391 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.433491764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440347753 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.729473551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.504068491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.695368127 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.519649675 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.68453426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.591515922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.094853212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451416337 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.452123918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.11134504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.592406679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.444828461 seconds)
  done (took 201.939826051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453238496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.433970673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434786913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.455531291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.436787443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.435095769 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.457766918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.456663557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.465840472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43561072 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.435886766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.455891553 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457039344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.457263084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.456997226 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436315686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435762538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.435945127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434547662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.436077794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436050516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.436542707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.456383208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.437671949 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.448209884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43679244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439810992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43708355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45820552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.445203521 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43711833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443715288 seconds)
  done (took 207.566115793 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.453421084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.437605042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456994196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.438085791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.458204684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.453205968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.438434953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439618465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437771569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.438260344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437795991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.457424126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.459509617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438425529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.460946833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448457861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.438954255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.438042346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.439697703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.443573968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.438424364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.439439367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438548806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439393252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.437804903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.437828081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441975878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.441220718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44836783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.452092628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44231793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439302847 seconds)
  done (took 207.558143523 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.6360922 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.445879865 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.446329741 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.386646672 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.446686249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.446010917 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.443907321 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645281116 seconds)
  done (took 15.246146071 seconds)
done (took 633.654493741 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.966900687 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.66606247 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.662051177 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.467546206 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.352794253 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.488444244 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.466855537 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.664706368 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.427938763 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.673223309 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.826756396 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.484821354 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.981387406 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464943533 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.750096501 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.579210922 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.40131886 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.52995991 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.817424269 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.120302142 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.757132739 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.059000329 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.6867229 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.420357841 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.994630767 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.065288191 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.410999469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.39047206 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.486007719 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.826490496 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.312606287 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.658046901 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.549243766 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.54379381 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.599976386 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.578553168 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.61146602 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.543677787 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.68942446 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.813178758 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.10418118 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.236159546 seconds)
  done (took 99.47996798 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.430927922 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.430476119 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.430538724 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.431486818 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.43243236 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.432156509 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.431374848 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.430930438 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.432109726 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.430435869 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.431052453 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.433406918 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.431770624 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.432637509 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.431497011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.432124322 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.431616875 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.434438518 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.432258453 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.431735519 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.432431603 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.432920318 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.43333375 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.432336555 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.433309911 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.432386275 seconds)
  done (took 38.585045187 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.451898872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.722575009 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.914080089 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.457161916 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451888436 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.456120677 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.546530753 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.45316272 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.454515554 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.455130954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.619712723 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454643374 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491445906 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.944408868 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4554509 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.452370704 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.453067492 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.451321376 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.731468553 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.462063884 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.572625979 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.453678137 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.546638444 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.463374757 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.482287465 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454459592 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.457619947 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.038324203 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.476215229 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.621824309 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.432665926 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.551063455 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.011409352 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.949745258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.4330062 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.462398545 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454891301 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.629377534 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.455981504 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.45468509 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.548588684 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.45588282 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.923179268 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.161563571 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.47684429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.455483137 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.063117036 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.648199931 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.762434917 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470995857 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.950353651 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.458772774 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457166045 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.457146794 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.752148083 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.461776838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.455739491 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.103796129 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481894469 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548972993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.457255752 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.455334681 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.738184564 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.45604388 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.728510329 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457364094 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.464201869 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.479556126 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.925034058 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.459293319 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.195708537 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.478752299 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.458176372 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.624102015 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.728050666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.100519164 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.482692711 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.744718583 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.027587842 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.568518241 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.459389149 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.032215889 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.572672354 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.459440408 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.458557739 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.459147161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.457780547 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510370095 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.547481883 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.115136141 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.194038469 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.136891819 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.574394423 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.470892164 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.458742165 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.105383403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.482245925 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.458351625 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.922615375 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.187504248 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.48035987 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46634512 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.193622597 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.482115874 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.553486917 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464253487 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.933522881 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.460642748 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.513583017 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.458972647 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.465517427 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.486801202 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.551869298 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.464050277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.459406904 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.155773393 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.653276987 seconds)
  done (took 193.069519983 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.455418696 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.453244284 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.454375226 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.452823787 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.45206129 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460658715 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.45358776 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.453428416 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.459660655 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.452984731 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.454176779 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.455298707 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.455951533 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459610376 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.488086446 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.46134558 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.112132093 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.454984417 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.464679745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.452985309 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.293056922 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.456882349 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.464658758 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455152977 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.45407879 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.456182327 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.483616898 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.456642276 seconds)
  done (took 155.689348186 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.462334901 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.136259557 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.482954719 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.619603127 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.487706867 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.459312465 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.616922777 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.529994106 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.483894829 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.460348983 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.460010204 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.82168775 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.463634802 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.080176815 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.694562271 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.641104955 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.078368497 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.484151693 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.460913231 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.459788602 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.622043966 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469096923 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.824125784 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.137188363 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.485024174 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.138157914 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.446648672 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.464362625 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.463013982 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.13983779 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.482236707 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.825493244 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.555575664 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.533827125 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.162189 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.102590074 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.1022774 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.641095124 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.46378917 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.461383428 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.461944582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.446322185 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.141413562 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.487167696 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.464092903 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.130829663 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486747595 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.464990953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.469954643 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.46098433 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.533582788 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.556170321 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.850785799 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.147094983 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.57789209 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.474826383 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.620993934 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.848638703 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.46716197 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0828593 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.447170152 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.148089588 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.487469692 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.447489669 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.465343836 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471032823 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.643746709 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.621759549 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083481176 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487751763 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.083110757 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.6666651 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.464147974 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.464163639 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.466827499 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.147137705 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.107114066 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.666684615 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.626881154 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.703392121 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.449854718 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.465939496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.449127153 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.55905837 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.464981116 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.149350027 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.107838621 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.489146979 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.467609325 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.467262707 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.468491218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.682173549 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.171511743 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.580250395 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.074802711 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.853542881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.833826326 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.467799478 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537278998 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.487150263 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.835065287 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.469574401 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.536167469 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916595702 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.835752517 seconds)
  done (took 176.963881581 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.753819341 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.919084505 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.576099156 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.636612762 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.127978482 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.066831055 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.903402711 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.619473974 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.591585468 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.755984444 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.794082694 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.559265228 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.709608439 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.55371319 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.259289597 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.56804706 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.593359365 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.629461527 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.641607456 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.613305391 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.217606215 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.784706915 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.680570249 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.579906461 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.571939945 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.375215762 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.083089576 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.042301557 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.673412495 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.960681445 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.038921498 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.740221834 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.549225084 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.274452683 seconds)
  done (took 71.814066176 seconds)
done (took 736.953212337 seconds)
SAVING RESULT...
DONE!
